/* empty css     */window.NodeList&&!NodeList.prototype.forEach&&(NodeList.prototype.forEach=function(r,e){e=e||window;for(var t=0;t<this.length;t++)r.call(e,this[t],t,this)});window.history.scrollRestoration&&(window.history.scrollRestoration="manual");var ri=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{};function D1(r){return r&&r.__esModule&&Object.prototype.hasOwnProperty.call(r,"default")?r.default:r}function U1(r){if(r.__esModule)return r;var e=r.default;if(typeof e=="function"){var t=function n(){return this instanceof n?Reflect.construct(e,arguments,this.constructor):e.apply(this,arguments)};t.prototype=e.prototype}else t={};return Object.defineProperty(t,"__esModule",{value:!0}),Object.keys(r).forEach(function(n){var i=Object.getOwnPropertyDescriptor(r,n);Object.defineProperty(t,n,i.get?i:{enumerable:!0,get:function(){return r[n]}})}),t}var N1=typeof ri=="object"&&ri&&ri.Object===Object&&ri,Z0=N1,O1=Z0,F1=typeof self=="object"&&self&&self.Object===Object&&self,B1=O1||F1||Function("return this")(),mr=B1,z1=mr,k1=z1.Symbol,nu=k1,Xg=nu,J0=Object.prototype,G1=J0.hasOwnProperty,H1=J0.toString,ro=Xg?Xg.toStringTag:void 0;function V1(r){var e=G1.call(r,ro),t=r[ro];try{r[ro]=void 0;var n=!0}catch{}var i=H1.call(r);return n&&(e?r[ro]=t:delete r[ro]),i}var W1=V1,X1=Object.prototype,q1=X1.toString;function Y1(r){return q1.call(r)}var $1=Y1,qg=nu,Z1=W1,J1=$1,K1="[object Null]",j1="[object Undefined]",Yg=qg?qg.toStringTag:void 0;function Q1(r){return r==null?r===void 0?j1:K1:Yg&&Yg in Object(r)?Z1(r):J1(r)}var Gd=Q1;function eT(r){return r!=null&&typeof r=="object"}var K0=eT,tT=Gd,nT=K0,iT="[object Arguments]";function rT(r){return nT(r)&&tT(r)==iT}var sT=rT,$g=sT,aT=K0,j0=Object.prototype,oT=j0.hasOwnProperty,lT=j0.propertyIsEnumerable;$g(function(){return arguments}());var Yc={exports:{}};function cT(){return!1}var uT=cT;Yc.exports;(function(r,e){var t=mr,n=uT,i=e&&!e.nodeType&&e,s=i&&!0&&r&&!r.nodeType&&r,o=s&&s.exports===i,c=o?t.Buffer:void 0,u=c?c.isBuffer:void 0,h=u||n;r.exports=h})(Yc,Yc.exports);Yc.exports;var $c={exports:{}};$c.exports;(function(r,e){var t=Z0,n=e&&!e.nodeType&&e,i=n&&!0&&r&&!r.nodeType&&r,s=i&&i.exports===n,o=s&&t.process,c=function(){try{var u=i&&i.require&&i.require("util").types;return u||o&&o.binding&&o.binding("util")}catch{}}();r.exports=c})($c,$c.exports);var hT=$c.exports,Zg=hT;Zg&&Zg.isTypedArray;function fT(r){var e=typeof r;return r!=null&&(e=="object"||e=="function")}var Q0=fT,dT=Gd,pT=Q0,mT="[object AsyncFunction]",gT="[object Function]",_T="[object GeneratorFunction]",vT="[object Proxy]";function xT(r){if(!pT(r))return!1;var e=dT(r);return e==gT||e==_T||e==mT||e==vT}var yT=xT,Jg=!1,fs,Ff,Bf,Oc,Fc,ev,Bc,zf,kf,Gf,tv,Hf,Vf,nv,iv;function Xn(){if(!Jg){Jg=!0;var r=navigator.userAgent,e=/(?:MSIE.(\d+\.\d+))|(?:(?:Firefox|GranParadiso|Iceweasel).(\d+\.\d+))|(?:Opera(?:.+Version.|.)(\d+\.\d+))|(?:AppleWebKit.(\d+(?:\.\d+)?))|(?:Trident\/\d+\.\d+.*rv:(\d+\.\d+))/.exec(r),t=/(Mac OS X)|(Windows)|(Linux)/.exec(r);if(Hf=/\b(iPhone|iP[ao]d)/.exec(r),Vf=/\b(iP[ao]d)/.exec(r),Gf=/Android/i.exec(r),nv=/FBAN\/\w+;/i.exec(r),iv=/Mobile/i.exec(r),tv=!!/Win64/.exec(r),e){fs=e[1]?parseFloat(e[1]):e[5]?parseFloat(e[5]):NaN,fs&&document&&document.documentMode&&(fs=document.documentMode);var n=/(?:Trident\/(\d+.\d+))/.exec(r);ev=n?parseFloat(n[1])+4:fs,Ff=e[2]?parseFloat(e[2]):NaN,Bf=e[3]?parseFloat(e[3]):NaN,Oc=e[4]?parseFloat(e[4]):NaN,Oc?(e=/(?:Chrome\/(\d+\.\d+))/.exec(r),Fc=e&&e[1]?parseFloat(e[1]):NaN):Fc=NaN}else fs=Ff=Bf=Fc=Oc=NaN;if(t){if(t[1]){var i=/(?:Mac OS X (\d+(?:[._]\d+)?))/.exec(r);Bc=i?parseFloat(i[1].replace("_",".")):!0}else Bc=!1;zf=!!t[2],kf=!!t[3]}else Bc=zf=kf=!1}}var Wf={ie:function(){return Xn()||fs},ieCompatibilityMode:function(){return Xn()||ev>fs},ie64:function(){return Wf.ie()&&tv},firefox:function(){return Xn()||Ff},opera:function(){return Xn()||Bf},webkit:function(){return Xn()||Oc},safari:function(){return Wf.webkit()},chrome:function(){return Xn()||Fc},windows:function(){return Xn()||zf},osx:function(){return Xn()||Bc},linux:function(){return Xn()||kf},iphone:function(){return Xn()||Hf},mobile:function(){return Xn()||Hf||Vf||Gf||iv},nativeApp:function(){return Xn()||nv},android:function(){return Xn()||Gf},ipad:function(){return Xn()||Vf}},bT=Wf,Wl=!!(typeof window<"u"&&window.document&&window.document.createElement),MT={canUseDOM:Wl,canUseWorkers:typeof Worker<"u",canUseEventListeners:Wl&&!!(window.addEventListener||window.attachEvent),canUseViewport:Wl&&!!window.screen,isInWorker:!Wl},ST=MT,rv=ST,sv;rv.canUseDOM&&(sv=document.implementation&&document.implementation.hasFeature&&document.implementation.hasFeature("","")!==!0);/**
 * Checks if an event is supported in the current execution environment.
 *
 * NOTE: This will not work correctly for non-generic events such as `change`,
 * `reset`, `load`, `error`, and `select`.
 *
 * Borrows from Modernizr.
 *
 * @param {string} eventNameSuffix Event name, e.g. "click".
 * @param {?boolean} capture Check if the capture phase is supported.
 * @return {boolean} True if the event is supported.
 * @internal
 * @license Modernizr 3.0.0pre (Custom Build) | MIT
 */function wT(r,e){if(!rv.canUseDOM||e&&!("addEventListener"in document))return!1;var t="on"+r,n=t in document;if(!n){var i=document.createElement("div");i.setAttribute(t,"return;"),n=typeof i[t]=="function"}return!n&&sv&&r==="wheel"&&(n=document.implementation.hasFeature("Events.wheel","3.0")),n}var ET=wT,AT=bT,TT=ET,Kg=10,jg=40,Qg=800;function CT(r){var e=0,t=0,n=0,i=0;return"detail"in r&&(t=r.detail),"wheelDelta"in r&&(t=-r.wheelDelta/120),"wheelDeltaY"in r&&(t=-r.wheelDeltaY/120),"wheelDeltaX"in r&&(e=-r.wheelDeltaX/120),"axis"in r&&r.axis===r.HORIZONTAL_AXIS&&(e=t,t=0),n=e*Kg,i=t*Kg,"deltaY"in r&&(i=r.deltaY),"deltaX"in r&&(n=r.deltaX),(n||i)&&r.deltaMode&&(r.deltaMode==1?(n*=jg,i*=jg):(n*=Qg,i*=Qg)),n&&!e&&(e=n<1?-1:1),i&&!t&&(t=i<1?-1:1),{spinX:e,spinY:t,pixelX:n,pixelY:i}}CT.getEventType=function(){return AT.firefox()?"DOMMouseScroll":TT("wheel")?"wheel":"mousewheel"};/**
 * @license
 * Copyright 2010-2023 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const iu="161",RT={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},LT={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},av=0,Xf=1,ov=2,PT=3,IT=0,Hd=1,lv=2,Fi=3,fr=0,On=1,Bi=2,cr=0,xs=1,qf=2,Yf=3,$f=4,cv=5,Nr=100,uv=101,hv=102,Zf=103,Jf=104,fv=200,dv=201,pv=202,mv=203,Zc=204,Jc=205,gv=206,_v=207,vv=208,xv=209,yv=210,bv=211,Mv=212,Sv=213,wv=214,Ev=0,Av=1,Tv=2,Mo=3,Cv=4,Rv=5,Lv=6,Pv=7,Wo=0,Iv=1,Dv=2,ur=0,Uv=1,Nv=2,Ov=3,Fv=4,Bv=5,zv=6,Kf="attached",kv="detached",ru=300,dr=301,zr=302,So=303,wo=304,Ra=306,Eo=1e3,Tn=1001,Ao=1002,sn=1003,Kc=1004,DT=1004,ds=1005,UT=1005,$t=1006,vo=1007,NT=1007,zi=1008,OT=1008,hr=1009,Gv=1010,Hv=1011,su=1012,Vd=1013,or=1014,xi=1015,Ea=1016,Wd=1017,Xd=1018,Or=1020,Vv=1021,Yn=1023,Wv=1024,Xv=1025,Fr=1026,ws=1027,qv=1028,qd=1029,Yv=1030,Yd=1031,$d=1033,zc=33776,kc=33777,Gc=33778,Hc=33779,jf=35840,Qf=35841,ed=35842,td=35843,Zd=36196,nd=37492,id=37496,rd=37808,sd=37809,ad=37810,od=37811,ld=37812,cd=37813,ud=37814,hd=37815,fd=37816,dd=37817,pd=37818,md=37819,gd=37820,_d=37821,Vc=36492,vd=36494,xd=36495,$v=36283,yd=36284,bd=36285,Md=36286,Zv=2200,Jv=2201,Kv=2202,To=2300,Co=2301,Wc=2302,ms=2400,gs=2401,Ro=2402,au=2500,Jd=2501,FT=0,BT=1,zT=2,Kd=3e3,Br=3001,jv=3200,Qv=3201,Gr=0,ex=1,si="",dn="srgb",Hi="srgb-linear",ou="display-p3",Xo="display-p3-linear",Lo="linear",Gt="srgb",Po="rec709",Io="p3",kT=0,us=7680,GT=7681,HT=7682,VT=7683,WT=34055,XT=34056,qT=5386,YT=512,$T=513,ZT=514,JT=515,KT=516,jT=517,QT=518,Sd=519,tx=512,nx=513,ix=514,jd=515,rx=516,sx=517,ax=518,ox=519,Do=35044,eC=35048,tC=35040,nC=35045,iC=35049,rC=35041,sC=35046,aC=35050,oC=35042,lC="100",wd="300 es",jc=1035,ki=2e3,Uo=2001;class gr{addEventListener(e,t){this._listeners===void 0&&(this._listeners={});const n=this._listeners;n[e]===void 0&&(n[e]=[]),n[e].indexOf(t)===-1&&n[e].push(t)}hasEventListener(e,t){if(this._listeners===void 0)return!1;const n=this._listeners;return n[e]!==void 0&&n[e].indexOf(t)!==-1}removeEventListener(e,t){if(this._listeners===void 0)return;const i=this._listeners[e];if(i!==void 0){const s=i.indexOf(t);s!==-1&&i.splice(s,1)}}dispatchEvent(e){if(this._listeners===void 0)return;const n=this._listeners[e.type];if(n!==void 0){e.target=this;const i=n.slice(0);for(let s=0,o=i.length;s<o;s++)i[s].call(this,e);e.target=null}}}const wn=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"];let e_=1234567;const ys=Math.PI/180,Aa=180/Math.PI;function oi(){const r=Math.random()*4294967295|0,e=Math.random()*4294967295|0,t=Math.random()*4294967295|0,n=Math.random()*4294967295|0;return(wn[r&255]+wn[r>>8&255]+wn[r>>16&255]+wn[r>>24&255]+"-"+wn[e&255]+wn[e>>8&255]+"-"+wn[e>>16&15|64]+wn[e>>24&255]+"-"+wn[t&63|128]+wn[t>>8&255]+"-"+wn[t>>16&255]+wn[t>>24&255]+wn[n&255]+wn[n>>8&255]+wn[n>>16&255]+wn[n>>24&255]).toLowerCase()}function jt(r,e,t){return Math.max(e,Math.min(t,r))}function Qd(r,e){return(r%e+e)%e}function cC(r,e,t,n,i){return n+(r-e)*(i-n)/(t-e)}function uC(r,e,t){return r!==e?(t-r)/(e-r):0}function xo(r,e,t){return(1-t)*r+t*e}function hC(r,e,t,n){return xo(r,e,1-Math.exp(-t*n))}function fC(r,e=1){return e-Math.abs(Qd(r,e*2)-e)}function dC(r,e,t){return r<=e?0:r>=t?1:(r=(r-e)/(t-e),r*r*(3-2*r))}function pC(r,e,t){return r<=e?0:r>=t?1:(r=(r-e)/(t-e),r*r*r*(r*(r*6-15)+10))}function mC(r,e){return r+Math.floor(Math.random()*(e-r+1))}function gC(r,e){return r+Math.random()*(e-r)}function _C(r){return r*(.5-Math.random())}function vC(r){r!==void 0&&(e_=r);let e=e_+=1831565813;return e=Math.imul(e^e>>>15,e|1),e^=e+Math.imul(e^e>>>7,e|61),((e^e>>>14)>>>0)/4294967296}function xC(r){return r*ys}function yC(r){return r*Aa}function Ed(r){return(r&r-1)===0&&r!==0}function bC(r){return Math.pow(2,Math.ceil(Math.log(r)/Math.LN2))}function Qc(r){return Math.pow(2,Math.floor(Math.log(r)/Math.LN2))}function MC(r,e,t,n,i){const s=Math.cos,o=Math.sin,c=s(t/2),u=o(t/2),h=s((e+n)/2),p=o((e+n)/2),g=s((e-n)/2),d=o((e-n)/2),m=s((n-e)/2),_=o((n-e)/2);switch(i){case"XYX":r.set(c*p,u*g,u*d,c*h);break;case"YZY":r.set(u*d,c*p,u*g,c*h);break;case"ZXZ":r.set(u*g,u*d,c*p,c*h);break;case"XZX":r.set(c*p,u*_,u*m,c*h);break;case"YXY":r.set(u*m,c*p,u*_,c*h);break;case"ZYZ":r.set(u*_,u*m,c*p,c*h);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+i)}}function Nn(r,e){switch(e.constructor){case Float32Array:return r;case Uint32Array:return r/4294967295;case Uint16Array:return r/65535;case Uint8Array:return r/255;case Int32Array:return Math.max(r/2147483647,-1);case Int16Array:return Math.max(r/32767,-1);case Int8Array:return Math.max(r/127,-1);default:throw new Error("Invalid component type.")}}function ht(r,e){switch(e.constructor){case Float32Array:return r;case Uint32Array:return Math.round(r*4294967295);case Uint16Array:return Math.round(r*65535);case Uint8Array:return Math.round(r*255);case Int32Array:return Math.round(r*2147483647);case Int16Array:return Math.round(r*32767);case Int8Array:return Math.round(r*127);default:throw new Error("Invalid component type.")}}const SC={DEG2RAD:ys,RAD2DEG:Aa,generateUUID:oi,clamp:jt,euclideanModulo:Qd,mapLinear:cC,inverseLerp:uC,lerp:xo,damp:hC,pingpong:fC,smoothstep:dC,smootherstep:pC,randInt:mC,randFloat:gC,randFloatSpread:_C,seededRandom:vC,degToRad:xC,radToDeg:yC,isPowerOfTwo:Ed,ceilPowerOfTwo:bC,floorPowerOfTwo:Qc,setQuaternionFromProperEuler:MC,normalize:ht,denormalize:Nn};class Le{constructor(e=0,t=0){Le.prototype.isVector2=!0,this.x=e,this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){return this.x=e,this.y=t,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e){return this.x+=e.x,this.y+=e.y,this}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){const t=this.x,n=this.y,i=e.elements;return this.x=i[0]*t+i[3]*n+i[6],this.y=i[1]*t+i[4]*n+i[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const n=this.dot(e)/t;return Math.acos(jt(n,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y;return t*t+n*n}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this}rotateAround(e,t){const n=Math.cos(t),i=Math.sin(t),s=this.x-e.x,o=this.y-e.y;return this.x=s*n-o*i+e.x,this.y=s*i+o*n+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class vt{constructor(e,t,n,i,s,o,c,u,h){vt.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1],e!==void 0&&this.set(e,t,n,i,s,o,c,u,h)}set(e,t,n,i,s,o,c,u,h){const p=this.elements;return p[0]=e,p[1]=i,p[2]=c,p[3]=t,p[4]=s,p[5]=u,p[6]=n,p[7]=o,p[8]=h,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],this}extractBasis(e,t,n){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(e){const t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,i=t.elements,s=this.elements,o=n[0],c=n[3],u=n[6],h=n[1],p=n[4],g=n[7],d=n[2],m=n[5],_=n[8],y=i[0],v=i[3],x=i[6],w=i[1],M=i[4],E=i[7],O=i[2],P=i[5],U=i[8];return s[0]=o*y+c*w+u*O,s[3]=o*v+c*M+u*P,s[6]=o*x+c*E+u*U,s[1]=h*y+p*w+g*O,s[4]=h*v+p*M+g*P,s[7]=h*x+p*E+g*U,s[2]=d*y+m*w+_*O,s[5]=d*v+m*M+_*P,s[8]=d*x+m*E+_*U,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[1],i=e[2],s=e[3],o=e[4],c=e[5],u=e[6],h=e[7],p=e[8];return t*o*p-t*c*h-n*s*p+n*c*u+i*s*h-i*o*u}invert(){const e=this.elements,t=e[0],n=e[1],i=e[2],s=e[3],o=e[4],c=e[5],u=e[6],h=e[7],p=e[8],g=p*o-c*h,d=c*u-p*s,m=h*s-o*u,_=t*g+n*d+i*m;if(_===0)return this.set(0,0,0,0,0,0,0,0,0);const y=1/_;return e[0]=g*y,e[1]=(i*h-p*n)*y,e[2]=(c*n-i*o)*y,e[3]=d*y,e[4]=(p*t-i*u)*y,e[5]=(i*s-c*t)*y,e[6]=m*y,e[7]=(n*u-h*t)*y,e[8]=(o*t-n*s)*y,this}transpose(){let e;const t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){const t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}setUvTransform(e,t,n,i,s,o,c){const u=Math.cos(s),h=Math.sin(s);return this.set(n*u,n*h,-n*(u*o+h*c)+o+e,-i*h,i*u,-i*(-h*o+u*c)+c+t,0,0,1),this}scale(e,t){return this.premultiply(Zh.makeScale(e,t)),this}rotate(e){return this.premultiply(Zh.makeRotation(-e)),this}translate(e,t){return this.premultiply(Zh.makeTranslation(e,t)),this}makeTranslation(e,t){return e.isVector2?this.set(1,0,e.x,0,1,e.y,0,0,1):this.set(1,0,e,0,1,t,0,0,1),this}makeRotation(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,n,t,0,0,0,1),this}makeScale(e,t){return this.set(e,0,0,0,t,0,0,0,1),this}equals(e){const t=this.elements,n=e.elements;for(let i=0;i<9;i++)if(t[i]!==n[i])return!1;return!0}fromArray(e,t=0){for(let n=0;n<9;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e}clone(){return new this.constructor().fromArray(this.elements)}}const Zh=new vt;function lx(r){for(let e=r.length-1;e>=0;--e)if(r[e]>=65535)return!0;return!1}const wC={Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array};function va(r,e){return new wC[r](e)}function No(r){return document.createElementNS("http://www.w3.org/1999/xhtml",r)}function cx(){const r=No("canvas");return r.style.display="block",r}const t_={};function bs(r){r in t_||(t_[r]=!0,console.warn(r))}const n_=new vt().set(.8224621,.177538,0,.0331941,.9668058,0,.0170827,.0723974,.9105199),i_=new vt().set(1.2249401,-.2249404,0,-.0420569,1.0420571,0,-.0196376,-.0786361,1.0982735),Xl={[Hi]:{transfer:Lo,primaries:Po,toReference:r=>r,fromReference:r=>r},[dn]:{transfer:Gt,primaries:Po,toReference:r=>r.convertSRGBToLinear(),fromReference:r=>r.convertLinearToSRGB()},[Xo]:{transfer:Lo,primaries:Io,toReference:r=>r.applyMatrix3(i_),fromReference:r=>r.applyMatrix3(n_)},[ou]:{transfer:Gt,primaries:Io,toReference:r=>r.convertSRGBToLinear().applyMatrix3(i_),fromReference:r=>r.applyMatrix3(n_).convertLinearToSRGB()}},EC=new Set([Hi,Xo]),Ut={enabled:!0,_workingColorSpace:Hi,get workingColorSpace(){return this._workingColorSpace},set workingColorSpace(r){if(!EC.has(r))throw new Error(`Unsupported working color space, "${r}".`);this._workingColorSpace=r},convert:function(r,e,t){if(this.enabled===!1||e===t||!e||!t)return r;const n=Xl[e].toReference,i=Xl[t].fromReference;return i(n(r))},fromWorkingColorSpace:function(r,e){return this.convert(r,this._workingColorSpace,e)},toWorkingColorSpace:function(r,e){return this.convert(r,e,this._workingColorSpace)},getPrimaries:function(r){return Xl[r].primaries},getTransfer:function(r){return r===si?Lo:Xl[r].transfer}};function Sa(r){return r<.04045?r*.0773993808:Math.pow(r*.9478672986+.0521327014,2.4)}function Jh(r){return r<.0031308?r*12.92:1.055*Math.pow(r,.41666)-.055}let Js;class ep{static getDataURL(e){if(/^data:/i.test(e.src)||typeof HTMLCanvasElement>"u")return e.src;let t;if(e instanceof HTMLCanvasElement)t=e;else{Js===void 0&&(Js=No("canvas")),Js.width=e.width,Js.height=e.height;const n=Js.getContext("2d");e instanceof ImageData?n.putImageData(e,0,0):n.drawImage(e,0,0,e.width,e.height),t=Js}return t.width>2048||t.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",e),t.toDataURL("image/jpeg",.6)):t.toDataURL("image/png")}static sRGBToLinear(e){if(typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&e instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&e instanceof ImageBitmap){const t=No("canvas");t.width=e.width,t.height=e.height;const n=t.getContext("2d");n.drawImage(e,0,0,e.width,e.height);const i=n.getImageData(0,0,e.width,e.height),s=i.data;for(let o=0;o<s.length;o++)s[o]=Sa(s[o]/255)*255;return n.putImageData(i,0,0),t}else if(e.data){const t=e.data.slice(0);for(let n=0;n<t.length;n++)t instanceof Uint8Array||t instanceof Uint8ClampedArray?t[n]=Math.floor(Sa(t[n]/255)*255):t[n]=Sa(t[n]);return{data:t,width:e.width,height:e.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),e}}let AC=0;class _s{constructor(e=null){this.isSource=!0,Object.defineProperty(this,"id",{value:AC++}),this.uuid=oi(),this.data=e,this.dataReady=!0,this.version=0}set needsUpdate(e){e===!0&&this.version++}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.images[this.uuid]!==void 0)return e.images[this.uuid];const n={uuid:this.uuid,url:""},i=this.data;if(i!==null){let s;if(Array.isArray(i)){s=[];for(let o=0,c=i.length;o<c;o++)i[o].isDataTexture?s.push(Kh(i[o].image)):s.push(Kh(i[o]))}else s=Kh(i);n.url=s}return t||(e.images[this.uuid]=n),n}}function Kh(r){return typeof HTMLImageElement<"u"&&r instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&r instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&r instanceof ImageBitmap?ep.getDataURL(r):r.data?{data:Array.from(r.data),width:r.width,height:r.height,type:r.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let TC=0;class Qt extends gr{constructor(e=Qt.DEFAULT_IMAGE,t=Qt.DEFAULT_MAPPING,n=Tn,i=Tn,s=$t,o=zi,c=Yn,u=hr,h=Qt.DEFAULT_ANISOTROPY,p=si){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:TC++}),this.uuid=oi(),this.name="",this.source=new _s(e),this.mipmaps=[],this.mapping=t,this.channel=0,this.wrapS=n,this.wrapT=i,this.magFilter=s,this.minFilter=o,this.anisotropy=h,this.format=c,this.internalFormat=null,this.type=u,this.offset=new Le(0,0),this.repeat=new Le(1,1),this.center=new Le(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new vt,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,typeof p=="string"?this.colorSpace=p:(bs("THREE.Texture: Property .encoding has been replaced by .colorSpace."),this.colorSpace=p===Br?dn:si),this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.needsPMREMUpdate=!1}get image(){return this.source.data}set image(e=null){this.source.data=e}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(e){return this.name=e.name,this.source=e.source,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.channel=e.channel,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.colorSpace=e.colorSpace,this.userData=JSON.parse(JSON.stringify(e.userData)),this.needsUpdate=!0,this}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.textures[this.uuid]!==void 0)return e.textures[this.uuid];const n={metadata:{version:4.6,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(e).uuid,mapping:this.mapping,channel:this.channel,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,internalFormat:this.internalFormat,type:this.type,colorSpace:this.colorSpace,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(n.userData=this.userData),t||(e.textures[this.uuid]=n),n}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(e){if(this.mapping!==ru)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case Eo:e.x=e.x-Math.floor(e.x);break;case Tn:e.x=e.x<0?0:1;break;case Ao:Math.abs(Math.floor(e.x)%2)===1?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x);break}if(e.y<0||e.y>1)switch(this.wrapT){case Eo:e.y=e.y-Math.floor(e.y);break;case Tn:e.y=e.y<0?0:1;break;case Ao:Math.abs(Math.floor(e.y)%2)===1?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y);break}return this.flipY&&(e.y=1-e.y),e}set needsUpdate(e){e===!0&&(this.version++,this.source.needsUpdate=!0)}get encoding(){return bs("THREE.Texture: Property .encoding has been replaced by .colorSpace."),this.colorSpace===dn?Br:Kd}set encoding(e){bs("THREE.Texture: Property .encoding has been replaced by .colorSpace."),this.colorSpace=e===Br?dn:si}}Qt.DEFAULT_IMAGE=null;Qt.DEFAULT_MAPPING=ru;Qt.DEFAULT_ANISOTROPY=1;class Nt{constructor(e=0,t=0,n=0,i=1){Nt.prototype.isVector4=!0,this.x=e,this.y=t,this.z=n,this.w=i}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,t,n,i){return this.x=e,this.y=t,this.z=n,this.w=i,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w!==void 0?e.w:1,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){const t=this.x,n=this.y,i=this.z,s=this.w,o=e.elements;return this.x=o[0]*t+o[4]*n+o[8]*i+o[12]*s,this.y=o[1]*t+o[5]*n+o[9]*i+o[13]*s,this.z=o[2]*t+o[6]*n+o[10]*i+o[14]*s,this.w=o[3]*t+o[7]*n+o[11]*i+o[15]*s,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);const t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}setAxisAngleFromRotationMatrix(e){let t,n,i,s;const u=e.elements,h=u[0],p=u[4],g=u[8],d=u[1],m=u[5],_=u[9],y=u[2],v=u[6],x=u[10];if(Math.abs(p-d)<.01&&Math.abs(g-y)<.01&&Math.abs(_-v)<.01){if(Math.abs(p+d)<.1&&Math.abs(g+y)<.1&&Math.abs(_+v)<.1&&Math.abs(h+m+x-3)<.1)return this.set(1,0,0,0),this;t=Math.PI;const M=(h+1)/2,E=(m+1)/2,O=(x+1)/2,P=(p+d)/4,U=(g+y)/4,V=(_+v)/4;return M>E&&M>O?M<.01?(n=0,i=.707106781,s=.707106781):(n=Math.sqrt(M),i=P/n,s=U/n):E>O?E<.01?(n=.707106781,i=0,s=.707106781):(i=Math.sqrt(E),n=P/i,s=V/i):O<.01?(n=.707106781,i=.707106781,s=0):(s=Math.sqrt(O),n=U/s,i=V/s),this.set(n,i,s,t),this}let w=Math.sqrt((v-_)*(v-_)+(g-y)*(g-y)+(d-p)*(d-p));return Math.abs(w)<.001&&(w=1),this.x=(v-_)/w,this.y=(g-y)/w,this.z=(d-p)/w,this.w=Math.acos((h+m+x-1)/2),this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this.w=Math.max(e.w,Math.min(t.w,this.w)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this.w=Math.max(e,Math.min(t,this.w)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this.w=Math.trunc(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this.w=e.w+(t.w-e.w)*n,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class ux extends gr{constructor(e=1,t=1,n={}){super(),this.isRenderTarget=!0,this.width=e,this.height=t,this.depth=1,this.scissor=new Nt(0,0,e,t),this.scissorTest=!1,this.viewport=new Nt(0,0,e,t);const i={width:e,height:t,depth:1};n.encoding!==void 0&&(bs("THREE.WebGLRenderTarget: option.encoding has been replaced by option.colorSpace."),n.colorSpace=n.encoding===Br?dn:si),n=Object.assign({generateMipmaps:!1,internalFormat:null,minFilter:$t,depthBuffer:!0,stencilBuffer:!1,depthTexture:null,samples:0},n),this.texture=new Qt(i,n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.colorSpace),this.texture.isRenderTargetTexture=!0,this.texture.flipY=!1,this.texture.generateMipmaps=n.generateMipmaps,this.texture.internalFormat=n.internalFormat,this.depthBuffer=n.depthBuffer,this.stencilBuffer=n.stencilBuffer,this.depthTexture=n.depthTexture,this.samples=n.samples}setSize(e,t,n=1){(this.width!==e||this.height!==t||this.depth!==n)&&(this.width=e,this.height=t,this.depth=n,this.texture.image.width=e,this.texture.image.height=t,this.texture.image.depth=n,this.dispose()),this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}clone(){return new this.constructor().copy(this)}copy(e){this.width=e.width,this.height=e.height,this.depth=e.depth,this.scissor.copy(e.scissor),this.scissorTest=e.scissorTest,this.viewport.copy(e.viewport),this.texture=e.texture.clone(),this.texture.isRenderTargetTexture=!0;const t=Object.assign({},e.texture.image);return this.texture.source=new _s(t),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,e.depthTexture!==null&&(this.depthTexture=e.depthTexture.clone()),this.samples=e.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class Ri extends ux{constructor(e=1,t=1,n={}){super(e,t,n),this.isWebGLRenderTarget=!0}}class lu extends Qt{constructor(e=null,t=1,n=1,i=1){super(null),this.isDataArrayTexture=!0,this.image={data:e,width:t,height:n,depth:i},this.magFilter=sn,this.minFilter=sn,this.wrapR=Tn,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class CC extends Ri{constructor(e=1,t=1,n=1,i={}){super(e,t,i),this.isWebGLArrayRenderTarget=!0,this.depth=n,this.texture=new lu(null,e,t,n),this.texture.isRenderTargetTexture=!0}}class tp extends Qt{constructor(e=null,t=1,n=1,i=1){super(null),this.isData3DTexture=!0,this.image={data:e,width:t,height:n,depth:i},this.magFilter=sn,this.minFilter=sn,this.wrapR=Tn,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class RC extends Ri{constructor(e=1,t=1,n=1,i={}){super(e,t,i),this.isWebGL3DRenderTarget=!0,this.depth=n,this.texture=new tp(null,e,t,n),this.texture.isRenderTargetTexture=!0}}class LC extends Ri{constructor(e=1,t=1,n=1,i={}){super(e,t,i),this.isWebGLMultipleRenderTargets=!0;const s=this.texture;this.texture=[];for(let o=0;o<n;o++)this.texture[o]=s.clone(),this.texture[o].isRenderTargetTexture=!0}setSize(e,t,n=1){if(this.width!==e||this.height!==t||this.depth!==n){this.width=e,this.height=t,this.depth=n;for(let i=0,s=this.texture.length;i<s;i++)this.texture[i].image.width=e,this.texture[i].image.height=t,this.texture[i].image.depth=n;this.dispose()}this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}copy(e){this.dispose(),this.width=e.width,this.height=e.height,this.depth=e.depth,this.scissor.copy(e.scissor),this.scissorTest=e.scissorTest,this.viewport.copy(e.viewport),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,e.depthTexture!==null&&(this.depthTexture=e.depthTexture.clone()),this.texture.length=0;for(let t=0,n=e.texture.length;t<n;t++)this.texture[t]=e.texture[t].clone(),this.texture[t].isRenderTargetTexture=!0;return this}}class $n{constructor(e=0,t=0,n=0,i=1){this.isQuaternion=!0,this._x=e,this._y=t,this._z=n,this._w=i}static slerpFlat(e,t,n,i,s,o,c){let u=n[i+0],h=n[i+1],p=n[i+2],g=n[i+3];const d=s[o+0],m=s[o+1],_=s[o+2],y=s[o+3];if(c===0){e[t+0]=u,e[t+1]=h,e[t+2]=p,e[t+3]=g;return}if(c===1){e[t+0]=d,e[t+1]=m,e[t+2]=_,e[t+3]=y;return}if(g!==y||u!==d||h!==m||p!==_){let v=1-c;const x=u*d+h*m+p*_+g*y,w=x>=0?1:-1,M=1-x*x;if(M>Number.EPSILON){const O=Math.sqrt(M),P=Math.atan2(O,x*w);v=Math.sin(v*P)/O,c=Math.sin(c*P)/O}const E=c*w;if(u=u*v+d*E,h=h*v+m*E,p=p*v+_*E,g=g*v+y*E,v===1-c){const O=1/Math.sqrt(u*u+h*h+p*p+g*g);u*=O,h*=O,p*=O,g*=O}}e[t]=u,e[t+1]=h,e[t+2]=p,e[t+3]=g}static multiplyQuaternionsFlat(e,t,n,i,s,o){const c=n[i],u=n[i+1],h=n[i+2],p=n[i+3],g=s[o],d=s[o+1],m=s[o+2],_=s[o+3];return e[t]=c*_+p*g+u*m-h*d,e[t+1]=u*_+p*d+h*g-c*m,e[t+2]=h*_+p*m+c*d-u*g,e[t+3]=p*_-c*g-u*d-h*m,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,t,n,i){return this._x=e,this._y=t,this._z=n,this._w=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,t=!0){const n=e._x,i=e._y,s=e._z,o=e._order,c=Math.cos,u=Math.sin,h=c(n/2),p=c(i/2),g=c(s/2),d=u(n/2),m=u(i/2),_=u(s/2);switch(o){case"XYZ":this._x=d*p*g+h*m*_,this._y=h*m*g-d*p*_,this._z=h*p*_+d*m*g,this._w=h*p*g-d*m*_;break;case"YXZ":this._x=d*p*g+h*m*_,this._y=h*m*g-d*p*_,this._z=h*p*_-d*m*g,this._w=h*p*g+d*m*_;break;case"ZXY":this._x=d*p*g-h*m*_,this._y=h*m*g+d*p*_,this._z=h*p*_+d*m*g,this._w=h*p*g-d*m*_;break;case"ZYX":this._x=d*p*g-h*m*_,this._y=h*m*g+d*p*_,this._z=h*p*_-d*m*g,this._w=h*p*g+d*m*_;break;case"YZX":this._x=d*p*g+h*m*_,this._y=h*m*g+d*p*_,this._z=h*p*_-d*m*g,this._w=h*p*g-d*m*_;break;case"XZY":this._x=d*p*g-h*m*_,this._y=h*m*g-d*p*_,this._z=h*p*_+d*m*g,this._w=h*p*g+d*m*_;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+o)}return t===!0&&this._onChangeCallback(),this}setFromAxisAngle(e,t){const n=t/2,i=Math.sin(n);return this._x=e.x*i,this._y=e.y*i,this._z=e.z*i,this._w=Math.cos(n),this._onChangeCallback(),this}setFromRotationMatrix(e){const t=e.elements,n=t[0],i=t[4],s=t[8],o=t[1],c=t[5],u=t[9],h=t[2],p=t[6],g=t[10],d=n+c+g;if(d>0){const m=.5/Math.sqrt(d+1);this._w=.25/m,this._x=(p-u)*m,this._y=(s-h)*m,this._z=(o-i)*m}else if(n>c&&n>g){const m=2*Math.sqrt(1+n-c-g);this._w=(p-u)/m,this._x=.25*m,this._y=(i+o)/m,this._z=(s+h)/m}else if(c>g){const m=2*Math.sqrt(1+c-n-g);this._w=(s-h)/m,this._x=(i+o)/m,this._y=.25*m,this._z=(u+p)/m}else{const m=2*Math.sqrt(1+g-n-c);this._w=(o-i)/m,this._x=(s+h)/m,this._y=(u+p)/m,this._z=.25*m}return this._onChangeCallback(),this}setFromUnitVectors(e,t){let n=e.dot(t)+1;return n<Number.EPSILON?(n=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=n):(this._x=0,this._y=-e.z,this._z=e.y,this._w=n)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x,this._w=n),this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(jt(this.dot(e),-1,1)))}rotateTowards(e,t){const n=this.angleTo(e);if(n===0)return this;const i=Math.min(1,t/n);return this.slerp(e,i),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return e===0?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e){return this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,t){const n=e._x,i=e._y,s=e._z,o=e._w,c=t._x,u=t._y,h=t._z,p=t._w;return this._x=n*p+o*c+i*h-s*u,this._y=i*p+o*u+s*c-n*h,this._z=s*p+o*h+n*u-i*c,this._w=o*p-n*c-i*u-s*h,this._onChangeCallback(),this}slerp(e,t){if(t===0)return this;if(t===1)return this.copy(e);const n=this._x,i=this._y,s=this._z,o=this._w;let c=o*e._w+n*e._x+i*e._y+s*e._z;if(c<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,c=-c):this.copy(e),c>=1)return this._w=o,this._x=n,this._y=i,this._z=s,this;const u=1-c*c;if(u<=Number.EPSILON){const m=1-t;return this._w=m*o+t*this._w,this._x=m*n+t*this._x,this._y=m*i+t*this._y,this._z=m*s+t*this._z,this.normalize(),this}const h=Math.sqrt(u),p=Math.atan2(h,c),g=Math.sin((1-t)*p)/h,d=Math.sin(t*p)/h;return this._w=o*g+this._w*d,this._x=n*g+this._x*d,this._y=i*g+this._y*d,this._z=s*g+this._z*d,this._onChangeCallback(),this}slerpQuaternions(e,t,n){return this.copy(e).slerp(t,n)}random(){const e=Math.random(),t=Math.sqrt(1-e),n=Math.sqrt(e),i=2*Math.PI*Math.random(),s=2*Math.PI*Math.random();return this.set(t*Math.cos(i),n*Math.sin(s),n*Math.cos(s),t*Math.sin(i))}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,t=0){return this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}fromBufferAttribute(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this._onChangeCallback(),this}toJSON(){return this.toArray()}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class F{constructor(e=0,t=0,n=0){F.prototype.isVector3=!0,this.x=e,this.y=t,this.z=n}set(e,t,n){return n===void 0&&(n=this.z),this.x=e,this.y=t,this.z=n,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}applyEuler(e){return this.applyQuaternion(r_.setFromEuler(e))}applyAxisAngle(e,t){return this.applyQuaternion(r_.setFromAxisAngle(e,t))}applyMatrix3(e){const t=this.x,n=this.y,i=this.z,s=e.elements;return this.x=s[0]*t+s[3]*n+s[6]*i,this.y=s[1]*t+s[4]*n+s[7]*i,this.z=s[2]*t+s[5]*n+s[8]*i,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){const t=this.x,n=this.y,i=this.z,s=e.elements,o=1/(s[3]*t+s[7]*n+s[11]*i+s[15]);return this.x=(s[0]*t+s[4]*n+s[8]*i+s[12])*o,this.y=(s[1]*t+s[5]*n+s[9]*i+s[13])*o,this.z=(s[2]*t+s[6]*n+s[10]*i+s[14])*o,this}applyQuaternion(e){const t=this.x,n=this.y,i=this.z,s=e.x,o=e.y,c=e.z,u=e.w,h=2*(o*i-c*n),p=2*(c*t-s*i),g=2*(s*n-o*t);return this.x=t+u*h+o*g-c*p,this.y=n+u*p+c*h-s*g,this.z=i+u*g+s*p-o*h,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){const t=this.x,n=this.y,i=this.z,s=e.elements;return this.x=s[0]*t+s[4]*n+s[8]*i,this.y=s[1]*t+s[5]*n+s[9]*i,this.z=s[2]*t+s[6]*n+s[10]*i,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this}cross(e){return this.crossVectors(this,e)}crossVectors(e,t){const n=e.x,i=e.y,s=e.z,o=t.x,c=t.y,u=t.z;return this.x=i*u-s*c,this.y=s*o-n*u,this.z=n*c-i*o,this}projectOnVector(e){const t=e.lengthSq();if(t===0)return this.set(0,0,0);const n=e.dot(this)/t;return this.copy(e).multiplyScalar(n)}projectOnPlane(e){return jh.copy(this).projectOnVector(e),this.sub(jh)}reflect(e){return this.sub(jh.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const n=this.dot(e)/t;return Math.acos(jt(n,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y,i=this.z-e.z;return t*t+n*n+i*i}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,t,n){const i=Math.sin(t)*e;return this.x=i*Math.sin(n),this.y=Math.cos(t)*e,this.z=i*Math.cos(n),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,t,n){return this.x=e*Math.sin(t),this.y=n,this.z=e*Math.cos(t),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this}setFromMatrixScale(e){const t=this.setFromMatrixColumn(e,0).length(),n=this.setFromMatrixColumn(e,1).length(),i=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=n,this.z=i,this}setFromMatrixColumn(e,t){return this.fromArray(e.elements,t*4)}setFromMatrix3Column(e,t){return this.fromArray(e.elements,t*3)}setFromEuler(e){return this.x=e._x,this.y=e._y,this.z=e._z,this}setFromColor(e){return this.x=e.r,this.y=e.g,this.z=e.b,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const e=(Math.random()-.5)*2,t=Math.random()*Math.PI*2,n=Math.sqrt(1-e**2);return this.x=n*Math.cos(t),this.y=n*Math.sin(t),this.z=e,this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const jh=new F,r_=new $n;class Fn{constructor(e=new F(1/0,1/0,1/0),t=new F(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromArray(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t+=3)this.expandByPoint(Ei.fromArray(e,t));return this}setFromBufferAttribute(e){this.makeEmpty();for(let t=0,n=e.count;t<n;t++)this.expandByPoint(Ei.fromBufferAttribute(e,t));return this}setFromPoints(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const n=Ei.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}setFromObject(e,t=!1){return this.makeEmpty(),this.expandByObject(e,t)}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e,t=!1){e.updateWorldMatrix(!1,!1);const n=e.geometry;if(n!==void 0){const s=n.getAttribute("position");if(t===!0&&s!==void 0&&e.isInstancedMesh!==!0)for(let o=0,c=s.count;o<c;o++)e.isMesh===!0?e.getVertexPosition(o,Ei):Ei.fromBufferAttribute(s,o),Ei.applyMatrix4(e.matrixWorld),this.expandByPoint(Ei);else e.boundingBox!==void 0?(e.boundingBox===null&&e.computeBoundingBox(),ql.copy(e.boundingBox)):(n.boundingBox===null&&n.computeBoundingBox(),ql.copy(n.boundingBox)),ql.applyMatrix4(e.matrixWorld),this.union(ql)}const i=e.children;for(let s=0,o=i.length;s<o;s++)this.expandByObject(i[s],t);return this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z)}intersectsSphere(e){return this.clampPoint(e.center,Ei),Ei.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let t,n;return e.normal.x>0?(t=e.normal.x*this.min.x,n=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,n=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,n+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,n+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,n+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,n+=e.normal.z*this.min.z),t<=-e.constant&&n>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(so),Yl.subVectors(this.max,so),Ks.subVectors(e.a,so),js.subVectors(e.b,so),Qs.subVectors(e.c,so),Ar.subVectors(js,Ks),Tr.subVectors(Qs,js),es.subVectors(Ks,Qs);let t=[0,-Ar.z,Ar.y,0,-Tr.z,Tr.y,0,-es.z,es.y,Ar.z,0,-Ar.x,Tr.z,0,-Tr.x,es.z,0,-es.x,-Ar.y,Ar.x,0,-Tr.y,Tr.x,0,-es.y,es.x,0];return!Qh(t,Ks,js,Qs,Yl)||(t=[1,0,0,0,1,0,0,0,1],!Qh(t,Ks,js,Qs,Yl))?!1:($l.crossVectors(Ar,Tr),t=[$l.x,$l.y,$l.z],Qh(t,Ks,js,Qs,Yl))}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return this.clampPoint(e,Ei).distanceTo(e)}getBoundingSphere(e){return this.isEmpty()?e.makeEmpty():(this.getCenter(e.center),e.radius=this.getSize(Ei).length()*.5),e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()?this:(er[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),er[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),er[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),er[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),er[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),er[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),er[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),er[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(er),this)}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}const er=[new F,new F,new F,new F,new F,new F,new F,new F],Ei=new F,ql=new Fn,Ks=new F,js=new F,Qs=new F,Ar=new F,Tr=new F,es=new F,so=new F,Yl=new F,$l=new F,ts=new F;function Qh(r,e,t,n,i){for(let s=0,o=r.length-3;s<=o;s+=3){ts.fromArray(r,s);const c=i.x*Math.abs(ts.x)+i.y*Math.abs(ts.y)+i.z*Math.abs(ts.z),u=e.dot(ts),h=t.dot(ts),p=n.dot(ts);if(Math.max(-Math.max(u,h,p),Math.min(u,h,p))>c)return!1}return!0}const PC=new Fn,ao=new F,ef=new F;class Cn{constructor(e=new F,t=-1){this.isSphere=!0,this.center=e,this.radius=t}set(e,t){return this.center.copy(e),this.radius=t,this}setFromPoints(e,t){const n=this.center;t!==void 0?n.copy(t):PC.setFromPoints(e).getCenter(n);let i=0;for(let s=0,o=e.length;s<o;s++)i=Math.max(i,n.distanceToSquared(e[s]));return this.radius=Math.sqrt(i),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){const t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,t){const n=this.center.distanceToSquared(e);return t.copy(e),n>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(e){return this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){if(this.isEmpty())return this.center.copy(e),this.radius=0,this;ao.subVectors(e,this.center);const t=ao.lengthSq();if(t>this.radius*this.radius){const n=Math.sqrt(t),i=(n-this.radius)*.5;this.center.addScaledVector(ao,i/n),this.radius+=i}return this}union(e){return e.isEmpty()?this:this.isEmpty()?(this.copy(e),this):(this.center.equals(e.center)===!0?this.radius=Math.max(this.radius,e.radius):(ef.subVectors(e.center,this.center).setLength(e.radius),this.expandByPoint(ao.copy(e.center).add(ef)),this.expandByPoint(ao.copy(e.center).sub(ef))),this)}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return new this.constructor().copy(this)}}const tr=new F,tf=new F,Zl=new F,Cr=new F,nf=new F,Jl=new F,rf=new F;class La{constructor(e=new F,t=new F(0,0,-1)){this.origin=e,this.direction=t}set(e,t){return this.origin.copy(e),this.direction.copy(t),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,t){return t.copy(this.origin).addScaledVector(this.direction,e)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,tr)),this}closestPointToPoint(e,t){t.subVectors(e,this.origin);const n=t.dot(this.direction);return n<0?t.copy(this.origin):t.copy(this.origin).addScaledVector(this.direction,n)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){const t=tr.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):(tr.copy(this.origin).addScaledVector(this.direction,t),tr.distanceToSquared(e))}distanceSqToSegment(e,t,n,i){tf.copy(e).add(t).multiplyScalar(.5),Zl.copy(t).sub(e).normalize(),Cr.copy(this.origin).sub(tf);const s=e.distanceTo(t)*.5,o=-this.direction.dot(Zl),c=Cr.dot(this.direction),u=-Cr.dot(Zl),h=Cr.lengthSq(),p=Math.abs(1-o*o);let g,d,m,_;if(p>0)if(g=o*u-c,d=o*c-u,_=s*p,g>=0)if(d>=-_)if(d<=_){const y=1/p;g*=y,d*=y,m=g*(g+o*d+2*c)+d*(o*g+d+2*u)+h}else d=s,g=Math.max(0,-(o*d+c)),m=-g*g+d*(d+2*u)+h;else d=-s,g=Math.max(0,-(o*d+c)),m=-g*g+d*(d+2*u)+h;else d<=-_?(g=Math.max(0,-(-o*s+c)),d=g>0?-s:Math.min(Math.max(-s,-u),s),m=-g*g+d*(d+2*u)+h):d<=_?(g=0,d=Math.min(Math.max(-s,-u),s),m=d*(d+2*u)+h):(g=Math.max(0,-(o*s+c)),d=g>0?s:Math.min(Math.max(-s,-u),s),m=-g*g+d*(d+2*u)+h);else d=o>0?-s:s,g=Math.max(0,-(o*d+c)),m=-g*g+d*(d+2*u)+h;return n&&n.copy(this.origin).addScaledVector(this.direction,g),i&&i.copy(tf).addScaledVector(Zl,d),m}intersectSphere(e,t){tr.subVectors(e.center,this.origin);const n=tr.dot(this.direction),i=tr.dot(tr)-n*n,s=e.radius*e.radius;if(i>s)return null;const o=Math.sqrt(s-i),c=n-o,u=n+o;return u<0?null:c<0?this.at(u,t):this.at(c,t)}intersectsSphere(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){const t=e.normal.dot(this.direction);if(t===0)return e.distanceToPoint(this.origin)===0?0:null;const n=-(this.origin.dot(e.normal)+e.constant)/t;return n>=0?n:null}intersectPlane(e,t){const n=this.distanceToPlane(e);return n===null?null:this.at(n,t)}intersectsPlane(e){const t=e.distanceToPoint(this.origin);return t===0||e.normal.dot(this.direction)*t<0}intersectBox(e,t){let n,i,s,o,c,u;const h=1/this.direction.x,p=1/this.direction.y,g=1/this.direction.z,d=this.origin;return h>=0?(n=(e.min.x-d.x)*h,i=(e.max.x-d.x)*h):(n=(e.max.x-d.x)*h,i=(e.min.x-d.x)*h),p>=0?(s=(e.min.y-d.y)*p,o=(e.max.y-d.y)*p):(s=(e.max.y-d.y)*p,o=(e.min.y-d.y)*p),n>o||s>i||((s>n||isNaN(n))&&(n=s),(o<i||isNaN(i))&&(i=o),g>=0?(c=(e.min.z-d.z)*g,u=(e.max.z-d.z)*g):(c=(e.max.z-d.z)*g,u=(e.min.z-d.z)*g),n>u||c>i)||((c>n||n!==n)&&(n=c),(u<i||i!==i)&&(i=u),i<0)?null:this.at(n>=0?n:i,t)}intersectsBox(e){return this.intersectBox(e,tr)!==null}intersectTriangle(e,t,n,i,s){nf.subVectors(t,e),Jl.subVectors(n,e),rf.crossVectors(nf,Jl);let o=this.direction.dot(rf),c;if(o>0){if(i)return null;c=1}else if(o<0)c=-1,o=-o;else return null;Cr.subVectors(this.origin,e);const u=c*this.direction.dot(Jl.crossVectors(Cr,Jl));if(u<0)return null;const h=c*this.direction.dot(nf.cross(Cr));if(h<0||u+h>o)return null;const p=-c*Cr.dot(rf);return p<0?null:this.at(p/o,s)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class at{constructor(e,t,n,i,s,o,c,u,h,p,g,d,m,_,y,v){at.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],e!==void 0&&this.set(e,t,n,i,s,o,c,u,h,p,g,d,m,_,y,v)}set(e,t,n,i,s,o,c,u,h,p,g,d,m,_,y,v){const x=this.elements;return x[0]=e,x[4]=t,x[8]=n,x[12]=i,x[1]=s,x[5]=o,x[9]=c,x[13]=u,x[2]=h,x[6]=p,x[10]=g,x[14]=d,x[3]=m,x[7]=_,x[11]=y,x[15]=v,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new at().fromArray(this.elements)}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],t[9]=n[9],t[10]=n[10],t[11]=n[11],t[12]=n[12],t[13]=n[13],t[14]=n[14],t[15]=n[15],this}copyPosition(e){const t=this.elements,n=e.elements;return t[12]=n[12],t[13]=n[13],t[14]=n[14],this}setFromMatrix3(e){const t=e.elements;return this.set(t[0],t[3],t[6],0,t[1],t[4],t[7],0,t[2],t[5],t[8],0,0,0,0,1),this}extractBasis(e,t,n){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(e,t,n){return this.set(e.x,t.x,n.x,0,e.y,t.y,n.y,0,e.z,t.z,n.z,0,0,0,0,1),this}extractRotation(e){const t=this.elements,n=e.elements,i=1/ea.setFromMatrixColumn(e,0).length(),s=1/ea.setFromMatrixColumn(e,1).length(),o=1/ea.setFromMatrixColumn(e,2).length();return t[0]=n[0]*i,t[1]=n[1]*i,t[2]=n[2]*i,t[3]=0,t[4]=n[4]*s,t[5]=n[5]*s,t[6]=n[6]*s,t[7]=0,t[8]=n[8]*o,t[9]=n[9]*o,t[10]=n[10]*o,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(e){const t=this.elements,n=e.x,i=e.y,s=e.z,o=Math.cos(n),c=Math.sin(n),u=Math.cos(i),h=Math.sin(i),p=Math.cos(s),g=Math.sin(s);if(e.order==="XYZ"){const d=o*p,m=o*g,_=c*p,y=c*g;t[0]=u*p,t[4]=-u*g,t[8]=h,t[1]=m+_*h,t[5]=d-y*h,t[9]=-c*u,t[2]=y-d*h,t[6]=_+m*h,t[10]=o*u}else if(e.order==="YXZ"){const d=u*p,m=u*g,_=h*p,y=h*g;t[0]=d+y*c,t[4]=_*c-m,t[8]=o*h,t[1]=o*g,t[5]=o*p,t[9]=-c,t[2]=m*c-_,t[6]=y+d*c,t[10]=o*u}else if(e.order==="ZXY"){const d=u*p,m=u*g,_=h*p,y=h*g;t[0]=d-y*c,t[4]=-o*g,t[8]=_+m*c,t[1]=m+_*c,t[5]=o*p,t[9]=y-d*c,t[2]=-o*h,t[6]=c,t[10]=o*u}else if(e.order==="ZYX"){const d=o*p,m=o*g,_=c*p,y=c*g;t[0]=u*p,t[4]=_*h-m,t[8]=d*h+y,t[1]=u*g,t[5]=y*h+d,t[9]=m*h-_,t[2]=-h,t[6]=c*u,t[10]=o*u}else if(e.order==="YZX"){const d=o*u,m=o*h,_=c*u,y=c*h;t[0]=u*p,t[4]=y-d*g,t[8]=_*g+m,t[1]=g,t[5]=o*p,t[9]=-c*p,t[2]=-h*p,t[6]=m*g+_,t[10]=d-y*g}else if(e.order==="XZY"){const d=o*u,m=o*h,_=c*u,y=c*h;t[0]=u*p,t[4]=-g,t[8]=h*p,t[1]=d*g+y,t[5]=o*p,t[9]=m*g-_,t[2]=_*g-m,t[6]=c*p,t[10]=y*g+d}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromQuaternion(e){return this.compose(IC,e,DC)}lookAt(e,t,n){const i=this.elements;return ni.subVectors(e,t),ni.lengthSq()===0&&(ni.z=1),ni.normalize(),Rr.crossVectors(n,ni),Rr.lengthSq()===0&&(Math.abs(n.z)===1?ni.x+=1e-4:ni.z+=1e-4,ni.normalize(),Rr.crossVectors(n,ni)),Rr.normalize(),Kl.crossVectors(ni,Rr),i[0]=Rr.x,i[4]=Kl.x,i[8]=ni.x,i[1]=Rr.y,i[5]=Kl.y,i[9]=ni.y,i[2]=Rr.z,i[6]=Kl.z,i[10]=ni.z,this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,i=t.elements,s=this.elements,o=n[0],c=n[4],u=n[8],h=n[12],p=n[1],g=n[5],d=n[9],m=n[13],_=n[2],y=n[6],v=n[10],x=n[14],w=n[3],M=n[7],E=n[11],O=n[15],P=i[0],U=i[4],V=i[8],se=i[12],T=i[1],N=i[5],ne=i[9],Te=i[13],H=i[2],re=i[6],Q=i[10],Me=i[14],ve=i[3],be=i[7],Ie=i[11],Se=i[15];return s[0]=o*P+c*T+u*H+h*ve,s[4]=o*U+c*N+u*re+h*be,s[8]=o*V+c*ne+u*Q+h*Ie,s[12]=o*se+c*Te+u*Me+h*Se,s[1]=p*P+g*T+d*H+m*ve,s[5]=p*U+g*N+d*re+m*be,s[9]=p*V+g*ne+d*Q+m*Ie,s[13]=p*se+g*Te+d*Me+m*Se,s[2]=_*P+y*T+v*H+x*ve,s[6]=_*U+y*N+v*re+x*be,s[10]=_*V+y*ne+v*Q+x*Ie,s[14]=_*se+y*Te+v*Me+x*Se,s[3]=w*P+M*T+E*H+O*ve,s[7]=w*U+M*N+E*re+O*be,s[11]=w*V+M*ne+E*Q+O*Ie,s[15]=w*se+M*Te+E*Me+O*Se,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[4],i=e[8],s=e[12],o=e[1],c=e[5],u=e[9],h=e[13],p=e[2],g=e[6],d=e[10],m=e[14],_=e[3],y=e[7],v=e[11],x=e[15];return _*(+s*u*g-i*h*g-s*c*d+n*h*d+i*c*m-n*u*m)+y*(+t*u*m-t*h*d+s*o*d-i*o*m+i*h*p-s*u*p)+v*(+t*h*g-t*c*m-s*o*g+n*o*m+s*c*p-n*h*p)+x*(-i*c*p-t*u*g+t*c*d+i*o*g-n*o*d+n*u*p)}transpose(){const e=this.elements;let t;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this}setPosition(e,t,n){const i=this.elements;return e.isVector3?(i[12]=e.x,i[13]=e.y,i[14]=e.z):(i[12]=e,i[13]=t,i[14]=n),this}invert(){const e=this.elements,t=e[0],n=e[1],i=e[2],s=e[3],o=e[4],c=e[5],u=e[6],h=e[7],p=e[8],g=e[9],d=e[10],m=e[11],_=e[12],y=e[13],v=e[14],x=e[15],w=g*v*h-y*d*h+y*u*m-c*v*m-g*u*x+c*d*x,M=_*d*h-p*v*h-_*u*m+o*v*m+p*u*x-o*d*x,E=p*y*h-_*g*h+_*c*m-o*y*m-p*c*x+o*g*x,O=_*g*u-p*y*u-_*c*d+o*y*d+p*c*v-o*g*v,P=t*w+n*M+i*E+s*O;if(P===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const U=1/P;return e[0]=w*U,e[1]=(y*d*s-g*v*s-y*i*m+n*v*m+g*i*x-n*d*x)*U,e[2]=(c*v*s-y*u*s+y*i*h-n*v*h-c*i*x+n*u*x)*U,e[3]=(g*u*s-c*d*s-g*i*h+n*d*h+c*i*m-n*u*m)*U,e[4]=M*U,e[5]=(p*v*s-_*d*s+_*i*m-t*v*m-p*i*x+t*d*x)*U,e[6]=(_*u*s-o*v*s-_*i*h+t*v*h+o*i*x-t*u*x)*U,e[7]=(o*d*s-p*u*s+p*i*h-t*d*h-o*i*m+t*u*m)*U,e[8]=E*U,e[9]=(_*g*s-p*y*s-_*n*m+t*y*m+p*n*x-t*g*x)*U,e[10]=(o*y*s-_*c*s+_*n*h-t*y*h-o*n*x+t*c*x)*U,e[11]=(p*c*s-o*g*s-p*n*h+t*g*h+o*n*m-t*c*m)*U,e[12]=O*U,e[13]=(p*y*i-_*g*i+_*n*d-t*y*d-p*n*v+t*g*v)*U,e[14]=(_*c*i-o*y*i-_*n*u+t*y*u+o*n*v-t*c*v)*U,e[15]=(o*g*i-p*c*i+p*n*u-t*g*u-o*n*d+t*c*d)*U,this}scale(e){const t=this.elements,n=e.x,i=e.y,s=e.z;return t[0]*=n,t[4]*=i,t[8]*=s,t[1]*=n,t[5]*=i,t[9]*=s,t[2]*=n,t[6]*=i,t[10]*=s,t[3]*=n,t[7]*=i,t[11]*=s,this}getMaxScaleOnAxis(){const e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],n=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],i=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,n,i))}makeTranslation(e,t,n){return e.isVector3?this.set(1,0,0,e.x,0,1,0,e.y,0,0,1,e.z,0,0,0,1):this.set(1,0,0,e,0,1,0,t,0,0,1,n,0,0,0,1),this}makeRotationX(e){const t=Math.cos(e),n=Math.sin(e);return this.set(1,0,0,0,0,t,-n,0,0,n,t,0,0,0,0,1),this}makeRotationY(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,0,n,0,0,1,0,0,-n,0,t,0,0,0,0,1),this}makeRotationZ(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,0,n,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,t){const n=Math.cos(t),i=Math.sin(t),s=1-n,o=e.x,c=e.y,u=e.z,h=s*o,p=s*c;return this.set(h*o+n,h*c-i*u,h*u+i*c,0,h*c+i*u,p*c+n,p*u-i*o,0,h*u-i*c,p*u+i*o,s*u*u+n,0,0,0,0,1),this}makeScale(e,t,n){return this.set(e,0,0,0,0,t,0,0,0,0,n,0,0,0,0,1),this}makeShear(e,t,n,i,s,o){return this.set(1,n,s,0,e,1,o,0,t,i,1,0,0,0,0,1),this}compose(e,t,n){const i=this.elements,s=t._x,o=t._y,c=t._z,u=t._w,h=s+s,p=o+o,g=c+c,d=s*h,m=s*p,_=s*g,y=o*p,v=o*g,x=c*g,w=u*h,M=u*p,E=u*g,O=n.x,P=n.y,U=n.z;return i[0]=(1-(y+x))*O,i[1]=(m+E)*O,i[2]=(_-M)*O,i[3]=0,i[4]=(m-E)*P,i[5]=(1-(d+x))*P,i[6]=(v+w)*P,i[7]=0,i[8]=(_+M)*U,i[9]=(v-w)*U,i[10]=(1-(d+y))*U,i[11]=0,i[12]=e.x,i[13]=e.y,i[14]=e.z,i[15]=1,this}decompose(e,t,n){const i=this.elements;let s=ea.set(i[0],i[1],i[2]).length();const o=ea.set(i[4],i[5],i[6]).length(),c=ea.set(i[8],i[9],i[10]).length();this.determinant()<0&&(s=-s),e.x=i[12],e.y=i[13],e.z=i[14],Ai.copy(this);const h=1/s,p=1/o,g=1/c;return Ai.elements[0]*=h,Ai.elements[1]*=h,Ai.elements[2]*=h,Ai.elements[4]*=p,Ai.elements[5]*=p,Ai.elements[6]*=p,Ai.elements[8]*=g,Ai.elements[9]*=g,Ai.elements[10]*=g,t.setFromRotationMatrix(Ai),n.x=s,n.y=o,n.z=c,this}makePerspective(e,t,n,i,s,o,c=ki){const u=this.elements,h=2*s/(t-e),p=2*s/(n-i),g=(t+e)/(t-e),d=(n+i)/(n-i);let m,_;if(c===ki)m=-(o+s)/(o-s),_=-2*o*s/(o-s);else if(c===Uo)m=-o/(o-s),_=-o*s/(o-s);else throw new Error("THREE.Matrix4.makePerspective(): Invalid coordinate system: "+c);return u[0]=h,u[4]=0,u[8]=g,u[12]=0,u[1]=0,u[5]=p,u[9]=d,u[13]=0,u[2]=0,u[6]=0,u[10]=m,u[14]=_,u[3]=0,u[7]=0,u[11]=-1,u[15]=0,this}makeOrthographic(e,t,n,i,s,o,c=ki){const u=this.elements,h=1/(t-e),p=1/(n-i),g=1/(o-s),d=(t+e)*h,m=(n+i)*p;let _,y;if(c===ki)_=(o+s)*g,y=-2*g;else if(c===Uo)_=s*g,y=-1*g;else throw new Error("THREE.Matrix4.makeOrthographic(): Invalid coordinate system: "+c);return u[0]=2*h,u[4]=0,u[8]=0,u[12]=-d,u[1]=0,u[5]=2*p,u[9]=0,u[13]=-m,u[2]=0,u[6]=0,u[10]=y,u[14]=-_,u[3]=0,u[7]=0,u[11]=0,u[15]=1,this}equals(e){const t=this.elements,n=e.elements;for(let i=0;i<16;i++)if(t[i]!==n[i])return!1;return!0}fromArray(e,t=0){for(let n=0;n<16;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e[t+9]=n[9],e[t+10]=n[10],e[t+11]=n[11],e[t+12]=n[12],e[t+13]=n[13],e[t+14]=n[14],e[t+15]=n[15],e}}const ea=new F,Ai=new at,IC=new F(0,0,0),DC=new F(1,1,1),Rr=new F,Kl=new F,ni=new F,s_=new at,a_=new $n;class qo{constructor(e=0,t=0,n=0,i=qo.DEFAULT_ORDER){this.isEuler=!0,this._x=e,this._y=t,this._z=n,this._order=i}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,t,n,i=this._order){return this._x=e,this._y=t,this._z=n,this._order=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,t=this._order,n=!0){const i=e.elements,s=i[0],o=i[4],c=i[8],u=i[1],h=i[5],p=i[9],g=i[2],d=i[6],m=i[10];switch(t){case"XYZ":this._y=Math.asin(jt(c,-1,1)),Math.abs(c)<.9999999?(this._x=Math.atan2(-p,m),this._z=Math.atan2(-o,s)):(this._x=Math.atan2(d,h),this._z=0);break;case"YXZ":this._x=Math.asin(-jt(p,-1,1)),Math.abs(p)<.9999999?(this._y=Math.atan2(c,m),this._z=Math.atan2(u,h)):(this._y=Math.atan2(-g,s),this._z=0);break;case"ZXY":this._x=Math.asin(jt(d,-1,1)),Math.abs(d)<.9999999?(this._y=Math.atan2(-g,m),this._z=Math.atan2(-o,h)):(this._y=0,this._z=Math.atan2(u,s));break;case"ZYX":this._y=Math.asin(-jt(g,-1,1)),Math.abs(g)<.9999999?(this._x=Math.atan2(d,m),this._z=Math.atan2(u,s)):(this._x=0,this._z=Math.atan2(-o,h));break;case"YZX":this._z=Math.asin(jt(u,-1,1)),Math.abs(u)<.9999999?(this._x=Math.atan2(-p,h),this._y=Math.atan2(-g,s)):(this._x=0,this._y=Math.atan2(c,m));break;case"XZY":this._z=Math.asin(-jt(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(d,h),this._y=Math.atan2(c,s)):(this._x=Math.atan2(-p,m),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}return this._order=t,n===!0&&this._onChangeCallback(),this}setFromQuaternion(e,t,n){return s_.makeRotationFromQuaternion(e),this.setFromRotationMatrix(s_,t,n)}setFromVector3(e,t=this._order){return this.set(e.x,e.y,e.z,t)}reorder(e){return a_.setFromEuler(this),this.setFromQuaternion(a_,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],e[3]!==void 0&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}}qo.DEFAULT_ORDER="XYZ";class cu{constructor(){this.mask=1}set(e){this.mask=(1<<e|0)>>>0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return(this.mask&e.mask)!==0}isEnabled(e){return(this.mask&(1<<e|0))!==0}}let UC=0;const o_=new F,ta=new $n,nr=new at,jl=new F,oo=new F,NC=new F,OC=new $n,l_=new F(1,0,0),c_=new F(0,1,0),u_=new F(0,0,1),FC={type:"added"},BC={type:"removed"};class Ct extends gr{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:UC++}),this.uuid=oi(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=Ct.DEFAULT_UP.clone();const e=new F,t=new qo,n=new $n,i=new F(1,1,1);function s(){n.setFromEuler(t,!1)}function o(){t.setFromQuaternion(n,void 0,!1)}t._onChange(s),n._onChange(o),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:i},modelViewMatrix:{value:new at},normalMatrix:{value:new vt}}),this.matrix=new at,this.matrixWorld=new at,this.matrixAutoUpdate=Ct.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldAutoUpdate=Ct.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.layers=new cu,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeShadow(){}onAfterShadow(){}onBeforeRender(){}onAfterRender(){}applyMatrix4(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(e){return this.quaternion.premultiply(e),this}setRotationFromAxisAngle(e,t){this.quaternion.setFromAxisAngle(e,t)}setRotationFromEuler(e){this.quaternion.setFromEuler(e,!0)}setRotationFromMatrix(e){this.quaternion.setFromRotationMatrix(e)}setRotationFromQuaternion(e){this.quaternion.copy(e)}rotateOnAxis(e,t){return ta.setFromAxisAngle(e,t),this.quaternion.multiply(ta),this}rotateOnWorldAxis(e,t){return ta.setFromAxisAngle(e,t),this.quaternion.premultiply(ta),this}rotateX(e){return this.rotateOnAxis(l_,e)}rotateY(e){return this.rotateOnAxis(c_,e)}rotateZ(e){return this.rotateOnAxis(u_,e)}translateOnAxis(e,t){return o_.copy(e).applyQuaternion(this.quaternion),this.position.add(o_.multiplyScalar(t)),this}translateX(e){return this.translateOnAxis(l_,e)}translateY(e){return this.translateOnAxis(c_,e)}translateZ(e){return this.translateOnAxis(u_,e)}localToWorld(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(this.matrixWorld)}worldToLocal(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(nr.copy(this.matrixWorld).invert())}lookAt(e,t,n){e.isVector3?jl.copy(e):jl.set(e,t,n);const i=this.parent;this.updateWorldMatrix(!0,!1),oo.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?nr.lookAt(oo,jl,this.up):nr.lookAt(jl,oo,this.up),this.quaternion.setFromRotationMatrix(nr),i&&(nr.extractRotation(i.matrixWorld),ta.setFromRotationMatrix(nr),this.quaternion.premultiply(ta.invert()))}add(e){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(e.parent!==null&&e.parent.remove(e),e.parent=this,this.children.push(e),e.dispatchEvent(FC)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)}remove(e){if(arguments.length>1){for(let n=0;n<arguments.length;n++)this.remove(arguments[n]);return this}const t=this.children.indexOf(e);return t!==-1&&(e.parent=null,this.children.splice(t,1),e.dispatchEvent(BC)),this}removeFromParent(){const e=this.parent;return e!==null&&e.remove(this),this}clear(){return this.remove(...this.children)}attach(e){return this.updateWorldMatrix(!0,!1),nr.copy(this.matrixWorld).invert(),e.parent!==null&&(e.parent.updateWorldMatrix(!0,!1),nr.multiply(e.parent.matrixWorld)),e.applyMatrix4(nr),this.add(e),e.updateWorldMatrix(!1,!0),this}getObjectById(e){return this.getObjectByProperty("id",e)}getObjectByName(e){return this.getObjectByProperty("name",e)}getObjectByProperty(e,t){if(this[e]===t)return this;for(let n=0,i=this.children.length;n<i;n++){const o=this.children[n].getObjectByProperty(e,t);if(o!==void 0)return o}}getObjectsByProperty(e,t,n=[]){this[e]===t&&n.push(this);const i=this.children;for(let s=0,o=i.length;s<o;s++)i[s].getObjectsByProperty(e,t,n);return n}getWorldPosition(e){return this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(oo,e,NC),e}getWorldScale(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(oo,OC,e),e}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()}raycast(){}traverse(e){e(this);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].traverse(e)}traverseVisible(e){if(this.visible===!1)return;e(this);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].traverseVisible(e)}traverseAncestors(e){const t=this.parent;t!==null&&(e(t),t.traverseAncestors(e))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);const t=this.children;for(let n=0,i=t.length;n<i;n++){const s=t[n];(s.matrixWorldAutoUpdate===!0||e===!0)&&s.updateMatrixWorld(e)}}updateWorldMatrix(e,t){const n=this.parent;if(e===!0&&n!==null&&n.matrixWorldAutoUpdate===!0&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),t===!0){const i=this.children;for(let s=0,o=i.length;s<o;s++){const c=i[s];c.matrixWorldAutoUpdate===!0&&c.updateWorldMatrix(!1,!0)}}}toJSON(e){const t=e===void 0||typeof e=="string",n={};t&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},n.metadata={version:4.6,type:"Object",generator:"Object3D.toJSON"});const i={};i.uuid=this.uuid,i.type=this.type,this.name!==""&&(i.name=this.name),this.castShadow===!0&&(i.castShadow=!0),this.receiveShadow===!0&&(i.receiveShadow=!0),this.visible===!1&&(i.visible=!1),this.frustumCulled===!1&&(i.frustumCulled=!1),this.renderOrder!==0&&(i.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(i.userData=this.userData),i.layers=this.layers.mask,i.matrix=this.matrix.toArray(),i.up=this.up.toArray(),this.matrixAutoUpdate===!1&&(i.matrixAutoUpdate=!1),this.isInstancedMesh&&(i.type="InstancedMesh",i.count=this.count,i.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(i.instanceColor=this.instanceColor.toJSON())),this.isBatchedMesh&&(i.type="BatchedMesh",i.perObjectFrustumCulled=this.perObjectFrustumCulled,i.sortObjects=this.sortObjects,i.drawRanges=this._drawRanges,i.reservedRanges=this._reservedRanges,i.visibility=this._visibility,i.active=this._active,i.bounds=this._bounds.map(c=>({boxInitialized:c.boxInitialized,boxMin:c.box.min.toArray(),boxMax:c.box.max.toArray(),sphereInitialized:c.sphereInitialized,sphereRadius:c.sphere.radius,sphereCenter:c.sphere.center.toArray()})),i.maxGeometryCount=this._maxGeometryCount,i.maxVertexCount=this._maxVertexCount,i.maxIndexCount=this._maxIndexCount,i.geometryInitialized=this._geometryInitialized,i.geometryCount=this._geometryCount,i.matricesTexture=this._matricesTexture.toJSON(e),this.boundingSphere!==null&&(i.boundingSphere={center:i.boundingSphere.center.toArray(),radius:i.boundingSphere.radius}),this.boundingBox!==null&&(i.boundingBox={min:i.boundingBox.min.toArray(),max:i.boundingBox.max.toArray()}));function s(c,u){return c[u.uuid]===void 0&&(c[u.uuid]=u.toJSON(e)),u.uuid}if(this.isScene)this.background&&(this.background.isColor?i.background=this.background.toJSON():this.background.isTexture&&(i.background=this.background.toJSON(e).uuid)),this.environment&&this.environment.isTexture&&this.environment.isRenderTargetTexture!==!0&&(i.environment=this.environment.toJSON(e).uuid);else if(this.isMesh||this.isLine||this.isPoints){i.geometry=s(e.geometries,this.geometry);const c=this.geometry.parameters;if(c!==void 0&&c.shapes!==void 0){const u=c.shapes;if(Array.isArray(u))for(let h=0,p=u.length;h<p;h++){const g=u[h];s(e.shapes,g)}else s(e.shapes,u)}}if(this.isSkinnedMesh&&(i.bindMode=this.bindMode,i.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(s(e.skeletons,this.skeleton),i.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const c=[];for(let u=0,h=this.material.length;u<h;u++)c.push(s(e.materials,this.material[u]));i.material=c}else i.material=s(e.materials,this.material);if(this.children.length>0){i.children=[];for(let c=0;c<this.children.length;c++)i.children.push(this.children[c].toJSON(e).object)}if(this.animations.length>0){i.animations=[];for(let c=0;c<this.animations.length;c++){const u=this.animations[c];i.animations.push(s(e.animations,u))}}if(t){const c=o(e.geometries),u=o(e.materials),h=o(e.textures),p=o(e.images),g=o(e.shapes),d=o(e.skeletons),m=o(e.animations),_=o(e.nodes);c.length>0&&(n.geometries=c),u.length>0&&(n.materials=u),h.length>0&&(n.textures=h),p.length>0&&(n.images=p),g.length>0&&(n.shapes=g),d.length>0&&(n.skeletons=d),m.length>0&&(n.animations=m),_.length>0&&(n.nodes=_)}return n.object=i,n;function o(c){const u=[];for(const h in c){const p=c[h];delete p.metadata,u.push(p)}return u}}clone(e){return new this.constructor().copy(this,e)}copy(e,t=!0){if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldAutoUpdate=e.matrixWorldAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.animations=e.animations.slice(),this.userData=JSON.parse(JSON.stringify(e.userData)),t===!0)for(let n=0;n<e.children.length;n++){const i=e.children[n];this.add(i.clone())}return this}}Ct.DEFAULT_UP=new F(0,1,0);Ct.DEFAULT_MATRIX_AUTO_UPDATE=!0;Ct.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;const Ti=new F,ir=new F,sf=new F,rr=new F,na=new F,ia=new F,h_=new F,af=new F,of=new F,lf=new F;class ai{constructor(e=new F,t=new F,n=new F){this.a=e,this.b=t,this.c=n}static getNormal(e,t,n,i){i.subVectors(n,t),Ti.subVectors(e,t),i.cross(Ti);const s=i.lengthSq();return s>0?i.multiplyScalar(1/Math.sqrt(s)):i.set(0,0,0)}static getBarycoord(e,t,n,i,s){Ti.subVectors(i,t),ir.subVectors(n,t),sf.subVectors(e,t);const o=Ti.dot(Ti),c=Ti.dot(ir),u=Ti.dot(sf),h=ir.dot(ir),p=ir.dot(sf),g=o*h-c*c;if(g===0)return s.set(0,0,0),null;const d=1/g,m=(h*u-c*p)*d,_=(o*p-c*u)*d;return s.set(1-m-_,_,m)}static containsPoint(e,t,n,i){return this.getBarycoord(e,t,n,i,rr)===null?!1:rr.x>=0&&rr.y>=0&&rr.x+rr.y<=1}static getInterpolation(e,t,n,i,s,o,c,u){return this.getBarycoord(e,t,n,i,rr)===null?(u.x=0,u.y=0,"z"in u&&(u.z=0),"w"in u&&(u.w=0),null):(u.setScalar(0),u.addScaledVector(s,rr.x),u.addScaledVector(o,rr.y),u.addScaledVector(c,rr.z),u)}static isFrontFacing(e,t,n,i){return Ti.subVectors(n,t),ir.subVectors(e,t),Ti.cross(ir).dot(i)<0}set(e,t,n){return this.a.copy(e),this.b.copy(t),this.c.copy(n),this}setFromPointsAndIndices(e,t,n,i){return this.a.copy(e[t]),this.b.copy(e[n]),this.c.copy(e[i]),this}setFromAttributeAndIndices(e,t,n,i){return this.a.fromBufferAttribute(e,t),this.b.fromBufferAttribute(e,n),this.c.fromBufferAttribute(e,i),this}clone(){return new this.constructor().copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return Ti.subVectors(this.c,this.b),ir.subVectors(this.a,this.b),Ti.cross(ir).length()*.5}getMidpoint(e){return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return ai.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,t){return ai.getBarycoord(e,this.a,this.b,this.c,t)}getInterpolation(e,t,n,i,s){return ai.getInterpolation(e,this.a,this.b,this.c,t,n,i,s)}containsPoint(e){return ai.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return ai.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,t){const n=this.a,i=this.b,s=this.c;let o,c;na.subVectors(i,n),ia.subVectors(s,n),af.subVectors(e,n);const u=na.dot(af),h=ia.dot(af);if(u<=0&&h<=0)return t.copy(n);of.subVectors(e,i);const p=na.dot(of),g=ia.dot(of);if(p>=0&&g<=p)return t.copy(i);const d=u*g-p*h;if(d<=0&&u>=0&&p<=0)return o=u/(u-p),t.copy(n).addScaledVector(na,o);lf.subVectors(e,s);const m=na.dot(lf),_=ia.dot(lf);if(_>=0&&m<=_)return t.copy(s);const y=m*h-u*_;if(y<=0&&h>=0&&_<=0)return c=h/(h-_),t.copy(n).addScaledVector(ia,c);const v=p*_-m*g;if(v<=0&&g-p>=0&&m-_>=0)return h_.subVectors(s,i),c=(g-p)/(g-p+(m-_)),t.copy(i).addScaledVector(h_,c);const x=1/(v+y+d);return o=y*x,c=d*x,t.copy(n).addScaledVector(na,o).addScaledVector(ia,c)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}const hx={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},Lr={h:0,s:0,l:0},Ql={h:0,s:0,l:0};function cf(r,e,t){return t<0&&(t+=1),t>1&&(t-=1),t<1/6?r+(e-r)*6*t:t<1/2?e:t<2/3?r+(e-r)*6*(2/3-t):r}class qe{constructor(e,t,n){return this.isColor=!0,this.r=1,this.g=1,this.b=1,this.set(e,t,n)}set(e,t,n){if(t===void 0&&n===void 0){const i=e;i&&i.isColor?this.copy(i):typeof i=="number"?this.setHex(i):typeof i=="string"&&this.setStyle(i)}else this.setRGB(e,t,n);return this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e,t=dn){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(e&255)/255,Ut.toWorkingColorSpace(this,t),this}setRGB(e,t,n,i=Ut.workingColorSpace){return this.r=e,this.g=t,this.b=n,Ut.toWorkingColorSpace(this,i),this}setHSL(e,t,n,i=Ut.workingColorSpace){if(e=Qd(e,1),t=jt(t,0,1),n=jt(n,0,1),t===0)this.r=this.g=this.b=n;else{const s=n<=.5?n*(1+t):n+t-n*t,o=2*n-s;this.r=cf(o,s,e+1/3),this.g=cf(o,s,e),this.b=cf(o,s,e-1/3)}return Ut.toWorkingColorSpace(this,i),this}setStyle(e,t=dn){function n(s){s!==void 0&&parseFloat(s)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}let i;if(i=/^(\w+)\(([^\)]*)\)/.exec(e)){let s;const o=i[1],c=i[2];switch(o){case"rgb":case"rgba":if(s=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(c))return n(s[4]),this.setRGB(Math.min(255,parseInt(s[1],10))/255,Math.min(255,parseInt(s[2],10))/255,Math.min(255,parseInt(s[3],10))/255,t);if(s=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(c))return n(s[4]),this.setRGB(Math.min(100,parseInt(s[1],10))/100,Math.min(100,parseInt(s[2],10))/100,Math.min(100,parseInt(s[3],10))/100,t);break;case"hsl":case"hsla":if(s=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(c))return n(s[4]),this.setHSL(parseFloat(s[1])/360,parseFloat(s[2])/100,parseFloat(s[3])/100,t);break;default:console.warn("THREE.Color: Unknown color model "+e)}}else if(i=/^\#([A-Fa-f\d]+)$/.exec(e)){const s=i[1],o=s.length;if(o===3)return this.setRGB(parseInt(s.charAt(0),16)/15,parseInt(s.charAt(1),16)/15,parseInt(s.charAt(2),16)/15,t);if(o===6)return this.setHex(parseInt(s,16),t);console.warn("THREE.Color: Invalid hex color "+e)}else if(e&&e.length>0)return this.setColorName(e,t);return this}setColorName(e,t=dn){const n=hx[e.toLowerCase()];return n!==void 0?this.setHex(n,t):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copySRGBToLinear(e){return this.r=Sa(e.r),this.g=Sa(e.g),this.b=Sa(e.b),this}copyLinearToSRGB(e){return this.r=Jh(e.r),this.g=Jh(e.g),this.b=Jh(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(e=dn){return Ut.fromWorkingColorSpace(En.copy(this),e),Math.round(jt(En.r*255,0,255))*65536+Math.round(jt(En.g*255,0,255))*256+Math.round(jt(En.b*255,0,255))}getHexString(e=dn){return("000000"+this.getHex(e).toString(16)).slice(-6)}getHSL(e,t=Ut.workingColorSpace){Ut.fromWorkingColorSpace(En.copy(this),t);const n=En.r,i=En.g,s=En.b,o=Math.max(n,i,s),c=Math.min(n,i,s);let u,h;const p=(c+o)/2;if(c===o)u=0,h=0;else{const g=o-c;switch(h=p<=.5?g/(o+c):g/(2-o-c),o){case n:u=(i-s)/g+(i<s?6:0);break;case i:u=(s-n)/g+2;break;case s:u=(n-i)/g+4;break}u/=6}return e.h=u,e.s=h,e.l=p,e}getRGB(e,t=Ut.workingColorSpace){return Ut.fromWorkingColorSpace(En.copy(this),t),e.r=En.r,e.g=En.g,e.b=En.b,e}getStyle(e=dn){Ut.fromWorkingColorSpace(En.copy(this),e);const t=En.r,n=En.g,i=En.b;return e!==dn?`color(${e} ${t.toFixed(3)} ${n.toFixed(3)} ${i.toFixed(3)})`:`rgb(${Math.round(t*255)},${Math.round(n*255)},${Math.round(i*255)})`}offsetHSL(e,t,n){return this.getHSL(Lr),this.setHSL(Lr.h+e,Lr.s+t,Lr.l+n)}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this}lerpColors(e,t,n){return this.r=e.r+(t.r-e.r)*n,this.g=e.g+(t.g-e.g)*n,this.b=e.b+(t.b-e.b)*n,this}lerpHSL(e,t){this.getHSL(Lr),e.getHSL(Ql);const n=xo(Lr.h,Ql.h,t),i=xo(Lr.s,Ql.s,t),s=xo(Lr.l,Ql.l,t);return this.setHSL(n,i,s),this}setFromVector3(e){return this.r=e.x,this.g=e.y,this.b=e.z,this}applyMatrix3(e){const t=this.r,n=this.g,i=this.b,s=e.elements;return this.r=s[0]*t+s[3]*n+s[6]*i,this.g=s[1]*t+s[4]*n+s[7]*i,this.b=s[2]*t+s[5]*n+s[8]*i,this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,t=0){return this.r=e[t],this.g=e[t+1],this.b=e[t+2],this}toArray(e=[],t=0){return e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}fromBufferAttribute(e,t){return this.r=e.getX(t),this.g=e.getY(t),this.b=e.getZ(t),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}const En=new qe;qe.NAMES=hx;let zC=0;class Rn extends gr{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:zC++}),this.uuid=oi(),this.name="",this.type="Material",this.blending=xs,this.side=fr,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.alphaHash=!1,this.blendSrc=Zc,this.blendDst=Jc,this.blendEquation=Nr,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.blendColor=new qe(0,0,0),this.blendAlpha=0,this.depthFunc=Mo,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=Sd,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=us,this.stencilZFail=us,this.stencilZPass=us,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.forceSinglePass=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(e){this._alphaTest>0!=e>0&&this.version++,this._alphaTest=e}onBuild(){}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(e){if(e!==void 0)for(const t in e){const n=e[t];if(n===void 0){console.warn(`THREE.Material: parameter '${t}' has value of undefined.`);continue}const i=this[t];if(i===void 0){console.warn(`THREE.Material: '${t}' is not a property of THREE.${this.type}.`);continue}i&&i.isColor?i.set(n):i&&i.isVector3&&n&&n.isVector3?i.copy(n):this[t]=n}}toJSON(e){const t=e===void 0||typeof e=="string";t&&(e={textures:{},images:{}});const n={metadata:{version:4.6,type:"Material",generator:"Material.toJSON"}};n.uuid=this.uuid,n.type=this.type,this.name!==""&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),this.roughness!==void 0&&(n.roughness=this.roughness),this.metalness!==void 0&&(n.metalness=this.metalness),this.sheen!==void 0&&(n.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(n.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(n.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.emissiveIntensity&&this.emissiveIntensity!==1&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(n.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(n.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(n.shininess=this.shininess),this.clearcoat!==void 0&&(n.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.iridescence!==void 0&&(n.iridescence=this.iridescence),this.iridescenceIOR!==void 0&&(n.iridescenceIOR=this.iridescenceIOR),this.iridescenceThicknessRange!==void 0&&(n.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(n.iridescenceMap=this.iridescenceMap.toJSON(e).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(n.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(e).uuid),this.anisotropy!==void 0&&(n.anisotropy=this.anisotropy),this.anisotropyRotation!==void 0&&(n.anisotropyRotation=this.anisotropyRotation),this.anisotropyMap&&this.anisotropyMap.isTexture&&(n.anisotropyMap=this.anisotropyMap.toJSON(e).uuid),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(e).uuid,n.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(e).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(e).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(e).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(e).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(e).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(n.specularIntensityMap=this.specularIntensityMap.toJSON(e).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(n.specularColorMap=this.specularColorMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(e).uuid,this.combine!==void 0&&(n.combine=this.combine)),this.envMapIntensity!==void 0&&(n.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(n.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(n.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(e).uuid),this.transmission!==void 0&&(n.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(n.transmissionMap=this.transmissionMap.toJSON(e).uuid),this.thickness!==void 0&&(n.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(n.thicknessMap=this.thicknessMap.toJSON(e).uuid),this.attenuationDistance!==void 0&&this.attenuationDistance!==1/0&&(n.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(n.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(n.size=this.size),this.shadowSide!==null&&(n.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(n.sizeAttenuation=this.sizeAttenuation),this.blending!==xs&&(n.blending=this.blending),this.side!==fr&&(n.side=this.side),this.vertexColors===!0&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),this.transparent===!0&&(n.transparent=!0),this.blendSrc!==Zc&&(n.blendSrc=this.blendSrc),this.blendDst!==Jc&&(n.blendDst=this.blendDst),this.blendEquation!==Nr&&(n.blendEquation=this.blendEquation),this.blendSrcAlpha!==null&&(n.blendSrcAlpha=this.blendSrcAlpha),this.blendDstAlpha!==null&&(n.blendDstAlpha=this.blendDstAlpha),this.blendEquationAlpha!==null&&(n.blendEquationAlpha=this.blendEquationAlpha),this.blendColor&&this.blendColor.isColor&&(n.blendColor=this.blendColor.getHex()),this.blendAlpha!==0&&(n.blendAlpha=this.blendAlpha),this.depthFunc!==Mo&&(n.depthFunc=this.depthFunc),this.depthTest===!1&&(n.depthTest=this.depthTest),this.depthWrite===!1&&(n.depthWrite=this.depthWrite),this.colorWrite===!1&&(n.colorWrite=this.colorWrite),this.stencilWriteMask!==255&&(n.stencilWriteMask=this.stencilWriteMask),this.stencilFunc!==Sd&&(n.stencilFunc=this.stencilFunc),this.stencilRef!==0&&(n.stencilRef=this.stencilRef),this.stencilFuncMask!==255&&(n.stencilFuncMask=this.stencilFuncMask),this.stencilFail!==us&&(n.stencilFail=this.stencilFail),this.stencilZFail!==us&&(n.stencilZFail=this.stencilZFail),this.stencilZPass!==us&&(n.stencilZPass=this.stencilZPass),this.stencilWrite===!0&&(n.stencilWrite=this.stencilWrite),this.rotation!==void 0&&this.rotation!==0&&(n.rotation=this.rotation),this.polygonOffset===!0&&(n.polygonOffset=!0),this.polygonOffsetFactor!==0&&(n.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(n.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(n.linewidth=this.linewidth),this.dashSize!==void 0&&(n.dashSize=this.dashSize),this.gapSize!==void 0&&(n.gapSize=this.gapSize),this.scale!==void 0&&(n.scale=this.scale),this.dithering===!0&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),this.alphaHash===!0&&(n.alphaHash=!0),this.alphaToCoverage===!0&&(n.alphaToCoverage=!0),this.premultipliedAlpha===!0&&(n.premultipliedAlpha=!0),this.forceSinglePass===!0&&(n.forceSinglePass=!0),this.wireframe===!0&&(n.wireframe=!0),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(n.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(n.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(n.flatShading=!0),this.visible===!1&&(n.visible=!1),this.toneMapped===!1&&(n.toneMapped=!1),this.fog===!1&&(n.fog=!1),Object.keys(this.userData).length>0&&(n.userData=this.userData);function i(s){const o=[];for(const c in s){const u=s[c];delete u.metadata,o.push(u)}return o}if(t){const s=i(e.textures),o=i(e.images);s.length>0&&(n.textures=s),o.length>0&&(n.images=o)}return n}clone(){return new this.constructor().copy(this)}copy(e){this.name=e.name,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.blendColor.copy(e.blendColor),this.blendAlpha=e.blendAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;const t=e.clippingPlanes;let n=null;if(t!==null){const i=t.length;n=new Array(i);for(let s=0;s!==i;++s)n[s]=t[s].clone()}return this.clippingPlanes=n,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaHash=e.alphaHash,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.forceSinglePass=e.forceSinglePass,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){e===!0&&this.version++}}class Hr extends Rn{constructor(e){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new qe(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=Wo,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}const ar=kC();function kC(){const r=new ArrayBuffer(4),e=new Float32Array(r),t=new Uint32Array(r),n=new Uint32Array(512),i=new Uint32Array(512);for(let u=0;u<256;++u){const h=u-127;h<-27?(n[u]=0,n[u|256]=32768,i[u]=24,i[u|256]=24):h<-14?(n[u]=1024>>-h-14,n[u|256]=1024>>-h-14|32768,i[u]=-h-1,i[u|256]=-h-1):h<=15?(n[u]=h+15<<10,n[u|256]=h+15<<10|32768,i[u]=13,i[u|256]=13):h<128?(n[u]=31744,n[u|256]=64512,i[u]=24,i[u|256]=24):(n[u]=31744,n[u|256]=64512,i[u]=13,i[u|256]=13)}const s=new Uint32Array(2048),o=new Uint32Array(64),c=new Uint32Array(64);for(let u=1;u<1024;++u){let h=u<<13,p=0;for(;!(h&8388608);)h<<=1,p-=8388608;h&=-8388609,p+=947912704,s[u]=h|p}for(let u=1024;u<2048;++u)s[u]=939524096+(u-1024<<13);for(let u=1;u<31;++u)o[u]=u<<23;o[31]=1199570944,o[32]=2147483648;for(let u=33;u<63;++u)o[u]=2147483648+(u-32<<23);o[63]=3347054592;for(let u=1;u<64;++u)u!==32&&(c[u]=1024);return{floatView:e,uint32View:t,baseTable:n,shiftTable:i,mantissaTable:s,exponentTable:o,offsetTable:c}}function qn(r){Math.abs(r)>65504&&console.warn("THREE.DataUtils.toHalfFloat(): Value out of range."),r=jt(r,-65504,65504),ar.floatView[0]=r;const e=ar.uint32View[0],t=e>>23&511;return ar.baseTable[t]+((e&8388607)>>ar.shiftTable[t])}function _o(r){const e=r>>10;return ar.uint32View[0]=ar.mantissaTable[ar.offsetTable[e]+(r&1023)]+ar.exponentTable[e],ar.floatView[0]}const GC={toHalfFloat:qn,fromHalfFloat:_o},an=new F,ec=new Le;class Ot{constructor(e,t,n=!1){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,this.name="",this.array=e,this.itemSize=t,this.count=e!==void 0?e.length/t:0,this.normalized=n,this.usage=Do,this._updateRange={offset:0,count:-1},this.updateRanges=[],this.gpuType=xi,this.version=0}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}get updateRange(){return bs("THREE.BufferAttribute: updateRange() is deprecated and will be removed in r169. Use addUpdateRange() instead."),this._updateRange}setUsage(e){return this.usage=e,this}addUpdateRange(e,t){this.updateRanges.push({start:e,count:t})}clearUpdateRanges(){this.updateRanges.length=0}copy(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this.gpuType=e.gpuType,this}copyAt(e,t,n){e*=this.itemSize,n*=t.itemSize;for(let i=0,s=this.itemSize;i<s;i++)this.array[e+i]=t.array[n+i];return this}copyArray(e){return this.array.set(e),this}applyMatrix3(e){if(this.itemSize===2)for(let t=0,n=this.count;t<n;t++)ec.fromBufferAttribute(this,t),ec.applyMatrix3(e),this.setXY(t,ec.x,ec.y);else if(this.itemSize===3)for(let t=0,n=this.count;t<n;t++)an.fromBufferAttribute(this,t),an.applyMatrix3(e),this.setXYZ(t,an.x,an.y,an.z);return this}applyMatrix4(e){for(let t=0,n=this.count;t<n;t++)an.fromBufferAttribute(this,t),an.applyMatrix4(e),this.setXYZ(t,an.x,an.y,an.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)an.fromBufferAttribute(this,t),an.applyNormalMatrix(e),this.setXYZ(t,an.x,an.y,an.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)an.fromBufferAttribute(this,t),an.transformDirection(e),this.setXYZ(t,an.x,an.y,an.z);return this}set(e,t=0){return this.array.set(e,t),this}getComponent(e,t){let n=this.array[e*this.itemSize+t];return this.normalized&&(n=Nn(n,this.array)),n}setComponent(e,t,n){return this.normalized&&(n=ht(n,this.array)),this.array[e*this.itemSize+t]=n,this}getX(e){let t=this.array[e*this.itemSize];return this.normalized&&(t=Nn(t,this.array)),t}setX(e,t){return this.normalized&&(t=ht(t,this.array)),this.array[e*this.itemSize]=t,this}getY(e){let t=this.array[e*this.itemSize+1];return this.normalized&&(t=Nn(t,this.array)),t}setY(e,t){return this.normalized&&(t=ht(t,this.array)),this.array[e*this.itemSize+1]=t,this}getZ(e){let t=this.array[e*this.itemSize+2];return this.normalized&&(t=Nn(t,this.array)),t}setZ(e,t){return this.normalized&&(t=ht(t,this.array)),this.array[e*this.itemSize+2]=t,this}getW(e){let t=this.array[e*this.itemSize+3];return this.normalized&&(t=Nn(t,this.array)),t}setW(e,t){return this.normalized&&(t=ht(t,this.array)),this.array[e*this.itemSize+3]=t,this}setXY(e,t,n){return e*=this.itemSize,this.normalized&&(t=ht(t,this.array),n=ht(n,this.array)),this.array[e+0]=t,this.array[e+1]=n,this}setXYZ(e,t,n,i){return e*=this.itemSize,this.normalized&&(t=ht(t,this.array),n=ht(n,this.array),i=ht(i,this.array)),this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=i,this}setXYZW(e,t,n,i,s){return e*=this.itemSize,this.normalized&&(t=ht(t,this.array),n=ht(n,this.array),i=ht(i,this.array),s=ht(s,this.array)),this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=i,this.array[e+3]=s,this}onUpload(e){return this.onUploadCallback=e,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return this.name!==""&&(e.name=this.name),this.usage!==Do&&(e.usage=this.usage),e}}class HC extends Ot{constructor(e,t,n){super(new Int8Array(e),t,n)}}class VC extends Ot{constructor(e,t,n){super(new Uint8Array(e),t,n)}}class WC extends Ot{constructor(e,t,n){super(new Uint8ClampedArray(e),t,n)}}class XC extends Ot{constructor(e,t,n){super(new Int16Array(e),t,n)}}class np extends Ot{constructor(e,t,n){super(new Uint16Array(e),t,n)}}class qC extends Ot{constructor(e,t,n){super(new Int32Array(e),t,n)}}class ip extends Ot{constructor(e,t,n){super(new Uint32Array(e),t,n)}}class YC extends Ot{constructor(e,t,n){super(new Uint16Array(e),t,n),this.isFloat16BufferAttribute=!0}getX(e){let t=_o(this.array[e*this.itemSize]);return this.normalized&&(t=Nn(t,this.array)),t}setX(e,t){return this.normalized&&(t=ht(t,this.array)),this.array[e*this.itemSize]=qn(t),this}getY(e){let t=_o(this.array[e*this.itemSize+1]);return this.normalized&&(t=Nn(t,this.array)),t}setY(e,t){return this.normalized&&(t=ht(t,this.array)),this.array[e*this.itemSize+1]=qn(t),this}getZ(e){let t=_o(this.array[e*this.itemSize+2]);return this.normalized&&(t=Nn(t,this.array)),t}setZ(e,t){return this.normalized&&(t=ht(t,this.array)),this.array[e*this.itemSize+2]=qn(t),this}getW(e){let t=_o(this.array[e*this.itemSize+3]);return this.normalized&&(t=Nn(t,this.array)),t}setW(e,t){return this.normalized&&(t=ht(t,this.array)),this.array[e*this.itemSize+3]=qn(t),this}setXY(e,t,n){return e*=this.itemSize,this.normalized&&(t=ht(t,this.array),n=ht(n,this.array)),this.array[e+0]=qn(t),this.array[e+1]=qn(n),this}setXYZ(e,t,n,i){return e*=this.itemSize,this.normalized&&(t=ht(t,this.array),n=ht(n,this.array),i=ht(i,this.array)),this.array[e+0]=qn(t),this.array[e+1]=qn(n),this.array[e+2]=qn(i),this}setXYZW(e,t,n,i,s){return e*=this.itemSize,this.normalized&&(t=ht(t,this.array),n=ht(n,this.array),i=ht(i,this.array),s=ht(s,this.array)),this.array[e+0]=qn(t),this.array[e+1]=qn(n),this.array[e+2]=qn(i),this.array[e+3]=qn(s),this}}class $e extends Ot{constructor(e,t,n){super(new Float32Array(e),t,n)}}class $C extends Ot{constructor(e,t,n){super(new Float64Array(e),t,n)}}let ZC=0;const vi=new at,uf=new Ct,ra=new F,ii=new Fn,lo=new Fn,_n=new F;class xt extends gr{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:ZC++}),this.uuid=oi(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(e){return Array.isArray(e)?this.index=new(lx(e)?ip:np)(e,1):this.index=e,this}getAttribute(e){return this.attributes[e]}setAttribute(e,t){return this.attributes[e]=t,this}deleteAttribute(e){return delete this.attributes[e],this}hasAttribute(e){return this.attributes[e]!==void 0}addGroup(e,t,n=0){this.groups.push({start:e,count:t,materialIndex:n})}clearGroups(){this.groups=[]}setDrawRange(e,t){this.drawRange.start=e,this.drawRange.count=t}applyMatrix4(e){const t=this.attributes.position;t!==void 0&&(t.applyMatrix4(e),t.needsUpdate=!0);const n=this.attributes.normal;if(n!==void 0){const s=new vt().getNormalMatrix(e);n.applyNormalMatrix(s),n.needsUpdate=!0}const i=this.attributes.tangent;return i!==void 0&&(i.transformDirection(e),i.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(e){return vi.makeRotationFromQuaternion(e),this.applyMatrix4(vi),this}rotateX(e){return vi.makeRotationX(e),this.applyMatrix4(vi),this}rotateY(e){return vi.makeRotationY(e),this.applyMatrix4(vi),this}rotateZ(e){return vi.makeRotationZ(e),this.applyMatrix4(vi),this}translate(e,t,n){return vi.makeTranslation(e,t,n),this.applyMatrix4(vi),this}scale(e,t,n){return vi.makeScale(e,t,n),this.applyMatrix4(vi),this}lookAt(e){return uf.lookAt(e),uf.updateMatrix(),this.applyMatrix4(uf.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(ra).negate(),this.translate(ra.x,ra.y,ra.z),this}setFromPoints(e){const t=[];for(let n=0,i=e.length;n<i;n++){const s=e[n];t.push(s.x,s.y,s.z||0)}return this.setAttribute("position",new $e(t,3)),this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new Fn);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingBox.set(new F(-1/0,-1/0,-1/0),new F(1/0,1/0,1/0));return}if(e!==void 0){if(this.boundingBox.setFromBufferAttribute(e),t)for(let n=0,i=t.length;n<i;n++){const s=t[n];ii.setFromBufferAttribute(s),this.morphTargetsRelative?(_n.addVectors(this.boundingBox.min,ii.min),this.boundingBox.expandByPoint(_n),_n.addVectors(this.boundingBox.max,ii.max),this.boundingBox.expandByPoint(_n)):(this.boundingBox.expandByPoint(ii.min),this.boundingBox.expandByPoint(ii.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new Cn);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingSphere.set(new F,1/0);return}if(e){const n=this.boundingSphere.center;if(ii.setFromBufferAttribute(e),t)for(let s=0,o=t.length;s<o;s++){const c=t[s];lo.setFromBufferAttribute(c),this.morphTargetsRelative?(_n.addVectors(ii.min,lo.min),ii.expandByPoint(_n),_n.addVectors(ii.max,lo.max),ii.expandByPoint(_n)):(ii.expandByPoint(lo.min),ii.expandByPoint(lo.max))}ii.getCenter(n);let i=0;for(let s=0,o=e.count;s<o;s++)_n.fromBufferAttribute(e,s),i=Math.max(i,n.distanceToSquared(_n));if(t)for(let s=0,o=t.length;s<o;s++){const c=t[s],u=this.morphTargetsRelative;for(let h=0,p=c.count;h<p;h++)_n.fromBufferAttribute(c,h),u&&(ra.fromBufferAttribute(e,h),_n.add(ra)),i=Math.max(i,n.distanceToSquared(_n))}this.boundingSphere.radius=Math.sqrt(i),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const e=this.index,t=this.attributes;if(e===null||t.position===void 0||t.normal===void 0||t.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const n=e.array,i=t.position.array,s=t.normal.array,o=t.uv.array,c=i.length/3;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new Ot(new Float32Array(4*c),4));const u=this.getAttribute("tangent").array,h=[],p=[];for(let T=0;T<c;T++)h[T]=new F,p[T]=new F;const g=new F,d=new F,m=new F,_=new Le,y=new Le,v=new Le,x=new F,w=new F;function M(T,N,ne){g.fromArray(i,T*3),d.fromArray(i,N*3),m.fromArray(i,ne*3),_.fromArray(o,T*2),y.fromArray(o,N*2),v.fromArray(o,ne*2),d.sub(g),m.sub(g),y.sub(_),v.sub(_);const Te=1/(y.x*v.y-v.x*y.y);isFinite(Te)&&(x.copy(d).multiplyScalar(v.y).addScaledVector(m,-y.y).multiplyScalar(Te),w.copy(m).multiplyScalar(y.x).addScaledVector(d,-v.x).multiplyScalar(Te),h[T].add(x),h[N].add(x),h[ne].add(x),p[T].add(w),p[N].add(w),p[ne].add(w))}let E=this.groups;E.length===0&&(E=[{start:0,count:n.length}]);for(let T=0,N=E.length;T<N;++T){const ne=E[T],Te=ne.start,H=ne.count;for(let re=Te,Q=Te+H;re<Q;re+=3)M(n[re+0],n[re+1],n[re+2])}const O=new F,P=new F,U=new F,V=new F;function se(T){U.fromArray(s,T*3),V.copy(U);const N=h[T];O.copy(N),O.sub(U.multiplyScalar(U.dot(N))).normalize(),P.crossVectors(V,N);const Te=P.dot(p[T])<0?-1:1;u[T*4]=O.x,u[T*4+1]=O.y,u[T*4+2]=O.z,u[T*4+3]=Te}for(let T=0,N=E.length;T<N;++T){const ne=E[T],Te=ne.start,H=ne.count;for(let re=Te,Q=Te+H;re<Q;re+=3)se(n[re+0]),se(n[re+1]),se(n[re+2])}}computeVertexNormals(){const e=this.index,t=this.getAttribute("position");if(t!==void 0){let n=this.getAttribute("normal");if(n===void 0)n=new Ot(new Float32Array(t.count*3),3),this.setAttribute("normal",n);else for(let d=0,m=n.count;d<m;d++)n.setXYZ(d,0,0,0);const i=new F,s=new F,o=new F,c=new F,u=new F,h=new F,p=new F,g=new F;if(e)for(let d=0,m=e.count;d<m;d+=3){const _=e.getX(d+0),y=e.getX(d+1),v=e.getX(d+2);i.fromBufferAttribute(t,_),s.fromBufferAttribute(t,y),o.fromBufferAttribute(t,v),p.subVectors(o,s),g.subVectors(i,s),p.cross(g),c.fromBufferAttribute(n,_),u.fromBufferAttribute(n,y),h.fromBufferAttribute(n,v),c.add(p),u.add(p),h.add(p),n.setXYZ(_,c.x,c.y,c.z),n.setXYZ(y,u.x,u.y,u.z),n.setXYZ(v,h.x,h.y,h.z)}else for(let d=0,m=t.count;d<m;d+=3)i.fromBufferAttribute(t,d+0),s.fromBufferAttribute(t,d+1),o.fromBufferAttribute(t,d+2),p.subVectors(o,s),g.subVectors(i,s),p.cross(g),n.setXYZ(d+0,p.x,p.y,p.z),n.setXYZ(d+1,p.x,p.y,p.z),n.setXYZ(d+2,p.x,p.y,p.z);this.normalizeNormals(),n.needsUpdate=!0}}normalizeNormals(){const e=this.attributes.normal;for(let t=0,n=e.count;t<n;t++)_n.fromBufferAttribute(e,t),_n.normalize(),e.setXYZ(t,_n.x,_n.y,_n.z)}toNonIndexed(){function e(c,u){const h=c.array,p=c.itemSize,g=c.normalized,d=new h.constructor(u.length*p);let m=0,_=0;for(let y=0,v=u.length;y<v;y++){c.isInterleavedBufferAttribute?m=u[y]*c.data.stride+c.offset:m=u[y]*p;for(let x=0;x<p;x++)d[_++]=h[m++]}return new Ot(d,p,g)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const t=new xt,n=this.index.array,i=this.attributes;for(const c in i){const u=i[c],h=e(u,n);t.setAttribute(c,h)}const s=this.morphAttributes;for(const c in s){const u=[],h=s[c];for(let p=0,g=h.length;p<g;p++){const d=h[p],m=e(d,n);u.push(m)}t.morphAttributes[c]=u}t.morphTargetsRelative=this.morphTargetsRelative;const o=this.groups;for(let c=0,u=o.length;c<u;c++){const h=o[c];t.addGroup(h.start,h.count,h.materialIndex)}return t}toJSON(){const e={metadata:{version:4.6,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,this.name!==""&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),this.parameters!==void 0){const u=this.parameters;for(const h in u)u[h]!==void 0&&(e[h]=u[h]);return e}e.data={attributes:{}};const t=this.index;t!==null&&(e.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)});const n=this.attributes;for(const u in n){const h=n[u];e.data.attributes[u]=h.toJSON(e.data)}const i={};let s=!1;for(const u in this.morphAttributes){const h=this.morphAttributes[u],p=[];for(let g=0,d=h.length;g<d;g++){const m=h[g];p.push(m.toJSON(e.data))}p.length>0&&(i[u]=p,s=!0)}s&&(e.data.morphAttributes=i,e.data.morphTargetsRelative=this.morphTargetsRelative);const o=this.groups;o.length>0&&(e.data.groups=JSON.parse(JSON.stringify(o)));const c=this.boundingSphere;return c!==null&&(e.data.boundingSphere={center:c.center.toArray(),radius:c.radius}),e}clone(){return new this.constructor().copy(this)}copy(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const t={};this.name=e.name;const n=e.index;n!==null&&this.setIndex(n.clone(t));const i=e.attributes;for(const h in i){const p=i[h];this.setAttribute(h,p.clone(t))}const s=e.morphAttributes;for(const h in s){const p=[],g=s[h];for(let d=0,m=g.length;d<m;d++)p.push(g[d].clone(t));this.morphAttributes[h]=p}this.morphTargetsRelative=e.morphTargetsRelative;const o=e.groups;for(let h=0,p=o.length;h<p;h++){const g=o[h];this.addGroup(g.start,g.count,g.materialIndex)}const c=e.boundingBox;c!==null&&(this.boundingBox=c.clone());const u=e.boundingSphere;return u!==null&&(this.boundingSphere=u.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}}const f_=new at,ns=new La,tc=new Cn,d_=new F,sa=new F,aa=new F,oa=new F,hf=new F,nc=new F,ic=new Le,rc=new Le,sc=new Le,p_=new F,m_=new F,g_=new F,ac=new F,oc=new F;class on extends Ct{constructor(e=new xt,t=new Hr){super(),this.isMesh=!0,this.type="Mesh",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),e.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),e.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,o=i.length;s<o;s++){const c=i[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[c]=s}}}}getVertexPosition(e,t){const n=this.geometry,i=n.attributes.position,s=n.morphAttributes.position,o=n.morphTargetsRelative;t.fromBufferAttribute(i,e);const c=this.morphTargetInfluences;if(s&&c){nc.set(0,0,0);for(let u=0,h=s.length;u<h;u++){const p=c[u],g=s[u];p!==0&&(hf.fromBufferAttribute(g,e),o?nc.addScaledVector(hf,p):nc.addScaledVector(hf.sub(t),p))}t.add(nc)}return t}raycast(e,t){const n=this.geometry,i=this.material,s=this.matrixWorld;i!==void 0&&(n.boundingSphere===null&&n.computeBoundingSphere(),tc.copy(n.boundingSphere),tc.applyMatrix4(s),ns.copy(e.ray).recast(e.near),!(tc.containsPoint(ns.origin)===!1&&(ns.intersectSphere(tc,d_)===null||ns.origin.distanceToSquared(d_)>(e.far-e.near)**2))&&(f_.copy(s).invert(),ns.copy(e.ray).applyMatrix4(f_),!(n.boundingBox!==null&&ns.intersectsBox(n.boundingBox)===!1)&&this._computeIntersections(e,t,ns)))}_computeIntersections(e,t,n){let i;const s=this.geometry,o=this.material,c=s.index,u=s.attributes.position,h=s.attributes.uv,p=s.attributes.uv1,g=s.attributes.normal,d=s.groups,m=s.drawRange;if(c!==null)if(Array.isArray(o))for(let _=0,y=d.length;_<y;_++){const v=d[_],x=o[v.materialIndex],w=Math.max(v.start,m.start),M=Math.min(c.count,Math.min(v.start+v.count,m.start+m.count));for(let E=w,O=M;E<O;E+=3){const P=c.getX(E),U=c.getX(E+1),V=c.getX(E+2);i=lc(this,x,e,n,h,p,g,P,U,V),i&&(i.faceIndex=Math.floor(E/3),i.face.materialIndex=v.materialIndex,t.push(i))}}else{const _=Math.max(0,m.start),y=Math.min(c.count,m.start+m.count);for(let v=_,x=y;v<x;v+=3){const w=c.getX(v),M=c.getX(v+1),E=c.getX(v+2);i=lc(this,o,e,n,h,p,g,w,M,E),i&&(i.faceIndex=Math.floor(v/3),t.push(i))}}else if(u!==void 0)if(Array.isArray(o))for(let _=0,y=d.length;_<y;_++){const v=d[_],x=o[v.materialIndex],w=Math.max(v.start,m.start),M=Math.min(u.count,Math.min(v.start+v.count,m.start+m.count));for(let E=w,O=M;E<O;E+=3){const P=E,U=E+1,V=E+2;i=lc(this,x,e,n,h,p,g,P,U,V),i&&(i.faceIndex=Math.floor(E/3),i.face.materialIndex=v.materialIndex,t.push(i))}}else{const _=Math.max(0,m.start),y=Math.min(u.count,m.start+m.count);for(let v=_,x=y;v<x;v+=3){const w=v,M=v+1,E=v+2;i=lc(this,o,e,n,h,p,g,w,M,E),i&&(i.faceIndex=Math.floor(v/3),t.push(i))}}}}function JC(r,e,t,n,i,s,o,c){let u;if(e.side===On?u=n.intersectTriangle(o,s,i,!0,c):u=n.intersectTriangle(i,s,o,e.side===fr,c),u===null)return null;oc.copy(c),oc.applyMatrix4(r.matrixWorld);const h=t.ray.origin.distanceTo(oc);return h<t.near||h>t.far?null:{distance:h,point:oc.clone(),object:r}}function lc(r,e,t,n,i,s,o,c,u,h){r.getVertexPosition(c,sa),r.getVertexPosition(u,aa),r.getVertexPosition(h,oa);const p=JC(r,e,t,n,sa,aa,oa,ac);if(p){i&&(ic.fromBufferAttribute(i,c),rc.fromBufferAttribute(i,u),sc.fromBufferAttribute(i,h),p.uv=ai.getInterpolation(ac,sa,aa,oa,ic,rc,sc,new Le)),s&&(ic.fromBufferAttribute(s,c),rc.fromBufferAttribute(s,u),sc.fromBufferAttribute(s,h),p.uv1=ai.getInterpolation(ac,sa,aa,oa,ic,rc,sc,new Le),p.uv2=p.uv1),o&&(p_.fromBufferAttribute(o,c),m_.fromBufferAttribute(o,u),g_.fromBufferAttribute(o,h),p.normal=ai.getInterpolation(ac,sa,aa,oa,p_,m_,g_,new F),p.normal.dot(n.direction)>0&&p.normal.multiplyScalar(-1));const g={a:c,b:u,c:h,normal:new F,materialIndex:0};ai.getNormal(sa,aa,oa,g.normal),p.face=g}return p}class Ts extends xt{constructor(e=1,t=1,n=1,i=1,s=1,o=1){super(),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:n,widthSegments:i,heightSegments:s,depthSegments:o};const c=this;i=Math.floor(i),s=Math.floor(s),o=Math.floor(o);const u=[],h=[],p=[],g=[];let d=0,m=0;_("z","y","x",-1,-1,n,t,e,o,s,0),_("z","y","x",1,-1,n,t,-e,o,s,1),_("x","z","y",1,1,e,n,t,i,o,2),_("x","z","y",1,-1,e,n,-t,i,o,3),_("x","y","z",1,-1,e,t,n,i,s,4),_("x","y","z",-1,-1,e,t,-n,i,s,5),this.setIndex(u),this.setAttribute("position",new $e(h,3)),this.setAttribute("normal",new $e(p,3)),this.setAttribute("uv",new $e(g,2));function _(y,v,x,w,M,E,O,P,U,V,se){const T=E/U,N=O/V,ne=E/2,Te=O/2,H=P/2,re=U+1,Q=V+1;let Me=0,ve=0;const be=new F;for(let Ie=0;Ie<Q;Ie++){const Se=Ie*N-Te;for(let Ve=0;Ve<re;Ve++){const je=Ve*T-ne;be[y]=je*w,be[v]=Se*M,be[x]=H,h.push(be.x,be.y,be.z),be[y]=0,be[v]=0,be[x]=P>0?1:-1,p.push(be.x,be.y,be.z),g.push(Ve/U),g.push(1-Ie/V),Me+=1}}for(let Ie=0;Ie<V;Ie++)for(let Se=0;Se<U;Se++){const Ve=d+Se+re*Ie,je=d+Se+re*(Ie+1),he=d+(Se+1)+re*(Ie+1),Pe=d+(Se+1)+re*Ie;u.push(Ve,je,Pe),u.push(je,he,Pe),ve+=6}c.addGroup(m,ve,se),m+=ve,d+=Me}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Ts(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}}function Ta(r){const e={};for(const t in r){e[t]={};for(const n in r[t]){const i=r[t][n];i&&(i.isColor||i.isMatrix3||i.isMatrix4||i.isVector2||i.isVector3||i.isVector4||i.isTexture||i.isQuaternion)?i.isRenderTargetTexture?(console.warn("UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms()."),e[t][n]=null):e[t][n]=i.clone():Array.isArray(i)?e[t][n]=i.slice():e[t][n]=i}}return e}function Un(r){const e={};for(let t=0;t<r.length;t++){const n=Ta(r[t]);for(const i in n)e[i]=n[i]}return e}function KC(r){const e=[];for(let t=0;t<r.length;t++)e.push(r[t].clone());return e}function fx(r){return r.getRenderTarget()===null?r.outputColorSpace:Ut.workingColorSpace}const dx={clone:Ta,merge:Un};var jC=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,QC=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;class Li extends Rn{constructor(e){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader=jC,this.fragmentShader=QC,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.forceSinglePass=!0,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1,clipCullDistance:!1,multiDraw:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv1:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,e!==void 0&&this.setValues(e)}copy(e){return super.copy(e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=Ta(e.uniforms),this.uniformsGroups=KC(e.uniformsGroups),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.fog=e.fog,this.lights=e.lights,this.clipping=e.clipping,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}toJSON(e){const t=super.toJSON(e);t.glslVersion=this.glslVersion,t.uniforms={};for(const i in this.uniforms){const o=this.uniforms[i].value;o&&o.isTexture?t.uniforms[i]={type:"t",value:o.toJSON(e).uuid}:o&&o.isColor?t.uniforms[i]={type:"c",value:o.getHex()}:o&&o.isVector2?t.uniforms[i]={type:"v2",value:o.toArray()}:o&&o.isVector3?t.uniforms[i]={type:"v3",value:o.toArray()}:o&&o.isVector4?t.uniforms[i]={type:"v4",value:o.toArray()}:o&&o.isMatrix3?t.uniforms[i]={type:"m3",value:o.toArray()}:o&&o.isMatrix4?t.uniforms[i]={type:"m4",value:o.toArray()}:t.uniforms[i]={value:o}}Object.keys(this.defines).length>0&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader,t.lights=this.lights,t.clipping=this.clipping;const n={};for(const i in this.extensions)this.extensions[i]===!0&&(n[i]=!0);return Object.keys(n).length>0&&(t.extensions=n),t}}class uu extends Ct{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new at,this.projectionMatrix=new at,this.projectionMatrixInverse=new at,this.coordinateSystem=ki}copy(e,t){return super.copy(e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this.coordinateSystem=e.coordinateSystem,this}getWorldDirection(e){return super.getWorldDirection(e).negate()}updateMatrixWorld(e){super.updateMatrixWorld(e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(e,t){super.updateWorldMatrix(e,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}}const Pr=new F,__=new Le,v_=new Le;class yn extends uu{constructor(e=50,t=1,n=.1,i=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=n,this.far=i,this.focus=10,this.aspect=t,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=e.view===null?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}setFocalLength(e){const t=.5*this.getFilmHeight()/e;this.fov=Aa*2*Math.atan(t),this.updateProjectionMatrix()}getFocalLength(){const e=Math.tan(ys*.5*this.fov);return .5*this.getFilmHeight()/e}getEffectiveFOV(){return Aa*2*Math.atan(Math.tan(ys*.5*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}getViewBounds(e,t,n){Pr.set(-1,-1,.5).applyMatrix4(this.projectionMatrixInverse),t.set(Pr.x,Pr.y).multiplyScalar(-e/Pr.z),Pr.set(1,1,.5).applyMatrix4(this.projectionMatrixInverse),n.set(Pr.x,Pr.y).multiplyScalar(-e/Pr.z)}getViewSize(e,t){return this.getViewBounds(e,__,v_),t.subVectors(v_,__)}setViewOffset(e,t,n,i,s,o){this.aspect=e/t,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=i,this.view.width=s,this.view.height=o,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=this.near;let t=e*Math.tan(ys*.5*this.fov)/this.zoom,n=2*t,i=this.aspect*n,s=-.5*i;const o=this.view;if(this.view!==null&&this.view.enabled){const u=o.fullWidth,h=o.fullHeight;s+=o.offsetX*i/u,t-=o.offsetY*n/h,i*=o.width/u,n*=o.height/h}const c=this.filmOffset;c!==0&&(s+=e*c/this.getFilmWidth()),this.projectionMatrix.makePerspective(s,s+i,t,t-n,e,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,this.view!==null&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}}const la=-90,ca=1;class px extends Ct{constructor(e,t,n){super(),this.type="CubeCamera",this.renderTarget=n,this.coordinateSystem=null,this.activeMipmapLevel=0;const i=new yn(la,ca,e,t);i.layers=this.layers,this.add(i);const s=new yn(la,ca,e,t);s.layers=this.layers,this.add(s);const o=new yn(la,ca,e,t);o.layers=this.layers,this.add(o);const c=new yn(la,ca,e,t);c.layers=this.layers,this.add(c);const u=new yn(la,ca,e,t);u.layers=this.layers,this.add(u);const h=new yn(la,ca,e,t);h.layers=this.layers,this.add(h)}updateCoordinateSystem(){const e=this.coordinateSystem,t=this.children.concat(),[n,i,s,o,c,u]=t;for(const h of t)this.remove(h);if(e===ki)n.up.set(0,1,0),n.lookAt(1,0,0),i.up.set(0,1,0),i.lookAt(-1,0,0),s.up.set(0,0,-1),s.lookAt(0,1,0),o.up.set(0,0,1),o.lookAt(0,-1,0),c.up.set(0,1,0),c.lookAt(0,0,1),u.up.set(0,1,0),u.lookAt(0,0,-1);else if(e===Uo)n.up.set(0,-1,0),n.lookAt(-1,0,0),i.up.set(0,-1,0),i.lookAt(1,0,0),s.up.set(0,0,1),s.lookAt(0,1,0),o.up.set(0,0,-1),o.lookAt(0,-1,0),c.up.set(0,-1,0),c.lookAt(0,0,1),u.up.set(0,-1,0),u.lookAt(0,0,-1);else throw new Error("THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: "+e);for(const h of t)this.add(h),h.updateMatrixWorld()}update(e,t){this.parent===null&&this.updateMatrixWorld();const{renderTarget:n,activeMipmapLevel:i}=this;this.coordinateSystem!==e.coordinateSystem&&(this.coordinateSystem=e.coordinateSystem,this.updateCoordinateSystem());const[s,o,c,u,h,p]=this.children,g=e.getRenderTarget(),d=e.getActiveCubeFace(),m=e.getActiveMipmapLevel(),_=e.xr.enabled;e.xr.enabled=!1;const y=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,e.setRenderTarget(n,0,i),e.render(t,s),e.setRenderTarget(n,1,i),e.render(t,o),e.setRenderTarget(n,2,i),e.render(t,c),e.setRenderTarget(n,3,i),e.render(t,u),e.setRenderTarget(n,4,i),e.render(t,h),n.texture.generateMipmaps=y,e.setRenderTarget(n,5,i),e.render(t,p),e.setRenderTarget(g,d,m),e.xr.enabled=_,n.texture.needsPMREMUpdate=!0}}class Yo extends Qt{constructor(e,t,n,i,s,o,c,u,h,p){e=e!==void 0?e:[],t=t!==void 0?t:dr,super(e,t,n,i,s,o,c,u,h,p),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(e){this.image=e}}class mx extends Ri{constructor(e=1,t={}){super(e,e,t),this.isWebGLCubeRenderTarget=!0;const n={width:e,height:e,depth:1},i=[n,n,n,n,n,n];t.encoding!==void 0&&(bs("THREE.WebGLCubeRenderTarget: option.encoding has been replaced by option.colorSpace."),t.colorSpace=t.encoding===Br?dn:si),this.texture=new Yo(i,t.mapping,t.wrapS,t.wrapT,t.magFilter,t.minFilter,t.format,t.type,t.anisotropy,t.colorSpace),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=t.generateMipmaps!==void 0?t.generateMipmaps:!1,this.texture.minFilter=t.minFilter!==void 0?t.minFilter:$t}fromEquirectangularTexture(e,t){this.texture.type=t.type,this.texture.colorSpace=t.colorSpace,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;const n={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},i=new Ts(5,5,5),s=new Li({name:"CubemapFromEquirect",uniforms:Ta(n.uniforms),vertexShader:n.vertexShader,fragmentShader:n.fragmentShader,side:On,blending:cr});s.uniforms.tEquirect.value=t;const o=new on(i,s),c=t.minFilter;return t.minFilter===zi&&(t.minFilter=$t),new px(1,10,this).update(e,o),t.minFilter=c,o.geometry.dispose(),o.material.dispose(),this}clear(e,t,n,i){const s=e.getRenderTarget();for(let o=0;o<6;o++)e.setRenderTarget(this,o),e.clear(t,n,i);e.setRenderTarget(s)}}const ff=new F,eR=new F,tR=new vt;class Ur{constructor(e=new F(1,0,0),t=0){this.isPlane=!0,this.normal=e,this.constant=t}set(e,t){return this.normal.copy(e),this.constant=t,this}setComponents(e,t,n,i){return this.normal.set(e,t,n),this.constant=i,this}setFromNormalAndCoplanarPoint(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}setFromCoplanarPoints(e,t,n){const i=ff.subVectors(n,t).cross(eR.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(i,e),this}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){const e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,t){return t.copy(e).addScaledVector(this.normal,-this.distanceToPoint(e))}intersectLine(e,t){const n=e.delta(ff),i=this.normal.dot(n);if(i===0)return this.distanceToPoint(e.start)===0?t.copy(e.start):null;const s=-(e.start.dot(this.normal)+this.constant)/i;return s<0||s>1?null:t.copy(e.start).addScaledVector(n,s)}intersectsLine(e){const t=this.distanceToPoint(e.start),n=this.distanceToPoint(e.end);return t<0&&n>0||n<0&&t>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,t){const n=t||tR.getNormalMatrix(e),i=this.coplanarPoint(ff).applyMatrix4(e),s=this.normal.applyMatrix3(n).normalize();return this.constant=-i.dot(s),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return new this.constructor().copy(this)}}const is=new Cn,cc=new F;class $o{constructor(e=new Ur,t=new Ur,n=new Ur,i=new Ur,s=new Ur,o=new Ur){this.planes=[e,t,n,i,s,o]}set(e,t,n,i,s,o){const c=this.planes;return c[0].copy(e),c[1].copy(t),c[2].copy(n),c[3].copy(i),c[4].copy(s),c[5].copy(o),this}copy(e){const t=this.planes;for(let n=0;n<6;n++)t[n].copy(e.planes[n]);return this}setFromProjectionMatrix(e,t=ki){const n=this.planes,i=e.elements,s=i[0],o=i[1],c=i[2],u=i[3],h=i[4],p=i[5],g=i[6],d=i[7],m=i[8],_=i[9],y=i[10],v=i[11],x=i[12],w=i[13],M=i[14],E=i[15];if(n[0].setComponents(u-s,d-h,v-m,E-x).normalize(),n[1].setComponents(u+s,d+h,v+m,E+x).normalize(),n[2].setComponents(u+o,d+p,v+_,E+w).normalize(),n[3].setComponents(u-o,d-p,v-_,E-w).normalize(),n[4].setComponents(u-c,d-g,v-y,E-M).normalize(),t===ki)n[5].setComponents(u+c,d+g,v+y,E+M).normalize();else if(t===Uo)n[5].setComponents(c,g,y,M).normalize();else throw new Error("THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: "+t);return this}intersectsObject(e){if(e.boundingSphere!==void 0)e.boundingSphere===null&&e.computeBoundingSphere(),is.copy(e.boundingSphere).applyMatrix4(e.matrixWorld);else{const t=e.geometry;t.boundingSphere===null&&t.computeBoundingSphere(),is.copy(t.boundingSphere).applyMatrix4(e.matrixWorld)}return this.intersectsSphere(is)}intersectsSprite(e){return is.center.set(0,0,0),is.radius=.7071067811865476,is.applyMatrix4(e.matrixWorld),this.intersectsSphere(is)}intersectsSphere(e){const t=this.planes,n=e.center,i=-e.radius;for(let s=0;s<6;s++)if(t[s].distanceToPoint(n)<i)return!1;return!0}intersectsBox(e){const t=this.planes;for(let n=0;n<6;n++){const i=t[n];if(cc.x=i.normal.x>0?e.max.x:e.min.x,cc.y=i.normal.y>0?e.max.y:e.min.y,cc.z=i.normal.z>0?e.max.z:e.min.z,i.distanceToPoint(cc)<0)return!1}return!0}containsPoint(e){const t=this.planes;for(let n=0;n<6;n++)if(t[n].distanceToPoint(e)<0)return!1;return!0}clone(){return new this.constructor().copy(this)}}function gx(){let r=null,e=!1,t=null,n=null;function i(s,o){t(s,o),n=r.requestAnimationFrame(i)}return{start:function(){e!==!0&&t!==null&&(n=r.requestAnimationFrame(i),e=!0)},stop:function(){r.cancelAnimationFrame(n),e=!1},setAnimationLoop:function(s){t=s},setContext:function(s){r=s}}}function nR(r,e){const t=e.isWebGL2,n=new WeakMap;function i(h,p){const g=h.array,d=h.usage,m=g.byteLength,_=r.createBuffer();r.bindBuffer(p,_),r.bufferData(p,g,d),h.onUploadCallback();let y;if(g instanceof Float32Array)y=r.FLOAT;else if(g instanceof Uint16Array)if(h.isFloat16BufferAttribute)if(t)y=r.HALF_FLOAT;else throw new Error("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.");else y=r.UNSIGNED_SHORT;else if(g instanceof Int16Array)y=r.SHORT;else if(g instanceof Uint32Array)y=r.UNSIGNED_INT;else if(g instanceof Int32Array)y=r.INT;else if(g instanceof Int8Array)y=r.BYTE;else if(g instanceof Uint8Array)y=r.UNSIGNED_BYTE;else if(g instanceof Uint8ClampedArray)y=r.UNSIGNED_BYTE;else throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+g);return{buffer:_,type:y,bytesPerElement:g.BYTES_PER_ELEMENT,version:h.version,size:m}}function s(h,p,g){const d=p.array,m=p._updateRange,_=p.updateRanges;if(r.bindBuffer(g,h),m.count===-1&&_.length===0&&r.bufferSubData(g,0,d),_.length!==0){for(let y=0,v=_.length;y<v;y++){const x=_[y];t?r.bufferSubData(g,x.start*d.BYTES_PER_ELEMENT,d,x.start,x.count):r.bufferSubData(g,x.start*d.BYTES_PER_ELEMENT,d.subarray(x.start,x.start+x.count))}p.clearUpdateRanges()}m.count!==-1&&(t?r.bufferSubData(g,m.offset*d.BYTES_PER_ELEMENT,d,m.offset,m.count):r.bufferSubData(g,m.offset*d.BYTES_PER_ELEMENT,d.subarray(m.offset,m.offset+m.count)),m.count=-1),p.onUploadCallback()}function o(h){return h.isInterleavedBufferAttribute&&(h=h.data),n.get(h)}function c(h){h.isInterleavedBufferAttribute&&(h=h.data);const p=n.get(h);p&&(r.deleteBuffer(p.buffer),n.delete(h))}function u(h,p){if(h.isGLBufferAttribute){const d=n.get(h);(!d||d.version<h.version)&&n.set(h,{buffer:h.buffer,type:h.type,bytesPerElement:h.elementSize,version:h.version});return}h.isInterleavedBufferAttribute&&(h=h.data);const g=n.get(h);if(g===void 0)n.set(h,i(h,p));else if(g.version<h.version){if(g.size!==h.array.byteLength)throw new Error("THREE.WebGLAttributes: The size of the buffer attribute's array buffer does not match the original size. Resizing buffer attributes is not supported.");s(g.buffer,h,p),g.version=h.version}}return{get:o,remove:c,update:u}}class Pa extends xt{constructor(e=1,t=1,n=1,i=1){super(),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:n,heightSegments:i};const s=e/2,o=t/2,c=Math.floor(n),u=Math.floor(i),h=c+1,p=u+1,g=e/c,d=t/u,m=[],_=[],y=[],v=[];for(let x=0;x<p;x++){const w=x*d-o;for(let M=0;M<h;M++){const E=M*g-s;_.push(E,-w,0),y.push(0,0,1),v.push(M/c),v.push(1-x/u)}}for(let x=0;x<u;x++)for(let w=0;w<c;w++){const M=w+h*x,E=w+h*(x+1),O=w+1+h*(x+1),P=w+1+h*x;m.push(M,E,P),m.push(E,O,P)}this.setIndex(m),this.setAttribute("position",new $e(_,3)),this.setAttribute("normal",new $e(y,3)),this.setAttribute("uv",new $e(v,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Pa(e.width,e.height,e.widthSegments,e.heightSegments)}}var iR=`#ifdef USE_ALPHAHASH
	if ( diffuseColor.a < getAlphaHashThreshold( vPosition ) ) discard;
#endif`,rR=`#ifdef USE_ALPHAHASH
	const float ALPHA_HASH_SCALE = 0.05;
	float hash2D( vec2 value ) {
		return fract( 1.0e4 * sin( 17.0 * value.x + 0.1 * value.y ) * ( 0.1 + abs( sin( 13.0 * value.y + value.x ) ) ) );
	}
	float hash3D( vec3 value ) {
		return hash2D( vec2( hash2D( value.xy ), value.z ) );
	}
	float getAlphaHashThreshold( vec3 position ) {
		float maxDeriv = max(
			length( dFdx( position.xyz ) ),
			length( dFdy( position.xyz ) )
		);
		float pixScale = 1.0 / ( ALPHA_HASH_SCALE * maxDeriv );
		vec2 pixScales = vec2(
			exp2( floor( log2( pixScale ) ) ),
			exp2( ceil( log2( pixScale ) ) )
		);
		vec2 alpha = vec2(
			hash3D( floor( pixScales.x * position.xyz ) ),
			hash3D( floor( pixScales.y * position.xyz ) )
		);
		float lerpFactor = fract( log2( pixScale ) );
		float x = ( 1.0 - lerpFactor ) * alpha.x + lerpFactor * alpha.y;
		float a = min( lerpFactor, 1.0 - lerpFactor );
		vec3 cases = vec3(
			x * x / ( 2.0 * a * ( 1.0 - a ) ),
			( x - 0.5 * a ) / ( 1.0 - a ),
			1.0 - ( ( 1.0 - x ) * ( 1.0 - x ) / ( 2.0 * a * ( 1.0 - a ) ) )
		);
		float threshold = ( x < ( 1.0 - a ) )
			? ( ( x < a ) ? cases.x : cases.y )
			: cases.z;
		return clamp( threshold , 1.0e-6, 1.0 );
	}
#endif`,sR=`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;
#endif`,aR=`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,oR=`#ifdef USE_ALPHATEST
	#ifdef ALPHA_TO_COVERAGE
	diffuseColor.a = smoothstep( alphaTest, alphaTest + fwidth( diffuseColor.a ), diffuseColor.a );
	if ( diffuseColor.a == 0.0 ) discard;
	#else
	if ( diffuseColor.a < alphaTest ) discard;
	#endif
#endif`,lR=`#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif`,cR=`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_CLEARCOAT ) 
		clearcoatSpecularIndirect *= ambientOcclusion;
	#endif
	#if defined( USE_SHEEN ) 
		sheenSpecularIndirect *= ambientOcclusion;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometryNormal, geometryViewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );
	#endif
#endif`,uR=`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,hR=`#ifdef USE_BATCHING
	attribute float batchId;
	uniform highp sampler2D batchingTexture;
	mat4 getBatchingMatrix( const in float i ) {
		int size = textureSize( batchingTexture, 0 ).x;
		int j = int( i ) * 4;
		int x = j % size;
		int y = j / size;
		vec4 v1 = texelFetch( batchingTexture, ivec2( x, y ), 0 );
		vec4 v2 = texelFetch( batchingTexture, ivec2( x + 1, y ), 0 );
		vec4 v3 = texelFetch( batchingTexture, ivec2( x + 2, y ), 0 );
		vec4 v4 = texelFetch( batchingTexture, ivec2( x + 3, y ), 0 );
		return mat4( v1, v2, v3, v4 );
	}
#endif`,fR=`#ifdef USE_BATCHING
	mat4 batchingMatrix = getBatchingMatrix( batchId );
#endif`,dR=`vec3 transformed = vec3( position );
#ifdef USE_ALPHAHASH
	vPosition = vec3( position );
#endif`,pR=`vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,mR=`float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( specularColor, 1.0, dotVH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
} // validated`,gR=`#ifdef USE_IRIDESCENCE
	const mat3 XYZ_TO_REC709 = mat3(
		 3.2404542, -0.9692660,  0.0556434,
		-1.5371385,  1.8760108, -0.2040259,
		-0.4985314,  0.0415560,  1.0572252
	);
	vec3 Fresnel0ToIor( vec3 fresnel0 ) {
		vec3 sqrtF0 = sqrt( fresnel0 );
		return ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );
	}
	vec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );
	}
	float IorToFresnel0( float transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));
	}
	vec3 evalSensitivity( float OPD, vec3 shift ) {
		float phase = 2.0 * PI * OPD * 1.0e-9;
		vec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );
		vec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );
		vec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );
		vec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );
		xyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );
		xyz /= 1.0685e-7;
		vec3 rgb = XYZ_TO_REC709 * xyz;
		return rgb;
	}
	vec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {
		vec3 I;
		float iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );
		float sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );
		float cosTheta2Sq = 1.0 - sinTheta2Sq;
		if ( cosTheta2Sq < 0.0 ) {
			return vec3( 1.0 );
		}
		float cosTheta2 = sqrt( cosTheta2Sq );
		float R0 = IorToFresnel0( iridescenceIOR, outsideIOR );
		float R12 = F_Schlick( R0, 1.0, cosTheta1 );
		float T121 = 1.0 - R12;
		float phi12 = 0.0;
		if ( iridescenceIOR < outsideIOR ) phi12 = PI;
		float phi21 = PI - phi12;
		vec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );		vec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );
		vec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );
		vec3 phi23 = vec3( 0.0 );
		if ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;
		if ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;
		if ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;
		float OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;
		vec3 phi = vec3( phi21 ) + phi23;
		vec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );
		vec3 r123 = sqrt( R123 );
		vec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );
		vec3 C0 = R12 + Rs;
		I = C0;
		vec3 Cm = Rs - T121;
		for ( int m = 1; m <= 2; ++ m ) {
			Cm *= r123;
			vec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );
			I += Cm * Sm;
		}
		return max( I, vec3( 0.0 ) );
	}
#endif`,_R=`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vBumpMapUv );
		vec2 dSTdy = dFdy( vBumpMapUv );
		float Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {
		vec3 vSigmaX = normalize( dFdx( surf_pos.xyz ) );
		vec3 vSigmaY = normalize( dFdy( surf_pos.xyz ) );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 ) * faceDirection;
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,vR=`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#ifdef ALPHA_TO_COVERAGE
		float distanceToPlane, distanceGradient;
		float clipOpacity = 1.0;
		#pragma unroll_loop_start
		for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			distanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;
			distanceGradient = fwidth( distanceToPlane ) / 2.0;
			clipOpacity *= smoothstep( - distanceGradient, distanceGradient, distanceToPlane );
			if ( clipOpacity == 0.0 ) discard;
		}
		#pragma unroll_loop_end
		#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
			float unionClipOpacity = 1.0;
			#pragma unroll_loop_start
			for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
				plane = clippingPlanes[ i ];
				distanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;
				distanceGradient = fwidth( distanceToPlane ) / 2.0;
				unionClipOpacity *= 1.0 - smoothstep( - distanceGradient, distanceGradient, distanceToPlane );
			}
			#pragma unroll_loop_end
			clipOpacity *= 1.0 - unionClipOpacity;
		#endif
		diffuseColor.a *= clipOpacity;
		if ( diffuseColor.a == 0.0 ) discard;
	#else
		#pragma unroll_loop_start
		for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
		}
		#pragma unroll_loop_end
		#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
			bool clipped = true;
			#pragma unroll_loop_start
			for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
				plane = clippingPlanes[ i ];
				clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
			}
			#pragma unroll_loop_end
			if ( clipped ) discard;
		#endif
	#endif
#endif`,xR=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,yR=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,bR=`#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,MR=`#if defined( USE_COLOR_ALPHA )
	diffuseColor *= vColor;
#elif defined( USE_COLOR )
	diffuseColor.rgb *= vColor;
#endif`,SR=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR )
	varying vec3 vColor;
#endif`,wR=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	varying vec3 vColor;
#endif`,ER=`#if defined( USE_COLOR_ALPHA )
	vColor = vec4( 1.0 );
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor *= color;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif`,AR=`#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
vec3 pow2( const in vec3 x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract( sin( sn ) * c );
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
#ifdef USE_ALPHAHASH
	varying vec3 vPosition;
#endif
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
float luminance( const in vec3 rgb ) {
	const vec3 weights = vec3( 0.2126729, 0.7151522, 0.0721750 );
	return dot( weights, rgb );
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}
vec3 BRDF_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
float F_Schlick( const in float f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
} // validated`,TR=`#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		highp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		uv.x += filterInt * 3.0 * cubeUV_minTileSize;
		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );
		uv.x *= CUBEUV_TEXEL_WIDTH;
		uv.y *= CUBEUV_TEXEL_HEIGHT;
		#ifdef texture2DGradEXT
			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;
		#else
			return texture2D( envMap, uv ).rgb;
		#endif
	}
	#define cubeUV_r0 1.0
	#define cubeUV_m0 - 2.0
	#define cubeUV_r1 0.8
	#define cubeUV_m1 - 1.0
	#define cubeUV_r4 0.4
	#define cubeUV_m4 2.0
	#define cubeUV_r5 0.305
	#define cubeUV_m5 3.0
	#define cubeUV_r6 0.21
	#define cubeUV_m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= cubeUV_r1 ) {
			mip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;
		} else if ( roughness >= cubeUV_r4 ) {
			mip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;
		} else if ( roughness >= cubeUV_r5 ) {
			mip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;
		} else if ( roughness >= cubeUV_r6 ) {
			mip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`,CR=`vec3 transformedNormal = objectNormal;
#ifdef USE_TANGENT
	vec3 transformedTangent = objectTangent;
#endif
#ifdef USE_BATCHING
	mat3 bm = mat3( batchingMatrix );
	transformedNormal /= vec3( dot( bm[ 0 ], bm[ 0 ] ), dot( bm[ 1 ], bm[ 1 ] ), dot( bm[ 2 ], bm[ 2 ] ) );
	transformedNormal = bm * transformedNormal;
	#ifdef USE_TANGENT
		transformedTangent = bm * transformedTangent;
	#endif
#endif
#ifdef USE_INSTANCING
	mat3 im = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( im[ 0 ], im[ 0 ] ), dot( im[ 1 ], im[ 1 ] ), dot( im[ 2 ], im[ 2 ] ) );
	transformedNormal = im * transformedNormal;
	#ifdef USE_TANGENT
		transformedTangent = im * transformedTangent;
	#endif
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	transformedTangent = ( modelViewMatrix * vec4( transformedTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,RR=`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,LR=`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );
#endif`,PR=`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,IR=`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,DR="gl_FragColor = linearToOutputTexel( gl_FragColor );",UR=`
const mat3 LINEAR_SRGB_TO_LINEAR_DISPLAY_P3 = mat3(
	vec3( 0.8224621, 0.177538, 0.0 ),
	vec3( 0.0331941, 0.9668058, 0.0 ),
	vec3( 0.0170827, 0.0723974, 0.9105199 )
);
const mat3 LINEAR_DISPLAY_P3_TO_LINEAR_SRGB = mat3(
	vec3( 1.2249401, - 0.2249404, 0.0 ),
	vec3( - 0.0420569, 1.0420571, 0.0 ),
	vec3( - 0.0196376, - 0.0786361, 1.0982735 )
);
vec4 LinearSRGBToLinearDisplayP3( in vec4 value ) {
	return vec4( value.rgb * LINEAR_SRGB_TO_LINEAR_DISPLAY_P3, value.a );
}
vec4 LinearDisplayP3ToLinearSRGB( in vec4 value ) {
	return vec4( value.rgb * LINEAR_DISPLAY_P3_TO_LINEAR_SRGB, value.a );
}
vec4 LinearTransferOETF( in vec4 value ) {
	return value;
}
vec4 sRGBTransferOETF( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}
vec4 LinearToLinear( in vec4 value ) {
	return value;
}
vec4 LinearTosRGB( in vec4 value ) {
	return sRGBTransferOETF( value );
}`,NR=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,OR=`#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,FR=`#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,BR=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,zR=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,kR=`#ifdef USE_FOG
	vFogDepth = - mvPosition.z;
#endif`,GR=`#ifdef USE_FOG
	varying float vFogDepth;
#endif`,HR=`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,VR=`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float vFogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,WR=`#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return vec3( texture2D( gradientMap, coord ).r );
	#else
		vec2 fw = fwidth( coord ) * 0.5;
		return mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );
	#endif
}`,XR=`#ifdef USE_LIGHTMAP
	vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
	vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
	reflectedLight.indirectDiffuse += lightMapIrradiance;
#endif`,qR=`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,YR=`LambertMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularStrength = specularStrength;`,$R=`varying vec3 vViewPosition;
struct LambertMaterial {
	vec3 diffuseColor;
	float specularStrength;
};
void RE_Direct_Lambert( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Lambert
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Lambert`,ZR=`uniform bool receiveShadow;
uniform vec3 ambientLightColor;
#if defined( USE_LIGHT_PROBES )
	uniform vec3 lightProbe[ 9 ];
#endif
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {
	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	return irradiance;
}
float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	#if defined ( LEGACY_LIGHTS )
		if ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {
			return pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );
		}
		return 1.0;
	#else
		float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
		if ( cutoffDistance > 0.0 ) {
			distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
		}
		return distanceFalloff;
	#endif
}
float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {
	return smoothstep( coneCosine, penumbraCosine, angleCosine );
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalLightInfo( const in DirectionalLight directionalLight, out IncidentLight light ) {
		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointLightInfo( const in PointLight pointLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = pointLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float lightDistance = length( lVector );
		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotLightInfo( const in SpotLight spotLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = spotLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float angleCos = dot( light.direction, spotLight.direction );
		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );
		if ( spotAttenuation > 0.0 ) {
			float lightDistance = length( lVector );
			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );
		} else {
			light.color = vec3( 0.0 );
			light.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {
		float dotNL = dot( normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		return irradiance;
	}
#endif`,JR=`#ifdef USE_ENVMAP
	vec3 getIBLIrradiance( const in vec3 normal ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );
			return PI * envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 reflectVec = reflect( - viewDir, normal );
			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );
			return envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	#ifdef USE_ANISOTROPY
		vec3 getIBLAnisotropyRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in vec3 bitangent, const in float anisotropy ) {
			#ifdef ENVMAP_TYPE_CUBE_UV
				vec3 bentNormal = cross( bitangent, viewDir );
				bentNormal = normalize( cross( bentNormal, bitangent ) );
				bentNormal = normalize( mix( bentNormal, normal, pow2( pow2( 1.0 - anisotropy * ( 1.0 - roughness ) ) ) ) );
				return getIBLRadiance( viewDir, bentNormal, roughness );
			#else
				return vec3( 0.0 );
			#endif
		}
	#endif
#endif`,KR=`ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`,jR=`varying vec3 vViewPosition;
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometryNormal, directLight.direction ) * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon`,QR=`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,eL=`varying vec3 vViewPosition;
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometryViewDir, geometryNormal, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong`,tL=`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( nonPerturbedNormal ) ), abs( dFdy( nonPerturbedNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );
#ifdef IOR
	material.ior = ior;
	#ifdef USE_SPECULAR
		float specularIntensityFactor = specularIntensity;
		vec3 specularColorFactor = specularColor;
		#ifdef USE_SPECULAR_COLORMAP
			specularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;
		#endif
		#ifdef USE_SPECULAR_INTENSITYMAP
			specularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;
		#endif
		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );
	#else
		float specularIntensityFactor = 1.0;
		vec3 specularColorFactor = vec3( 1.0 );
		material.specularF90 = 1.0;
	#endif
	material.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;
#endif
#ifdef USE_CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_IRIDESCENCE
	material.iridescence = iridescence;
	material.iridescenceIOR = iridescenceIOR;
	#ifdef USE_IRIDESCENCEMAP
		material.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;
	#endif
	#ifdef USE_IRIDESCENCE_THICKNESSMAP
		material.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;
	#else
		material.iridescenceThickness = iridescenceThicknessMaximum;
	#endif
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheenColor;
	#ifdef USE_SHEEN_COLORMAP
		material.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;
	#endif
	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );
	#ifdef USE_SHEEN_ROUGHNESSMAP
		material.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;
	#endif
#endif
#ifdef USE_ANISOTROPY
	#ifdef USE_ANISOTROPYMAP
		mat2 anisotropyMat = mat2( anisotropyVector.x, anisotropyVector.y, - anisotropyVector.y, anisotropyVector.x );
		vec3 anisotropyPolar = texture2D( anisotropyMap, vAnisotropyMapUv ).rgb;
		vec2 anisotropyV = anisotropyMat * normalize( 2.0 * anisotropyPolar.rg - vec2( 1.0 ) ) * anisotropyPolar.b;
	#else
		vec2 anisotropyV = anisotropyVector;
	#endif
	material.anisotropy = length( anisotropyV );
	if( material.anisotropy == 0.0 ) {
		anisotropyV = vec2( 1.0, 0.0 );
	} else {
		anisotropyV /= material.anisotropy;
		material.anisotropy = saturate( material.anisotropy );
	}
	material.alphaT = mix( pow2( material.roughness ), 1.0, pow2( material.anisotropy ) );
	material.anisotropyT = tbn[ 0 ] * anisotropyV.x + tbn[ 1 ] * anisotropyV.y;
	material.anisotropyB = tbn[ 1 ] * anisotropyV.x - tbn[ 0 ] * anisotropyV.y;
#endif`,nL=`struct PhysicalMaterial {
	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;
	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif
	#ifdef USE_IRIDESCENCE
		float iridescence;
		float iridescenceIOR;
		float iridescenceThickness;
		vec3 iridescenceFresnel;
		vec3 iridescenceF0;
	#endif
	#ifdef USE_SHEEN
		vec3 sheenColor;
		float sheenRoughness;
	#endif
	#ifdef IOR
		float ior;
	#endif
	#ifdef USE_TRANSMISSION
		float transmission;
		float transmissionAlpha;
		float thickness;
		float attenuationDistance;
		vec3 attenuationColor;
	#endif
	#ifdef USE_ANISOTROPY
		float anisotropy;
		float alphaT;
		vec3 anisotropyT;
		vec3 anisotropyB;
	#endif
};
vec3 clearcoatSpecularDirect = vec3( 0.0 );
vec3 clearcoatSpecularIndirect = vec3( 0.0 );
vec3 sheenSpecularDirect = vec3( 0.0 );
vec3 sheenSpecularIndirect = vec3(0.0 );
vec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {
    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );
    float x2 = x * x;
    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );
    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );
}
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
#ifdef USE_ANISOTROPY
	float V_GGX_SmithCorrelated_Anisotropic( const in float alphaT, const in float alphaB, const in float dotTV, const in float dotBV, const in float dotTL, const in float dotBL, const in float dotNV, const in float dotNL ) {
		float gv = dotNL * length( vec3( alphaT * dotTV, alphaB * dotBV, dotNV ) );
		float gl = dotNV * length( vec3( alphaT * dotTL, alphaB * dotBL, dotNL ) );
		float v = 0.5 / ( gv + gl );
		return saturate(v);
	}
	float D_GGX_Anisotropic( const in float alphaT, const in float alphaB, const in float dotNH, const in float dotTH, const in float dotBH ) {
		float a2 = alphaT * alphaB;
		highp vec3 v = vec3( alphaB * dotTH, alphaT * dotBH, a2 * dotNH );
		highp float v2 = dot( v, v );
		float w2 = a2 / v2;
		return RECIPROCAL_PI * a2 * pow2 ( w2 );
	}
#endif
#ifdef USE_CLEARCOAT
	vec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {
		vec3 f0 = material.clearcoatF0;
		float f90 = material.clearcoatF90;
		float roughness = material.clearcoatRoughness;
		float alpha = pow2( roughness );
		vec3 halfDir = normalize( lightDir + viewDir );
		float dotNL = saturate( dot( normal, lightDir ) );
		float dotNV = saturate( dot( normal, viewDir ) );
		float dotNH = saturate( dot( normal, halfDir ) );
		float dotVH = saturate( dot( viewDir, halfDir ) );
		vec3 F = F_Schlick( f0, f90, dotVH );
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
		return F * ( V * D );
	}
#endif
vec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {
	vec3 f0 = material.specularColor;
	float f90 = material.specularF90;
	float roughness = material.roughness;
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( f0, f90, dotVH );
	#ifdef USE_IRIDESCENCE
		F = mix( F, material.iridescenceFresnel, material.iridescence );
	#endif
	#ifdef USE_ANISOTROPY
		float dotTL = dot( material.anisotropyT, lightDir );
		float dotTV = dot( material.anisotropyT, viewDir );
		float dotTH = dot( material.anisotropyT, halfDir );
		float dotBL = dot( material.anisotropyB, lightDir );
		float dotBV = dot( material.anisotropyB, viewDir );
		float dotBH = dot( material.anisotropyB, halfDir );
		float V = V_GGX_SmithCorrelated_Anisotropic( material.alphaT, alpha, dotTV, dotBV, dotTL, dotBL, dotNV, dotNL );
		float D = D_GGX_Anisotropic( material.alphaT, alpha, dotNH, dotTH, dotBH );
	#else
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
	#endif
	return F * ( V * D );
}
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
#if defined( USE_SHEEN )
float D_Charlie( float roughness, float dotNH ) {
	float alpha = pow2( roughness );
	float invAlpha = 1.0 / alpha;
	float cos2h = dotNH * dotNH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 );
	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );
}
float V_Neubelt( float dotNV, float dotNL ) {
	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );
}
vec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float D = D_Charlie( sheenRoughness, dotNH );
	float V = V_Neubelt( dotNV, dotNL );
	return sheenColor * ( D * V );
}
#endif
float IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	float r2 = roughness * roughness;
	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;
	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;
	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );
	return saturate( DG * RECIPROCAL_PI );
}
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;
	return fab;
}
vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	return specularColor * fab.x + specularF90 * fab.y;
}
#ifdef USE_IRIDESCENCE
void computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#else
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#endif
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	#ifdef USE_IRIDESCENCE
		vec3 Fr = mix( specularColor, iridescenceF0, iridescence );
	#else
		vec3 Fr = specularColor;
	#endif
	vec3 FssEss = Fr * fab.x + specularF90 * fab.y;
	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometryNormal;
		vec3 viewDir = geometryViewDir;
		vec3 position = geometryPosition;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifdef USE_CLEARCOAT
		float dotNLcc = saturate( dot( geometryClearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = dotNLcc * directLight.color;
		clearcoatSpecularDirect += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometryViewDir, geometryClearcoatNormal, material );
	#endif
	#ifdef USE_SHEEN
		sheenSpecularDirect += irradiance * BRDF_Sheen( directLight.direction, geometryViewDir, geometryNormal, material.sheenColor, material.sheenRoughness );
	#endif
	reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometryViewDir, geometryNormal, material );
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef USE_CLEARCOAT
		clearcoatSpecularIndirect += clearcoatRadiance * EnvironmentBRDF( geometryClearcoatNormal, geometryViewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecularIndirect += irradiance * material.sheenColor * IBLSheenBRDF( geometryNormal, geometryViewDir, material.sheenRoughness );
	#endif
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	#ifdef USE_IRIDESCENCE
		computeMultiscatteringIridescence( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );
	#else
		computeMultiscattering( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );
	#endif
	vec3 totalScattering = singleScattering + multiScattering;
	vec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );
	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,iL=`
vec3 geometryPosition = - vViewPosition;
vec3 geometryNormal = normal;
vec3 geometryViewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
vec3 geometryClearcoatNormal = vec3( 0.0 );
#ifdef USE_CLEARCOAT
	geometryClearcoatNormal = clearcoatNormal;
#endif
#ifdef USE_IRIDESCENCE
	float dotNVi = saturate( dot( normal, geometryViewDir ) );
	if ( material.iridescenceThickness == 0.0 ) {
		material.iridescence = 0.0;
	} else {
		material.iridescence = saturate( material.iridescence );
	}
	if ( material.iridescence > 0.0 ) {
		material.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );
		material.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );
	}
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointLightInfo( pointLight, geometryPosition, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	vec4 spotColor;
	vec3 spotLightCoord;
	bool inSpotLightMap;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotLightInfo( spotLight, geometryPosition, directLight );
		#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX
		#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS
		#else
		#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#endif
		#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )
			spotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;
			inSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );
			spotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );
			directLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;
		#endif
		#undef SPOT_LIGHT_MAP_INDEX
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalLightInfo( directionalLight, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	#if defined( USE_LIGHT_PROBES )
		irradiance += getLightProbeIrradiance( lightProbe, geometryNormal );
	#endif
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometryNormal );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,rL=`#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getIBLIrradiance( geometryNormal );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	#ifdef USE_ANISOTROPY
		radiance += getIBLAnisotropyRadiance( geometryViewDir, geometryNormal, material.roughness, material.anisotropyB, material.anisotropy );
	#else
		radiance += getIBLRadiance( geometryViewDir, geometryNormal, material.roughness );
	#endif
	#ifdef USE_CLEARCOAT
		clearcoatRadiance += getIBLRadiance( geometryViewDir, geometryClearcoatNormal, material.clearcoatRoughness );
	#endif
#endif`,sL=`#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif`,aL=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	gl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,oL=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,lL=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		varying float vFragDepth;
		varying float vIsPerspective;
	#else
		uniform float logDepthBufFC;
	#endif
#endif`,cL=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		vFragDepth = 1.0 + gl_Position.w;
		vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
	#else
		if ( isPerspectiveMatrix( projectionMatrix ) ) {
			gl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;
			gl_Position.z *= gl_Position.w;
		}
	#endif
#endif`,uL=`#ifdef USE_MAP
	vec4 sampledDiffuseColor = texture2D( map, vMapUv );
	#ifdef DECODE_VIDEO_TEXTURE
		sampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );
	
	#endif
	diffuseColor *= sampledDiffuseColor;
#endif`,hL=`#ifdef USE_MAP
	uniform sampler2D map;
#endif`,fL=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	#if defined( USE_POINTS_UV )
		vec2 uv = vUv;
	#else
		vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
	#endif
#endif
#ifdef USE_MAP
	diffuseColor *= texture2D( map, uv );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,dL=`#if defined( USE_POINTS_UV )
	varying vec2 vUv;
#else
	#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
		uniform mat3 uvTransform;
	#endif
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,pL=`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );
	metalnessFactor *= texelMetalness.b;
#endif`,mL=`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,gL=`#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )
	vColor *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		#if defined( USE_COLOR_ALPHA )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];
		#elif defined( USE_COLOR )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];
		#endif
	}
#endif`,_L=`#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		objectNormal += morphNormal0 * morphTargetInfluences[ 0 ];
		objectNormal += morphNormal1 * morphTargetInfluences[ 1 ];
		objectNormal += morphNormal2 * morphTargetInfluences[ 2 ];
		objectNormal += morphNormal3 * morphTargetInfluences[ 3 ];
	#endif
#endif`,vL=`#ifdef USE_MORPHTARGETS
	uniform float morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];
		uniform sampler2DArray morphTargetsTexture;
		uniform ivec2 morphTargetsTextureSize;
		vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {
			int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;
			int y = texelIndex / morphTargetsTextureSize.x;
			int x = texelIndex - y * morphTargetsTextureSize.x;
			ivec3 morphUV = ivec3( x, y, morphTargetIndex );
			return texelFetch( morphTargetsTexture, morphUV, 0 );
		}
	#else
		#ifndef USE_MORPHNORMALS
			uniform float morphTargetInfluences[ 8 ];
		#else
			uniform float morphTargetInfluences[ 4 ];
		#endif
	#endif
#endif`,xL=`#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		transformed += morphTarget0 * morphTargetInfluences[ 0 ];
		transformed += morphTarget1 * morphTargetInfluences[ 1 ];
		transformed += morphTarget2 * morphTargetInfluences[ 2 ];
		transformed += morphTarget3 * morphTargetInfluences[ 3 ];
		#ifndef USE_MORPHNORMALS
			transformed += morphTarget4 * morphTargetInfluences[ 4 ];
			transformed += morphTarget5 * morphTargetInfluences[ 5 ];
			transformed += morphTarget6 * morphTargetInfluences[ 6 ];
			transformed += morphTarget7 * morphTargetInfluences[ 7 ];
		#endif
	#endif
#endif`,yL=`float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;
#ifdef FLAT_SHADED
	vec3 fdx = dFdx( vViewPosition );
	vec3 fdy = dFdy( vViewPosition );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal *= faceDirection;
	#endif
#endif
#if defined( USE_NORMALMAP_TANGENTSPACE ) || defined( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY )
	#ifdef USE_TANGENT
		mat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn = getTangentFrame( - vViewPosition, normal,
		#if defined( USE_NORMALMAP )
			vNormalMapUv
		#elif defined( USE_CLEARCOAT_NORMALMAP )
			vClearcoatNormalMapUv
		#else
			vUv
		#endif
		);
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn[0] *= faceDirection;
		tbn[1] *= faceDirection;
	#endif
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	#ifdef USE_TANGENT
		mat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn2[0] *= faceDirection;
		tbn2[1] *= faceDirection;
	#endif
#endif
vec3 nonPerturbedNormal = normal;`,bL=`#ifdef USE_NORMALMAP_OBJECTSPACE
	normal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( USE_NORMALMAP_TANGENTSPACE )
	vec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	normal = normalize( tbn * mapN );
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );
#endif`,ML=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,SL=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,wL=`#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif`,EL=`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef USE_NORMALMAP_OBJECTSPACE
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY ) )
	mat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {
		vec3 q0 = dFdx( eye_pos.xyz );
		vec3 q1 = dFdy( eye_pos.xyz );
		vec2 st0 = dFdx( uv.st );
		vec2 st1 = dFdy( uv.st );
		vec3 N = surf_norm;
		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );
		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;
		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );
		return mat3( T * scale, B * scale, N );
	}
#endif`,AL=`#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal = nonPerturbedNormal;
#endif`,TL=`#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	clearcoatNormal = normalize( tbn2 * clearcoatMapN );
#endif`,CL=`#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif`,RL=`#ifdef USE_IRIDESCENCEMAP
	uniform sampler2D iridescenceMap;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform sampler2D iridescenceThicknessMap;
#endif`,LL=`#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif
#ifdef USE_TRANSMISSION
diffuseColor.a *= material.transmissionAlpha;
#endif
gl_FragColor = vec4( outgoingLight, diffuseColor.a );`,PL=`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;
const vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );
const vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );
const float ShiftRight8 = 1. / 256.;
vec4 packDepthToRGBA( const in float v ) {
	vec4 r = vec4( fract( v * PackFactors ), v );
	r.yzw -= r.xyz * ShiftRight8;	return r * PackUpscale;
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors );
}
vec2 packDepthToRG( in highp float v ) {
	return packDepthToRGBA( v ).yx;
}
float unpackRGToDepth( const in highp vec2 v ) {
	return unpackRGBAToDepth( vec4( v.xy, 0.0, 0.0 ) );
}
vec4 pack2HalfToRGBA( vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}
vec2 unpackRGBATo2Half( vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return depth * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * depth - far );
}`,IL=`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,DL=`vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_BATCHING
	mvPosition = batchingMatrix * mvPosition;
#endif
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,UL=`#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,NL=`#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,OL=`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );
	roughnessFactor *= texelRoughness.g;
#endif`,FL=`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,BL=`#if NUM_SPOT_LIGHT_COORDS > 0
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#if NUM_SPOT_LIGHT_MAPS > 0
	uniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		float hard_shadow = step( compare , distribution.x );
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;
		bool frustumTest = inFrustum && shadowCoord.z <= 1.0;
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return shadow;
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
		vec3 lightToPosition = shadowCoord.xyz;
		float dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );		dp += shadowBias;
		vec3 bd3D = normalize( lightToPosition );
		#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
			vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
			return (
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
			) * ( 1.0 / 9.0 );
		#else
			return texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
		#endif
	}
#endif`,zL=`#if NUM_SPOT_LIGHT_COORDS > 0
	uniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,kL=`#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )
	vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
	vec4 shadowWorldPosition;
#endif
#if defined( USE_SHADOWMAP )
	#if NUM_DIR_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
			vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
			vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
#endif
#if NUM_SPOT_LIGHT_COORDS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {
		shadowWorldPosition = worldPosition;
		#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
			shadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;
		#endif
		vSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
#endif`,GL=`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,HL=`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,VL=`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	uniform highp sampler2D boneTexture;
	mat4 getBoneMatrix( const in float i ) {
		int size = textureSize( boneTexture, 0 ).x;
		int j = int( i ) * 4;
		int x = j % size;
		int y = j / size;
		vec4 v1 = texelFetch( boneTexture, ivec2( x, y ), 0 );
		vec4 v2 = texelFetch( boneTexture, ivec2( x + 1, y ), 0 );
		vec4 v3 = texelFetch( boneTexture, ivec2( x + 2, y ), 0 );
		vec4 v4 = texelFetch( boneTexture, ivec2( x + 3, y ), 0 );
		return mat4( v1, v2, v3, v4 );
	}
#endif`,WL=`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,XL=`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,qL=`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,YL=`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,$L=`#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,ZL=`#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return saturate( toneMappingExposure * color );
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 OptimizedCineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
const mat3 LINEAR_REC2020_TO_LINEAR_SRGB = mat3(
	vec3( 1.6605, - 0.1246, - 0.0182 ),
	vec3( - 0.5876, 1.1329, - 0.1006 ),
	vec3( - 0.0728, - 0.0083, 1.1187 )
);
const mat3 LINEAR_SRGB_TO_LINEAR_REC2020 = mat3(
	vec3( 0.6274, 0.0691, 0.0164 ),
	vec3( 0.3293, 0.9195, 0.0880 ),
	vec3( 0.0433, 0.0113, 0.8956 )
);
vec3 agxDefaultContrastApprox( vec3 x ) {
	vec3 x2 = x * x;
	vec3 x4 = x2 * x2;
	return + 15.5 * x4 * x2
		- 40.14 * x4 * x
		+ 31.96 * x4
		- 6.868 * x2 * x
		+ 0.4298 * x2
		+ 0.1191 * x
		- 0.00232;
}
vec3 AgXToneMapping( vec3 color ) {
	const mat3 AgXInsetMatrix = mat3(
		vec3( 0.856627153315983, 0.137318972929847, 0.11189821299995 ),
		vec3( 0.0951212405381588, 0.761241990602591, 0.0767994186031903 ),
		vec3( 0.0482516061458583, 0.101439036467562, 0.811302368396859 )
	);
	const mat3 AgXOutsetMatrix = mat3(
		vec3( 1.1271005818144368, - 0.1413297634984383, - 0.14132976349843826 ),
		vec3( - 0.11060664309660323, 1.157823702216272, - 0.11060664309660294 ),
		vec3( - 0.016493938717834573, - 0.016493938717834257, 1.2519364065950405 )
	);
	const float AgxMinEv = - 12.47393;	const float AgxMaxEv = 4.026069;
	color *= toneMappingExposure;
	color = LINEAR_SRGB_TO_LINEAR_REC2020 * color;
	color = AgXInsetMatrix * color;
	color = max( color, 1e-10 );	color = log2( color );
	color = ( color - AgxMinEv ) / ( AgxMaxEv - AgxMinEv );
	color = clamp( color, 0.0, 1.0 );
	color = agxDefaultContrastApprox( color );
	color = AgXOutsetMatrix * color;
	color = pow( max( vec3( 0.0 ), color ), vec3( 2.2 ) );
	color = LINEAR_REC2020_TO_LINEAR_SRGB * color;
	color = clamp( color, 0.0, 1.0 );
	return color;
}
vec3 CustomToneMapping( vec3 color ) { return color; }`,JL=`#ifdef USE_TRANSMISSION
	material.transmission = transmission;
	material.transmissionAlpha = 1.0;
	material.thickness = thickness;
	material.attenuationDistance = attenuationDistance;
	material.attenuationColor = attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		material.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;
	#endif
	#ifdef USE_THICKNESSMAP
		material.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;
	#endif
	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );
	vec4 transmitted = getIBLVolumeRefraction(
		n, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, material.ior, material.thickness,
		material.attenuationColor, material.attenuationDistance );
	material.transmissionAlpha = mix( material.transmissionAlpha, transmitted.a, material.transmission );
	totalDiffuse = mix( totalDiffuse, transmitted.rgb, material.transmission );
#endif`,KL=`#ifdef USE_TRANSMISSION
	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		uniform sampler2D transmissionMap;
	#endif
	#ifdef USE_THICKNESSMAP
		uniform sampler2D thicknessMap;
	#endif
	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;
	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;
	varying vec3 vWorldPosition;
	float w0( float a ) {
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );
	}
	float w1( float a ) {
		return ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );
	}
	float w2( float a ){
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );
	}
	float w3( float a ) {
		return ( 1.0 / 6.0 ) * ( a * a * a );
	}
	float g0( float a ) {
		return w0( a ) + w1( a );
	}
	float g1( float a ) {
		return w2( a ) + w3( a );
	}
	float h0( float a ) {
		return - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );
	}
	float h1( float a ) {
		return 1.0 + w3( a ) / ( w2( a ) + w3( a ) );
	}
	vec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {
		uv = uv * texelSize.zw + 0.5;
		vec2 iuv = floor( uv );
		vec2 fuv = fract( uv );
		float g0x = g0( fuv.x );
		float g1x = g1( fuv.x );
		float h0x = h0( fuv.x );
		float h1x = h1( fuv.x );
		float h0y = h0( fuv.y );
		float h1y = h1( fuv.y );
		vec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		vec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		return g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +
			g1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );
	}
	vec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {
		vec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );
		vec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );
		vec2 fLodSizeInv = 1.0 / fLodSize;
		vec2 cLodSizeInv = 1.0 / cLodSize;
		vec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );
		vec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );
		return mix( fSample, cSample, fract( lod ) );
	}
	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		return normalize( refractionVector ) * thickness * modelScale;
	}
	float applyIorToRoughness( const in float roughness, const in float ior ) {
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	}
	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {
		float lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
		return textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );
	}
	vec3 volumeAttenuation( const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {
		if ( isinf( attenuationDistance ) ) {
			return vec3( 1.0 );
		} else {
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance;
		}
	}
	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,
		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,
		const in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,
		const in vec3 attenuationColor, const in float attenuationDistance ) {
		vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
		vec3 refractedRayExit = position + transmissionRay;
		vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
		vec2 refractionCoords = ndcPos.xy / ndcPos.w;
		refractionCoords += 1.0;
		refractionCoords /= 2.0;
		vec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
		vec3 transmittance = diffuseColor * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance );
		vec3 attenuatedColor = transmittance * transmittedLight.rgb;
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
		float transmittanceFactor = ( transmittance.r + transmittance.g + transmittance.b ) / 3.0;
		return vec4( ( 1.0 - F ) * attenuatedColor, 1.0 - ( 1.0 - transmittedLight.a ) * transmittanceFactor );
	}
#endif`,jL=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_SPECULARMAP
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,QL=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	uniform mat3 mapTransform;
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	uniform mat3 alphaMapTransform;
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	uniform mat3 lightMapTransform;
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	uniform mat3 aoMapTransform;
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	uniform mat3 bumpMapTransform;
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	uniform mat3 normalMapTransform;
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_DISPLACEMENTMAP
	uniform mat3 displacementMapTransform;
	varying vec2 vDisplacementMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	uniform mat3 emissiveMapTransform;
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	uniform mat3 metalnessMapTransform;
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	uniform mat3 roughnessMapTransform;
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	uniform mat3 anisotropyMapTransform;
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	uniform mat3 clearcoatMapTransform;
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform mat3 clearcoatNormalMapTransform;
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform mat3 clearcoatRoughnessMapTransform;
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	uniform mat3 sheenColorMapTransform;
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	uniform mat3 sheenRoughnessMapTransform;
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	uniform mat3 iridescenceMapTransform;
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform mat3 iridescenceThicknessMapTransform;
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SPECULARMAP
	uniform mat3 specularMapTransform;
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	uniform mat3 specularColorMapTransform;
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	uniform mat3 specularIntensityMapTransform;
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,eP=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	vUv = vec3( uv, 1 ).xy;
#endif
#ifdef USE_MAP
	vMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ALPHAMAP
	vAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_LIGHTMAP
	vLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_AOMAP
	vAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_BUMPMAP
	vBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_NORMALMAP
	vNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_DISPLACEMENTMAP
	vDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_EMISSIVEMAP
	vEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_METALNESSMAP
	vMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ROUGHNESSMAP
	vRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ANISOTROPYMAP
	vAnisotropyMapUv = ( anisotropyMapTransform * vec3( ANISOTROPYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOATMAP
	vClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	vClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	vClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCEMAP
	vIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	vIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_COLORMAP
	vSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	vSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULARMAP
	vSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_COLORMAP
	vSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	vSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_TRANSMISSIONMAP
	vTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_THICKNESSMAP
	vThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;
#endif`,tP=`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_BATCHING
		worldPosition = batchingMatrix * worldPosition;
	#endif
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`;const nP=`varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,iP=`uniform sampler2D t2D;
uniform float backgroundIntensity;
varying vec2 vUv;
void main() {
	vec4 texColor = texture2D( t2D, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		texColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,rP=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,sP=`#ifdef ENVMAP_TYPE_CUBE
	uniform samplerCube envMap;
#elif defined( ENVMAP_TYPE_CUBE_UV )
	uniform sampler2D envMap;
#endif
uniform float flipEnvMap;
uniform float backgroundBlurriness;
uniform float backgroundIntensity;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	#ifdef ENVMAP_TYPE_CUBE
		vec4 texColor = textureCube( envMap, vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 texColor = textureCubeUV( envMap, vWorldDirection, backgroundBlurriness );
	#else
		vec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,aP=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,oP=`uniform samplerCube tCube;
uniform float tFlip;
uniform float opacity;
varying vec3 vWorldDirection;
void main() {
	vec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );
	gl_FragColor = texColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,lP=`#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,cP=`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	vec4 diffuseColor = vec4( 1.0 );
	#include <clipping_planes_fragment>
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <logdepthbuf_fragment>
	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#endif
}`,uP=`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,hP=`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	vec4 diffuseColor = vec4( 1.0 );
	#include <clipping_planes_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,fP=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,dP=`uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	gl_FragColor = texture2D( tEquirect, sampleUV );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,pP=`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,mP=`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,gP=`#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,_P=`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,vP=`#define LAMBERT
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,xP=`#define LAMBERT
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_lambert_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_lambert_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,yP=`#define MATCAP
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,bP=`#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
	#else
		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,MP=`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	vViewPosition = - mvPosition.xyz;
#endif
}`,SP=`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( 0.0, 0.0, 0.0, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), diffuseColor.a );
	#ifdef OPAQUE
		gl_FragColor.a = 1.0;
	#endif
}`,wP=`#define PHONG
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,EP=`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,AP=`#define STANDARD
varying vec3 vViewPosition;
#ifdef USE_TRANSMISSION
	varying vec3 vWorldPosition;
#endif
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
#ifdef USE_TRANSMISSION
	vWorldPosition = worldPosition.xyz;
#endif
}`,TP=`#define STANDARD
#ifdef PHYSICAL
	#define IOR
	#define USE_SPECULAR
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef IOR
	uniform float ior;
#endif
#ifdef USE_SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularColor;
	#ifdef USE_SPECULAR_COLORMAP
		uniform sampler2D specularColorMap;
	#endif
	#ifdef USE_SPECULAR_INTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif
#endif
#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_IRIDESCENCE
	uniform float iridescence;
	uniform float iridescenceIOR;
	uniform float iridescenceThicknessMinimum;
	uniform float iridescenceThicknessMaximum;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheenColor;
	uniform float sheenRoughness;
	#ifdef USE_SHEEN_COLORMAP
		uniform sampler2D sheenColorMap;
	#endif
	#ifdef USE_SHEEN_ROUGHNESSMAP
		uniform sampler2D sheenRoughnessMap;
	#endif
#endif
#ifdef USE_ANISOTROPY
	uniform vec2 anisotropyVector;
	#ifdef USE_ANISOTROPYMAP
		uniform sampler2D anisotropyMap;
	#endif
#endif
varying vec3 vViewPosition;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <iridescence_fragment>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <iridescence_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
	#include <transmission_fragment>
	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
	#ifdef USE_SHEEN
		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );
		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecularDirect + sheenSpecularIndirect;
	#endif
	#ifdef USE_CLEARCOAT
		float dotNVcc = saturate( dot( geometryClearcoatNormal, geometryViewDir ) );
		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );
		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + ( clearcoatSpecularDirect + clearcoatSpecularIndirect ) * material.clearcoat;
	#endif
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,CP=`#define TOON
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,RP=`#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,LP=`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
#ifdef USE_POINTS_UV
	varying vec2 vUv;
	uniform mat3 uvTransform;
#endif
void main() {
	#ifdef USE_POINTS_UV
		vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	#endif
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,PP=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,IP=`#include <common>
#include <batching_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,DP=`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <logdepthbuf_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	#include <logdepthbuf_fragment>
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,UP=`uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );
	vec2 scale;
	scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );
	scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,NP=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,pt={alphahash_fragment:iR,alphahash_pars_fragment:rR,alphamap_fragment:sR,alphamap_pars_fragment:aR,alphatest_fragment:oR,alphatest_pars_fragment:lR,aomap_fragment:cR,aomap_pars_fragment:uR,batching_pars_vertex:hR,batching_vertex:fR,begin_vertex:dR,beginnormal_vertex:pR,bsdfs:mR,iridescence_fragment:gR,bumpmap_pars_fragment:_R,clipping_planes_fragment:vR,clipping_planes_pars_fragment:xR,clipping_planes_pars_vertex:yR,clipping_planes_vertex:bR,color_fragment:MR,color_pars_fragment:SR,color_pars_vertex:wR,color_vertex:ER,common:AR,cube_uv_reflection_fragment:TR,defaultnormal_vertex:CR,displacementmap_pars_vertex:RR,displacementmap_vertex:LR,emissivemap_fragment:PR,emissivemap_pars_fragment:IR,colorspace_fragment:DR,colorspace_pars_fragment:UR,envmap_fragment:NR,envmap_common_pars_fragment:OR,envmap_pars_fragment:FR,envmap_pars_vertex:BR,envmap_physical_pars_fragment:JR,envmap_vertex:zR,fog_vertex:kR,fog_pars_vertex:GR,fog_fragment:HR,fog_pars_fragment:VR,gradientmap_pars_fragment:WR,lightmap_fragment:XR,lightmap_pars_fragment:qR,lights_lambert_fragment:YR,lights_lambert_pars_fragment:$R,lights_pars_begin:ZR,lights_toon_fragment:KR,lights_toon_pars_fragment:jR,lights_phong_fragment:QR,lights_phong_pars_fragment:eL,lights_physical_fragment:tL,lights_physical_pars_fragment:nL,lights_fragment_begin:iL,lights_fragment_maps:rL,lights_fragment_end:sL,logdepthbuf_fragment:aL,logdepthbuf_pars_fragment:oL,logdepthbuf_pars_vertex:lL,logdepthbuf_vertex:cL,map_fragment:uL,map_pars_fragment:hL,map_particle_fragment:fL,map_particle_pars_fragment:dL,metalnessmap_fragment:pL,metalnessmap_pars_fragment:mL,morphcolor_vertex:gL,morphnormal_vertex:_L,morphtarget_pars_vertex:vL,morphtarget_vertex:xL,normal_fragment_begin:yL,normal_fragment_maps:bL,normal_pars_fragment:ML,normal_pars_vertex:SL,normal_vertex:wL,normalmap_pars_fragment:EL,clearcoat_normal_fragment_begin:AL,clearcoat_normal_fragment_maps:TL,clearcoat_pars_fragment:CL,iridescence_pars_fragment:RL,opaque_fragment:LL,packing:PL,premultiplied_alpha_fragment:IL,project_vertex:DL,dithering_fragment:UL,dithering_pars_fragment:NL,roughnessmap_fragment:OL,roughnessmap_pars_fragment:FL,shadowmap_pars_fragment:BL,shadowmap_pars_vertex:zL,shadowmap_vertex:kL,shadowmask_pars_fragment:GL,skinbase_vertex:HL,skinning_pars_vertex:VL,skinning_vertex:WL,skinnormal_vertex:XL,specularmap_fragment:qL,specularmap_pars_fragment:YL,tonemapping_fragment:$L,tonemapping_pars_fragment:ZL,transmission_fragment:JL,transmission_pars_fragment:KL,uv_pars_fragment:jL,uv_pars_vertex:QL,uv_vertex:eP,worldpos_vertex:tP,background_vert:nP,background_frag:iP,backgroundCube_vert:rP,backgroundCube_frag:sP,cube_vert:aP,cube_frag:oP,depth_vert:lP,depth_frag:cP,distanceRGBA_vert:uP,distanceRGBA_frag:hP,equirect_vert:fP,equirect_frag:dP,linedashed_vert:pP,linedashed_frag:mP,meshbasic_vert:gP,meshbasic_frag:_P,meshlambert_vert:vP,meshlambert_frag:xP,meshmatcap_vert:yP,meshmatcap_frag:bP,meshnormal_vert:MP,meshnormal_frag:SP,meshphong_vert:wP,meshphong_frag:EP,meshphysical_vert:AP,meshphysical_frag:TP,meshtoon_vert:CP,meshtoon_frag:RP,points_vert:LP,points_frag:PP,shadow_vert:IP,shadow_frag:DP,sprite_vert:UP,sprite_frag:NP},Be={common:{diffuse:{value:new qe(16777215)},opacity:{value:1},map:{value:null},mapTransform:{value:new vt},alphaMap:{value:null},alphaMapTransform:{value:new vt},alphaTest:{value:0}},specularmap:{specularMap:{value:null},specularMapTransform:{value:new vt}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1},aoMapTransform:{value:new vt}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1},lightMapTransform:{value:new vt}},bumpmap:{bumpMap:{value:null},bumpMapTransform:{value:new vt},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalMapTransform:{value:new vt},normalScale:{value:new Le(1,1)}},displacementmap:{displacementMap:{value:null},displacementMapTransform:{value:new vt},displacementScale:{value:1},displacementBias:{value:0}},emissivemap:{emissiveMap:{value:null},emissiveMapTransform:{value:new vt}},metalnessmap:{metalnessMap:{value:null},metalnessMapTransform:{value:new vt}},roughnessmap:{roughnessMap:{value:null},roughnessMapTransform:{value:new vt}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new qe(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new qe(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaMapTransform:{value:new vt},alphaTest:{value:0},uvTransform:{value:new vt}},sprite:{diffuse:{value:new qe(16777215)},opacity:{value:1},center:{value:new Le(.5,.5)},rotation:{value:0},map:{value:null},mapTransform:{value:new vt},alphaMap:{value:null},alphaMapTransform:{value:new vt},alphaTest:{value:0}}},Ci={basic:{uniforms:Un([Be.common,Be.specularmap,Be.envmap,Be.aomap,Be.lightmap,Be.fog]),vertexShader:pt.meshbasic_vert,fragmentShader:pt.meshbasic_frag},lambert:{uniforms:Un([Be.common,Be.specularmap,Be.envmap,Be.aomap,Be.lightmap,Be.emissivemap,Be.bumpmap,Be.normalmap,Be.displacementmap,Be.fog,Be.lights,{emissive:{value:new qe(0)}}]),vertexShader:pt.meshlambert_vert,fragmentShader:pt.meshlambert_frag},phong:{uniforms:Un([Be.common,Be.specularmap,Be.envmap,Be.aomap,Be.lightmap,Be.emissivemap,Be.bumpmap,Be.normalmap,Be.displacementmap,Be.fog,Be.lights,{emissive:{value:new qe(0)},specular:{value:new qe(1118481)},shininess:{value:30}}]),vertexShader:pt.meshphong_vert,fragmentShader:pt.meshphong_frag},standard:{uniforms:Un([Be.common,Be.envmap,Be.aomap,Be.lightmap,Be.emissivemap,Be.bumpmap,Be.normalmap,Be.displacementmap,Be.roughnessmap,Be.metalnessmap,Be.fog,Be.lights,{emissive:{value:new qe(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:pt.meshphysical_vert,fragmentShader:pt.meshphysical_frag},toon:{uniforms:Un([Be.common,Be.aomap,Be.lightmap,Be.emissivemap,Be.bumpmap,Be.normalmap,Be.displacementmap,Be.gradientmap,Be.fog,Be.lights,{emissive:{value:new qe(0)}}]),vertexShader:pt.meshtoon_vert,fragmentShader:pt.meshtoon_frag},matcap:{uniforms:Un([Be.common,Be.bumpmap,Be.normalmap,Be.displacementmap,Be.fog,{matcap:{value:null}}]),vertexShader:pt.meshmatcap_vert,fragmentShader:pt.meshmatcap_frag},points:{uniforms:Un([Be.points,Be.fog]),vertexShader:pt.points_vert,fragmentShader:pt.points_frag},dashed:{uniforms:Un([Be.common,Be.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:pt.linedashed_vert,fragmentShader:pt.linedashed_frag},depth:{uniforms:Un([Be.common,Be.displacementmap]),vertexShader:pt.depth_vert,fragmentShader:pt.depth_frag},normal:{uniforms:Un([Be.common,Be.bumpmap,Be.normalmap,Be.displacementmap,{opacity:{value:1}}]),vertexShader:pt.meshnormal_vert,fragmentShader:pt.meshnormal_frag},sprite:{uniforms:Un([Be.sprite,Be.fog]),vertexShader:pt.sprite_vert,fragmentShader:pt.sprite_frag},background:{uniforms:{uvTransform:{value:new vt},t2D:{value:null},backgroundIntensity:{value:1}},vertexShader:pt.background_vert,fragmentShader:pt.background_frag},backgroundCube:{uniforms:{envMap:{value:null},flipEnvMap:{value:-1},backgroundBlurriness:{value:0},backgroundIntensity:{value:1}},vertexShader:pt.backgroundCube_vert,fragmentShader:pt.backgroundCube_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:pt.cube_vert,fragmentShader:pt.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:pt.equirect_vert,fragmentShader:pt.equirect_frag},distanceRGBA:{uniforms:Un([Be.common,Be.displacementmap,{referencePosition:{value:new F},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:pt.distanceRGBA_vert,fragmentShader:pt.distanceRGBA_frag},shadow:{uniforms:Un([Be.lights,Be.fog,{color:{value:new qe(0)},opacity:{value:1}}]),vertexShader:pt.shadow_vert,fragmentShader:pt.shadow_frag}};Ci.physical={uniforms:Un([Ci.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatMapTransform:{value:new vt},clearcoatNormalMap:{value:null},clearcoatNormalMapTransform:{value:new vt},clearcoatNormalScale:{value:new Le(1,1)},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatRoughnessMapTransform:{value:new vt},iridescence:{value:0},iridescenceMap:{value:null},iridescenceMapTransform:{value:new vt},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},iridescenceThicknessMapTransform:{value:new vt},sheen:{value:0},sheenColor:{value:new qe(0)},sheenColorMap:{value:null},sheenColorMapTransform:{value:new vt},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},sheenRoughnessMapTransform:{value:new vt},transmission:{value:0},transmissionMap:{value:null},transmissionMapTransform:{value:new vt},transmissionSamplerSize:{value:new Le},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},thicknessMapTransform:{value:new vt},attenuationDistance:{value:0},attenuationColor:{value:new qe(0)},specularColor:{value:new qe(1,1,1)},specularColorMap:{value:null},specularColorMapTransform:{value:new vt},specularIntensity:{value:1},specularIntensityMap:{value:null},specularIntensityMapTransform:{value:new vt},anisotropyVector:{value:new Le},anisotropyMap:{value:null},anisotropyMapTransform:{value:new vt}}]),vertexShader:pt.meshphysical_vert,fragmentShader:pt.meshphysical_frag};const uc={r:0,b:0,g:0};function OP(r,e,t,n,i,s,o){const c=new qe(0);let u=s===!0?0:1,h,p,g=null,d=0,m=null;function _(v,x){let w=!1,M=x.isScene===!0?x.background:null;M&&M.isTexture&&(M=(x.backgroundBlurriness>0?t:e).get(M)),M===null?y(c,u):M&&M.isColor&&(y(M,1),w=!0);const E=r.xr.getEnvironmentBlendMode();E==="additive"?n.buffers.color.setClear(0,0,0,1,o):E==="alpha-blend"&&n.buffers.color.setClear(0,0,0,0,o),(r.autoClear||w)&&r.clear(r.autoClearColor,r.autoClearDepth,r.autoClearStencil),M&&(M.isCubeTexture||M.mapping===Ra)?(p===void 0&&(p=new on(new Ts(1,1,1),new Li({name:"BackgroundCubeMaterial",uniforms:Ta(Ci.backgroundCube.uniforms),vertexShader:Ci.backgroundCube.vertexShader,fragmentShader:Ci.backgroundCube.fragmentShader,side:On,depthTest:!1,depthWrite:!1,fog:!1})),p.geometry.deleteAttribute("normal"),p.geometry.deleteAttribute("uv"),p.onBeforeRender=function(O,P,U){this.matrixWorld.copyPosition(U.matrixWorld)},Object.defineProperty(p.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),i.update(p)),p.material.uniforms.envMap.value=M,p.material.uniforms.flipEnvMap.value=M.isCubeTexture&&M.isRenderTargetTexture===!1?-1:1,p.material.uniforms.backgroundBlurriness.value=x.backgroundBlurriness,p.material.uniforms.backgroundIntensity.value=x.backgroundIntensity,p.material.toneMapped=Ut.getTransfer(M.colorSpace)!==Gt,(g!==M||d!==M.version||m!==r.toneMapping)&&(p.material.needsUpdate=!0,g=M,d=M.version,m=r.toneMapping),p.layers.enableAll(),v.unshift(p,p.geometry,p.material,0,0,null)):M&&M.isTexture&&(h===void 0&&(h=new on(new Pa(2,2),new Li({name:"BackgroundMaterial",uniforms:Ta(Ci.background.uniforms),vertexShader:Ci.background.vertexShader,fragmentShader:Ci.background.fragmentShader,side:fr,depthTest:!1,depthWrite:!1,fog:!1})),h.geometry.deleteAttribute("normal"),Object.defineProperty(h.material,"map",{get:function(){return this.uniforms.t2D.value}}),i.update(h)),h.material.uniforms.t2D.value=M,h.material.uniforms.backgroundIntensity.value=x.backgroundIntensity,h.material.toneMapped=Ut.getTransfer(M.colorSpace)!==Gt,M.matrixAutoUpdate===!0&&M.updateMatrix(),h.material.uniforms.uvTransform.value.copy(M.matrix),(g!==M||d!==M.version||m!==r.toneMapping)&&(h.material.needsUpdate=!0,g=M,d=M.version,m=r.toneMapping),h.layers.enableAll(),v.unshift(h,h.geometry,h.material,0,0,null))}function y(v,x){v.getRGB(uc,fx(r)),n.buffers.color.setClear(uc.r,uc.g,uc.b,x,o)}return{getClearColor:function(){return c},setClearColor:function(v,x=1){c.set(v),u=x,y(c,u)},getClearAlpha:function(){return u},setClearAlpha:function(v){u=v,y(c,u)},render:_}}function FP(r,e,t,n){const i=r.getParameter(r.MAX_VERTEX_ATTRIBS),s=n.isWebGL2?null:e.get("OES_vertex_array_object"),o=n.isWebGL2||s!==null,c={},u=v(null);let h=u,p=!1;function g(H,re,Q,Me,ve){let be=!1;if(o){const Ie=y(Me,Q,re);h!==Ie&&(h=Ie,m(h.object)),be=x(H,Me,Q,ve),be&&w(H,Me,Q,ve)}else{const Ie=re.wireframe===!0;(h.geometry!==Me.id||h.program!==Q.id||h.wireframe!==Ie)&&(h.geometry=Me.id,h.program=Q.id,h.wireframe=Ie,be=!0)}ve!==null&&t.update(ve,r.ELEMENT_ARRAY_BUFFER),(be||p)&&(p=!1,V(H,re,Q,Me),ve!==null&&r.bindBuffer(r.ELEMENT_ARRAY_BUFFER,t.get(ve).buffer))}function d(){return n.isWebGL2?r.createVertexArray():s.createVertexArrayOES()}function m(H){return n.isWebGL2?r.bindVertexArray(H):s.bindVertexArrayOES(H)}function _(H){return n.isWebGL2?r.deleteVertexArray(H):s.deleteVertexArrayOES(H)}function y(H,re,Q){const Me=Q.wireframe===!0;let ve=c[H.id];ve===void 0&&(ve={},c[H.id]=ve);let be=ve[re.id];be===void 0&&(be={},ve[re.id]=be);let Ie=be[Me];return Ie===void 0&&(Ie=v(d()),be[Me]=Ie),Ie}function v(H){const re=[],Q=[],Me=[];for(let ve=0;ve<i;ve++)re[ve]=0,Q[ve]=0,Me[ve]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:re,enabledAttributes:Q,attributeDivisors:Me,object:H,attributes:{},index:null}}function x(H,re,Q,Me){const ve=h.attributes,be=re.attributes;let Ie=0;const Se=Q.getAttributes();for(const Ve in Se)if(Se[Ve].location>=0){const he=ve[Ve];let Pe=be[Ve];if(Pe===void 0&&(Ve==="instanceMatrix"&&H.instanceMatrix&&(Pe=H.instanceMatrix),Ve==="instanceColor"&&H.instanceColor&&(Pe=H.instanceColor)),he===void 0||he.attribute!==Pe||Pe&&he.data!==Pe.data)return!0;Ie++}return h.attributesNum!==Ie||h.index!==Me}function w(H,re,Q,Me){const ve={},be=re.attributes;let Ie=0;const Se=Q.getAttributes();for(const Ve in Se)if(Se[Ve].location>=0){let he=be[Ve];he===void 0&&(Ve==="instanceMatrix"&&H.instanceMatrix&&(he=H.instanceMatrix),Ve==="instanceColor"&&H.instanceColor&&(he=H.instanceColor));const Pe={};Pe.attribute=he,he&&he.data&&(Pe.data=he.data),ve[Ve]=Pe,Ie++}h.attributes=ve,h.attributesNum=Ie,h.index=Me}function M(){const H=h.newAttributes;for(let re=0,Q=H.length;re<Q;re++)H[re]=0}function E(H){O(H,0)}function O(H,re){const Q=h.newAttributes,Me=h.enabledAttributes,ve=h.attributeDivisors;Q[H]=1,Me[H]===0&&(r.enableVertexAttribArray(H),Me[H]=1),ve[H]!==re&&((n.isWebGL2?r:e.get("ANGLE_instanced_arrays"))[n.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](H,re),ve[H]=re)}function P(){const H=h.newAttributes,re=h.enabledAttributes;for(let Q=0,Me=re.length;Q<Me;Q++)re[Q]!==H[Q]&&(r.disableVertexAttribArray(Q),re[Q]=0)}function U(H,re,Q,Me,ve,be,Ie){Ie===!0?r.vertexAttribIPointer(H,re,Q,ve,be):r.vertexAttribPointer(H,re,Q,Me,ve,be)}function V(H,re,Q,Me){if(n.isWebGL2===!1&&(H.isInstancedMesh||Me.isInstancedBufferGeometry)&&e.get("ANGLE_instanced_arrays")===null)return;M();const ve=Me.attributes,be=Q.getAttributes(),Ie=re.defaultAttributeValues;for(const Se in be){const Ve=be[Se];if(Ve.location>=0){let je=ve[Se];if(je===void 0&&(Se==="instanceMatrix"&&H.instanceMatrix&&(je=H.instanceMatrix),Se==="instanceColor"&&H.instanceColor&&(je=H.instanceColor)),je!==void 0){const he=je.normalized,Pe=je.itemSize,Ge=t.get(je);if(Ge===void 0)continue;const X=Ge.buffer,Z=Ge.type,$=Ge.bytesPerElement,ue=n.isWebGL2===!0&&(Z===r.INT||Z===r.UNSIGNED_INT||je.gpuType===Vd);if(je.isInterleavedBufferAttribute){const me=je.data,I=me.stride,ge=je.offset;if(me.isInstancedInterleavedBuffer){for(let J=0;J<Ve.locationSize;J++)O(Ve.location+J,me.meshPerAttribute);H.isInstancedMesh!==!0&&Me._maxInstanceCount===void 0&&(Me._maxInstanceCount=me.meshPerAttribute*me.count)}else for(let J=0;J<Ve.locationSize;J++)E(Ve.location+J);r.bindBuffer(r.ARRAY_BUFFER,X);for(let J=0;J<Ve.locationSize;J++)U(Ve.location+J,Pe/Ve.locationSize,Z,he,I*$,(ge+Pe/Ve.locationSize*J)*$,ue)}else{if(je.isInstancedBufferAttribute){for(let me=0;me<Ve.locationSize;me++)O(Ve.location+me,je.meshPerAttribute);H.isInstancedMesh!==!0&&Me._maxInstanceCount===void 0&&(Me._maxInstanceCount=je.meshPerAttribute*je.count)}else for(let me=0;me<Ve.locationSize;me++)E(Ve.location+me);r.bindBuffer(r.ARRAY_BUFFER,X);for(let me=0;me<Ve.locationSize;me++)U(Ve.location+me,Pe/Ve.locationSize,Z,he,Pe*$,Pe/Ve.locationSize*me*$,ue)}}else if(Ie!==void 0){const he=Ie[Se];if(he!==void 0)switch(he.length){case 2:r.vertexAttrib2fv(Ve.location,he);break;case 3:r.vertexAttrib3fv(Ve.location,he);break;case 4:r.vertexAttrib4fv(Ve.location,he);break;default:r.vertexAttrib1fv(Ve.location,he)}}}}P()}function se(){ne();for(const H in c){const re=c[H];for(const Q in re){const Me=re[Q];for(const ve in Me)_(Me[ve].object),delete Me[ve];delete re[Q]}delete c[H]}}function T(H){if(c[H.id]===void 0)return;const re=c[H.id];for(const Q in re){const Me=re[Q];for(const ve in Me)_(Me[ve].object),delete Me[ve];delete re[Q]}delete c[H.id]}function N(H){for(const re in c){const Q=c[re];if(Q[H.id]===void 0)continue;const Me=Q[H.id];for(const ve in Me)_(Me[ve].object),delete Me[ve];delete Q[H.id]}}function ne(){Te(),p=!0,h!==u&&(h=u,m(h.object))}function Te(){u.geometry=null,u.program=null,u.wireframe=!1}return{setup:g,reset:ne,resetDefaultState:Te,dispose:se,releaseStatesOfGeometry:T,releaseStatesOfProgram:N,initAttributes:M,enableAttribute:E,disableUnusedAttributes:P}}function BP(r,e,t,n){const i=n.isWebGL2;let s;function o(p){s=p}function c(p,g){r.drawArrays(s,p,g),t.update(g,s,1)}function u(p,g,d){if(d===0)return;let m,_;if(i)m=r,_="drawArraysInstanced";else if(m=e.get("ANGLE_instanced_arrays"),_="drawArraysInstancedANGLE",m===null){console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}m[_](s,p,g,d),t.update(g,s,d)}function h(p,g,d){if(d===0)return;const m=e.get("WEBGL_multi_draw");if(m===null)for(let _=0;_<d;_++)this.render(p[_],g[_]);else{m.multiDrawArraysWEBGL(s,p,0,g,0,d);let _=0;for(let y=0;y<d;y++)_+=g[y];t.update(_,s,1)}}this.setMode=o,this.render=c,this.renderInstances=u,this.renderMultiDraw=h}function zP(r,e,t){let n;function i(){if(n!==void 0)return n;if(e.has("EXT_texture_filter_anisotropic")===!0){const U=e.get("EXT_texture_filter_anisotropic");n=r.getParameter(U.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else n=0;return n}function s(U){if(U==="highp"){if(r.getShaderPrecisionFormat(r.VERTEX_SHADER,r.HIGH_FLOAT).precision>0&&r.getShaderPrecisionFormat(r.FRAGMENT_SHADER,r.HIGH_FLOAT).precision>0)return"highp";U="mediump"}return U==="mediump"&&r.getShaderPrecisionFormat(r.VERTEX_SHADER,r.MEDIUM_FLOAT).precision>0&&r.getShaderPrecisionFormat(r.FRAGMENT_SHADER,r.MEDIUM_FLOAT).precision>0?"mediump":"lowp"}const o=typeof WebGL2RenderingContext<"u"&&r.constructor.name==="WebGL2RenderingContext";let c=t.precision!==void 0?t.precision:"highp";const u=s(c);u!==c&&(console.warn("THREE.WebGLRenderer:",c,"not supported, using",u,"instead."),c=u);const h=o||e.has("WEBGL_draw_buffers"),p=t.logarithmicDepthBuffer===!0,g=r.getParameter(r.MAX_TEXTURE_IMAGE_UNITS),d=r.getParameter(r.MAX_VERTEX_TEXTURE_IMAGE_UNITS),m=r.getParameter(r.MAX_TEXTURE_SIZE),_=r.getParameter(r.MAX_CUBE_MAP_TEXTURE_SIZE),y=r.getParameter(r.MAX_VERTEX_ATTRIBS),v=r.getParameter(r.MAX_VERTEX_UNIFORM_VECTORS),x=r.getParameter(r.MAX_VARYING_VECTORS),w=r.getParameter(r.MAX_FRAGMENT_UNIFORM_VECTORS),M=d>0,E=o||e.has("OES_texture_float"),O=M&&E,P=o?r.getParameter(r.MAX_SAMPLES):0;return{isWebGL2:o,drawBuffers:h,getMaxAnisotropy:i,getMaxPrecision:s,precision:c,logarithmicDepthBuffer:p,maxTextures:g,maxVertexTextures:d,maxTextureSize:m,maxCubemapSize:_,maxAttributes:y,maxVertexUniforms:v,maxVaryings:x,maxFragmentUniforms:w,vertexTextures:M,floatFragmentTextures:E,floatVertexTextures:O,maxSamples:P}}function kP(r){const e=this;let t=null,n=0,i=!1,s=!1;const o=new Ur,c=new vt,u={value:null,needsUpdate:!1};this.uniform=u,this.numPlanes=0,this.numIntersection=0,this.init=function(g,d){const m=g.length!==0||d||n!==0||i;return i=d,n=g.length,m},this.beginShadows=function(){s=!0,p(null)},this.endShadows=function(){s=!1},this.setGlobalState=function(g,d){t=p(g,d,0)},this.setState=function(g,d,m){const _=g.clippingPlanes,y=g.clipIntersection,v=g.clipShadows,x=r.get(g);if(!i||_===null||_.length===0||s&&!v)s?p(null):h();else{const w=s?0:n,M=w*4;let E=x.clippingState||null;u.value=E,E=p(_,d,M,m);for(let O=0;O!==M;++O)E[O]=t[O];x.clippingState=E,this.numIntersection=y?this.numPlanes:0,this.numPlanes+=w}};function h(){u.value!==t&&(u.value=t,u.needsUpdate=n>0),e.numPlanes=n,e.numIntersection=0}function p(g,d,m,_){const y=g!==null?g.length:0;let v=null;if(y!==0){if(v=u.value,_!==!0||v===null){const x=m+y*4,w=d.matrixWorldInverse;c.getNormalMatrix(w),(v===null||v.length<x)&&(v=new Float32Array(x));for(let M=0,E=m;M!==y;++M,E+=4)o.copy(g[M]).applyMatrix4(w,c),o.normal.toArray(v,E),v[E+3]=o.constant}u.value=v,u.needsUpdate=!0}return e.numPlanes=y,e.numIntersection=0,v}}function GP(r){let e=new WeakMap;function t(o,c){return c===So?o.mapping=dr:c===wo&&(o.mapping=zr),o}function n(o){if(o&&o.isTexture){const c=o.mapping;if(c===So||c===wo)if(e.has(o)){const u=e.get(o).texture;return t(u,o.mapping)}else{const u=o.image;if(u&&u.height>0){const h=new mx(u.height);return h.fromEquirectangularTexture(r,o),e.set(o,h),o.addEventListener("dispose",i),t(h.texture,o.mapping)}else return null}}return o}function i(o){const c=o.target;c.removeEventListener("dispose",i);const u=e.get(c);u!==void 0&&(e.delete(c),u.dispose())}function s(){e=new WeakMap}return{get:n,dispose:s}}class hu extends uu{constructor(e=-1,t=1,n=1,i=-1,s=.1,o=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=n,this.bottom=i,this.near=s,this.far=o,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=e.view===null?null:Object.assign({},e.view),this}setViewOffset(e,t,n,i,s,o){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=i,this.view.width=s,this.view.height=o,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,i=(this.top+this.bottom)/2;let s=n-e,o=n+e,c=i+t,u=i-t;if(this.view!==null&&this.view.enabled){const h=(this.right-this.left)/this.view.fullWidth/this.zoom,p=(this.top-this.bottom)/this.view.fullHeight/this.zoom;s+=h*this.view.offsetX,o=s+h*this.view.width,c-=p*this.view.offsetY,u=c-p*this.view.height}this.projectionMatrix.makeOrthographic(s,o,c,u,this.near,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,this.view!==null&&(t.object.view=Object.assign({},this.view)),t}}const xa=4,x_=[.125,.215,.35,.446,.526,.582],ps=20,df=new hu,y_=new qe;let pf=null,mf=0,gf=0;const hs=(1+Math.sqrt(5))/2,ua=1/hs,b_=[new F(1,1,1),new F(-1,1,1),new F(1,1,-1),new F(-1,1,-1),new F(0,hs,ua),new F(0,hs,-ua),new F(ua,0,hs),new F(-ua,0,hs),new F(hs,ua,0),new F(-hs,ua,0)];class Ad{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(e,t=0,n=.1,i=100){pf=this._renderer.getRenderTarget(),mf=this._renderer.getActiveCubeFace(),gf=this._renderer.getActiveMipmapLevel(),this._setSize(256);const s=this._allocateTargets();return s.depthBuffer=!0,this._sceneToCubeUV(e,n,i,s),t>0&&this._blur(s,0,0,t),this._applyPMREM(s),this._cleanup(s),s}fromEquirectangular(e,t=null){return this._fromTexture(e,t)}fromCubemap(e,t=null){return this._fromTexture(e,t)}compileCubemapShader(){this._cubemapMaterial===null&&(this._cubemapMaterial=w_(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){this._equirectMaterial===null&&(this._equirectMaterial=S_(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),this._cubemapMaterial!==null&&this._cubemapMaterial.dispose(),this._equirectMaterial!==null&&this._equirectMaterial.dispose()}_setSize(e){this._lodMax=Math.floor(Math.log2(e)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){this._blurMaterial!==null&&this._blurMaterial.dispose(),this._pingPongRenderTarget!==null&&this._pingPongRenderTarget.dispose();for(let e=0;e<this._lodPlanes.length;e++)this._lodPlanes[e].dispose()}_cleanup(e){this._renderer.setRenderTarget(pf,mf,gf),e.scissorTest=!1,hc(e,0,0,e.width,e.height)}_fromTexture(e,t){e.mapping===dr||e.mapping===zr?this._setSize(e.image.length===0?16:e.image[0].width||e.image[0].image.width):this._setSize(e.image.width/4),pf=this._renderer.getRenderTarget(),mf=this._renderer.getActiveCubeFace(),gf=this._renderer.getActiveMipmapLevel();const n=t||this._allocateTargets();return this._textureToCubeUV(e,n),this._applyPMREM(n),this._cleanup(n),n}_allocateTargets(){const e=3*Math.max(this._cubeSize,112),t=4*this._cubeSize,n={magFilter:$t,minFilter:$t,generateMipmaps:!1,type:Ea,format:Yn,colorSpace:Hi,depthBuffer:!1},i=M_(e,t,n);if(this._pingPongRenderTarget===null||this._pingPongRenderTarget.width!==e||this._pingPongRenderTarget.height!==t){this._pingPongRenderTarget!==null&&this._dispose(),this._pingPongRenderTarget=M_(e,t,n);const{_lodMax:s}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=HP(s)),this._blurMaterial=VP(s,e,t)}return i}_compileMaterial(e){const t=new on(this._lodPlanes[0],e);this._renderer.compile(t,df)}_sceneToCubeUV(e,t,n,i){const c=new yn(90,1,t,n),u=[1,-1,1,1,1,1],h=[1,1,1,-1,-1,-1],p=this._renderer,g=p.autoClear,d=p.toneMapping;p.getClearColor(y_),p.toneMapping=ur,p.autoClear=!1;const m=new Hr({name:"PMREM.Background",side:On,depthWrite:!1,depthTest:!1}),_=new on(new Ts,m);let y=!1;const v=e.background;v?v.isColor&&(m.color.copy(v),e.background=null,y=!0):(m.color.copy(y_),y=!0);for(let x=0;x<6;x++){const w=x%3;w===0?(c.up.set(0,u[x],0),c.lookAt(h[x],0,0)):w===1?(c.up.set(0,0,u[x]),c.lookAt(0,h[x],0)):(c.up.set(0,u[x],0),c.lookAt(0,0,h[x]));const M=this._cubeSize;hc(i,w*M,x>2?M:0,M,M),p.setRenderTarget(i),y&&p.render(_,c),p.render(e,c)}_.geometry.dispose(),_.material.dispose(),p.toneMapping=d,p.autoClear=g,e.background=v}_textureToCubeUV(e,t){const n=this._renderer,i=e.mapping===dr||e.mapping===zr;i?(this._cubemapMaterial===null&&(this._cubemapMaterial=w_()),this._cubemapMaterial.uniforms.flipEnvMap.value=e.isRenderTargetTexture===!1?-1:1):this._equirectMaterial===null&&(this._equirectMaterial=S_());const s=i?this._cubemapMaterial:this._equirectMaterial,o=new on(this._lodPlanes[0],s),c=s.uniforms;c.envMap.value=e;const u=this._cubeSize;hc(t,0,0,3*u,2*u),n.setRenderTarget(t),n.render(o,df)}_applyPMREM(e){const t=this._renderer,n=t.autoClear;t.autoClear=!1;for(let i=1;i<this._lodPlanes.length;i++){const s=Math.sqrt(this._sigmas[i]*this._sigmas[i]-this._sigmas[i-1]*this._sigmas[i-1]),o=b_[(i-1)%b_.length];this._blur(e,i-1,i,s,o)}t.autoClear=n}_blur(e,t,n,i,s){const o=this._pingPongRenderTarget;this._halfBlur(e,o,t,n,i,"latitudinal",s),this._halfBlur(o,e,n,n,i,"longitudinal",s)}_halfBlur(e,t,n,i,s,o,c){const u=this._renderer,h=this._blurMaterial;o!=="latitudinal"&&o!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");const p=3,g=new on(this._lodPlanes[i],h),d=h.uniforms,m=this._sizeLods[n]-1,_=isFinite(s)?Math.PI/(2*m):2*Math.PI/(2*ps-1),y=s/_,v=isFinite(s)?1+Math.floor(p*y):ps;v>ps&&console.warn(`sigmaRadians, ${s}, is too large and will clip, as it requested ${v} samples when the maximum is set to ${ps}`);const x=[];let w=0;for(let U=0;U<ps;++U){const V=U/y,se=Math.exp(-V*V/2);x.push(se),U===0?w+=se:U<v&&(w+=2*se)}for(let U=0;U<x.length;U++)x[U]=x[U]/w;d.envMap.value=e.texture,d.samples.value=v,d.weights.value=x,d.latitudinal.value=o==="latitudinal",c&&(d.poleAxis.value=c);const{_lodMax:M}=this;d.dTheta.value=_,d.mipInt.value=M-n;const E=this._sizeLods[i],O=3*E*(i>M-xa?i-M+xa:0),P=4*(this._cubeSize-E);hc(t,O,P,3*E,2*E),u.setRenderTarget(t),u.render(g,df)}}function HP(r){const e=[],t=[],n=[];let i=r;const s=r-xa+1+x_.length;for(let o=0;o<s;o++){const c=Math.pow(2,i);t.push(c);let u=1/c;o>r-xa?u=x_[o-r+xa-1]:o===0&&(u=0),n.push(u);const h=1/(c-2),p=-h,g=1+h,d=[p,p,g,p,g,g,p,p,g,g,p,g],m=6,_=6,y=3,v=2,x=1,w=new Float32Array(y*_*m),M=new Float32Array(v*_*m),E=new Float32Array(x*_*m);for(let P=0;P<m;P++){const U=P%3*2/3-1,V=P>2?0:-1,se=[U,V,0,U+2/3,V,0,U+2/3,V+1,0,U,V,0,U+2/3,V+1,0,U,V+1,0];w.set(se,y*_*P),M.set(d,v*_*P);const T=[P,P,P,P,P,P];E.set(T,x*_*P)}const O=new xt;O.setAttribute("position",new Ot(w,y)),O.setAttribute("uv",new Ot(M,v)),O.setAttribute("faceIndex",new Ot(E,x)),e.push(O),i>xa&&i--}return{lodPlanes:e,sizeLods:t,sigmas:n}}function M_(r,e,t){const n=new Ri(r,e,t);return n.texture.mapping=Ra,n.texture.name="PMREM.cubeUv",n.scissorTest=!0,n}function hc(r,e,t,n,i){r.viewport.set(e,t,n,i),r.scissor.set(e,t,n,i)}function VP(r,e,t){const n=new Float32Array(ps),i=new F(0,1,0);return new Li({name:"SphericalGaussianBlur",defines:{n:ps,CUBEUV_TEXEL_WIDTH:1/e,CUBEUV_TEXEL_HEIGHT:1/t,CUBEUV_MAX_MIP:`${r}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:n},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:i}},vertexShader:rp(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,blending:cr,depthTest:!1,depthWrite:!1})}function S_(){return new Li({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:rp(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,blending:cr,depthTest:!1,depthWrite:!1})}function w_(){return new Li({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:rp(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,blending:cr,depthTest:!1,depthWrite:!1})}function rp(){return`

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function WP(r){let e=new WeakMap,t=null;function n(c){if(c&&c.isTexture){const u=c.mapping,h=u===So||u===wo,p=u===dr||u===zr;if(h||p)if(c.isRenderTargetTexture&&c.needsPMREMUpdate===!0){c.needsPMREMUpdate=!1;let g=e.get(c);return t===null&&(t=new Ad(r)),g=h?t.fromEquirectangular(c,g):t.fromCubemap(c,g),e.set(c,g),g.texture}else{if(e.has(c))return e.get(c).texture;{const g=c.image;if(h&&g&&g.height>0||p&&g&&i(g)){t===null&&(t=new Ad(r));const d=h?t.fromEquirectangular(c):t.fromCubemap(c);return e.set(c,d),c.addEventListener("dispose",s),d.texture}else return null}}}return c}function i(c){let u=0;const h=6;for(let p=0;p<h;p++)c[p]!==void 0&&u++;return u===h}function s(c){const u=c.target;u.removeEventListener("dispose",s);const h=e.get(u);h!==void 0&&(e.delete(u),h.dispose())}function o(){e=new WeakMap,t!==null&&(t.dispose(),t=null)}return{get:n,dispose:o}}function XP(r){const e={};function t(n){if(e[n]!==void 0)return e[n];let i;switch(n){case"WEBGL_depth_texture":i=r.getExtension("WEBGL_depth_texture")||r.getExtension("MOZ_WEBGL_depth_texture")||r.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":i=r.getExtension("EXT_texture_filter_anisotropic")||r.getExtension("MOZ_EXT_texture_filter_anisotropic")||r.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":i=r.getExtension("WEBGL_compressed_texture_s3tc")||r.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||r.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":i=r.getExtension("WEBGL_compressed_texture_pvrtc")||r.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:i=r.getExtension(n)}return e[n]=i,i}return{has:function(n){return t(n)!==null},init:function(n){n.isWebGL2?(t("EXT_color_buffer_float"),t("WEBGL_clip_cull_distance")):(t("WEBGL_depth_texture"),t("OES_texture_float"),t("OES_texture_half_float"),t("OES_texture_half_float_linear"),t("OES_standard_derivatives"),t("OES_element_index_uint"),t("OES_vertex_array_object"),t("ANGLE_instanced_arrays")),t("OES_texture_float_linear"),t("EXT_color_buffer_half_float"),t("WEBGL_multisampled_render_to_texture")},get:function(n){const i=t(n);return i===null&&console.warn("THREE.WebGLRenderer: "+n+" extension not supported."),i}}}function qP(r,e,t,n){const i={},s=new WeakMap;function o(g){const d=g.target;d.index!==null&&e.remove(d.index);for(const _ in d.attributes)e.remove(d.attributes[_]);for(const _ in d.morphAttributes){const y=d.morphAttributes[_];for(let v=0,x=y.length;v<x;v++)e.remove(y[v])}d.removeEventListener("dispose",o),delete i[d.id];const m=s.get(d);m&&(e.remove(m),s.delete(d)),n.releaseStatesOfGeometry(d),d.isInstancedBufferGeometry===!0&&delete d._maxInstanceCount,t.memory.geometries--}function c(g,d){return i[d.id]===!0||(d.addEventListener("dispose",o),i[d.id]=!0,t.memory.geometries++),d}function u(g){const d=g.attributes;for(const _ in d)e.update(d[_],r.ARRAY_BUFFER);const m=g.morphAttributes;for(const _ in m){const y=m[_];for(let v=0,x=y.length;v<x;v++)e.update(y[v],r.ARRAY_BUFFER)}}function h(g){const d=[],m=g.index,_=g.attributes.position;let y=0;if(m!==null){const w=m.array;y=m.version;for(let M=0,E=w.length;M<E;M+=3){const O=w[M+0],P=w[M+1],U=w[M+2];d.push(O,P,P,U,U,O)}}else if(_!==void 0){const w=_.array;y=_.version;for(let M=0,E=w.length/3-1;M<E;M+=3){const O=M+0,P=M+1,U=M+2;d.push(O,P,P,U,U,O)}}else return;const v=new(lx(d)?ip:np)(d,1);v.version=y;const x=s.get(g);x&&e.remove(x),s.set(g,v)}function p(g){const d=s.get(g);if(d){const m=g.index;m!==null&&d.version<m.version&&h(g)}else h(g);return s.get(g)}return{get:c,update:u,getWireframeAttribute:p}}function YP(r,e,t,n){const i=n.isWebGL2;let s;function o(m){s=m}let c,u;function h(m){c=m.type,u=m.bytesPerElement}function p(m,_){r.drawElements(s,_,c,m*u),t.update(_,s,1)}function g(m,_,y){if(y===0)return;let v,x;if(i)v=r,x="drawElementsInstanced";else if(v=e.get("ANGLE_instanced_arrays"),x="drawElementsInstancedANGLE",v===null){console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}v[x](s,_,c,m*u,y),t.update(_,s,y)}function d(m,_,y){if(y===0)return;const v=e.get("WEBGL_multi_draw");if(v===null)for(let x=0;x<y;x++)this.render(m[x]/u,_[x]);else{v.multiDrawElementsWEBGL(s,_,0,c,m,0,y);let x=0;for(let w=0;w<y;w++)x+=_[w];t.update(x,s,1)}}this.setMode=o,this.setIndex=h,this.render=p,this.renderInstances=g,this.renderMultiDraw=d}function $P(r){const e={geometries:0,textures:0},t={frame:0,calls:0,triangles:0,points:0,lines:0};function n(s,o,c){switch(t.calls++,o){case r.TRIANGLES:t.triangles+=c*(s/3);break;case r.LINES:t.lines+=c*(s/2);break;case r.LINE_STRIP:t.lines+=c*(s-1);break;case r.LINE_LOOP:t.lines+=c*s;break;case r.POINTS:t.points+=c*s;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",o);break}}function i(){t.calls=0,t.triangles=0,t.points=0,t.lines=0}return{memory:e,render:t,programs:null,autoReset:!0,reset:i,update:n}}function ZP(r,e){return r[0]-e[0]}function JP(r,e){return Math.abs(e[1])-Math.abs(r[1])}function KP(r,e,t){const n={},i=new Float32Array(8),s=new WeakMap,o=new Nt,c=[];for(let h=0;h<8;h++)c[h]=[h,0];function u(h,p,g){const d=h.morphTargetInfluences;if(e.isWebGL2===!0){const m=p.morphAttributes.position||p.morphAttributes.normal||p.morphAttributes.color,_=m!==void 0?m.length:0;let y=s.get(p);if(y===void 0||y.count!==_){let H=function(){ne.dispose(),s.delete(p),p.removeEventListener("dispose",H)};y!==void 0&&y.texture.dispose();const w=p.morphAttributes.position!==void 0,M=p.morphAttributes.normal!==void 0,E=p.morphAttributes.color!==void 0,O=p.morphAttributes.position||[],P=p.morphAttributes.normal||[],U=p.morphAttributes.color||[];let V=0;w===!0&&(V=1),M===!0&&(V=2),E===!0&&(V=3);let se=p.attributes.position.count*V,T=1;se>e.maxTextureSize&&(T=Math.ceil(se/e.maxTextureSize),se=e.maxTextureSize);const N=new Float32Array(se*T*4*_),ne=new lu(N,se,T,_);ne.type=xi,ne.needsUpdate=!0;const Te=V*4;for(let re=0;re<_;re++){const Q=O[re],Me=P[re],ve=U[re],be=se*T*4*re;for(let Ie=0;Ie<Q.count;Ie++){const Se=Ie*Te;w===!0&&(o.fromBufferAttribute(Q,Ie),N[be+Se+0]=o.x,N[be+Se+1]=o.y,N[be+Se+2]=o.z,N[be+Se+3]=0),M===!0&&(o.fromBufferAttribute(Me,Ie),N[be+Se+4]=o.x,N[be+Se+5]=o.y,N[be+Se+6]=o.z,N[be+Se+7]=0),E===!0&&(o.fromBufferAttribute(ve,Ie),N[be+Se+8]=o.x,N[be+Se+9]=o.y,N[be+Se+10]=o.z,N[be+Se+11]=ve.itemSize===4?o.w:1)}}y={count:_,texture:ne,size:new Le(se,T)},s.set(p,y),p.addEventListener("dispose",H)}let v=0;for(let w=0;w<d.length;w++)v+=d[w];const x=p.morphTargetsRelative?1:1-v;g.getUniforms().setValue(r,"morphTargetBaseInfluence",x),g.getUniforms().setValue(r,"morphTargetInfluences",d),g.getUniforms().setValue(r,"morphTargetsTexture",y.texture,t),g.getUniforms().setValue(r,"morphTargetsTextureSize",y.size)}else{const m=d===void 0?0:d.length;let _=n[p.id];if(_===void 0||_.length!==m){_=[];for(let M=0;M<m;M++)_[M]=[M,0];n[p.id]=_}for(let M=0;M<m;M++){const E=_[M];E[0]=M,E[1]=d[M]}_.sort(JP);for(let M=0;M<8;M++)M<m&&_[M][1]?(c[M][0]=_[M][0],c[M][1]=_[M][1]):(c[M][0]=Number.MAX_SAFE_INTEGER,c[M][1]=0);c.sort(ZP);const y=p.morphAttributes.position,v=p.morphAttributes.normal;let x=0;for(let M=0;M<8;M++){const E=c[M],O=E[0],P=E[1];O!==Number.MAX_SAFE_INTEGER&&P?(y&&p.getAttribute("morphTarget"+M)!==y[O]&&p.setAttribute("morphTarget"+M,y[O]),v&&p.getAttribute("morphNormal"+M)!==v[O]&&p.setAttribute("morphNormal"+M,v[O]),i[M]=P,x+=P):(y&&p.hasAttribute("morphTarget"+M)===!0&&p.deleteAttribute("morphTarget"+M),v&&p.hasAttribute("morphNormal"+M)===!0&&p.deleteAttribute("morphNormal"+M),i[M]=0)}const w=p.morphTargetsRelative?1:1-x;g.getUniforms().setValue(r,"morphTargetBaseInfluence",w),g.getUniforms().setValue(r,"morphTargetInfluences",i)}}return{update:u}}function jP(r,e,t,n){let i=new WeakMap;function s(u){const h=n.render.frame,p=u.geometry,g=e.get(u,p);if(i.get(g)!==h&&(e.update(g),i.set(g,h)),u.isInstancedMesh&&(u.hasEventListener("dispose",c)===!1&&u.addEventListener("dispose",c),i.get(u)!==h&&(t.update(u.instanceMatrix,r.ARRAY_BUFFER),u.instanceColor!==null&&t.update(u.instanceColor,r.ARRAY_BUFFER),i.set(u,h))),u.isSkinnedMesh){const d=u.skeleton;i.get(d)!==h&&(d.update(),i.set(d,h))}return g}function o(){i=new WeakMap}function c(u){const h=u.target;h.removeEventListener("dispose",c),t.remove(h.instanceMatrix),h.instanceColor!==null&&t.remove(h.instanceColor)}return{update:s,dispose:o}}class sp extends Qt{constructor(e,t,n,i,s,o,c,u,h,p){if(p=p!==void 0?p:Fr,p!==Fr&&p!==ws)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");n===void 0&&p===Fr&&(n=or),n===void 0&&p===ws&&(n=Or),super(null,i,s,o,c,u,p,n,h),this.isDepthTexture=!0,this.image={width:e,height:t},this.magFilter=c!==void 0?c:sn,this.minFilter=u!==void 0?u:sn,this.flipY=!1,this.generateMipmaps=!1,this.compareFunction=null}copy(e){return super.copy(e),this.compareFunction=e.compareFunction,this}toJSON(e){const t=super.toJSON(e);return this.compareFunction!==null&&(t.compareFunction=this.compareFunction),t}}const _x=new Qt,vx=new sp(1,1);vx.compareFunction=jd;const xx=new lu,yx=new tp,bx=new Yo,E_=[],A_=[],T_=new Float32Array(16),C_=new Float32Array(9),R_=new Float32Array(4);function Ia(r,e,t){const n=r[0];if(n<=0||n>0)return r;const i=e*t;let s=E_[i];if(s===void 0&&(s=new Float32Array(i),E_[i]=s),e!==0){n.toArray(s,0);for(let o=1,c=0;o!==e;++o)c+=t,r[o].toArray(s,c)}return s}function pn(r,e){if(r.length!==e.length)return!1;for(let t=0,n=r.length;t<n;t++)if(r[t]!==e[t])return!1;return!0}function mn(r,e){for(let t=0,n=e.length;t<n;t++)r[t]=e[t]}function fu(r,e){let t=A_[e];t===void 0&&(t=new Int32Array(e),A_[e]=t);for(let n=0;n!==e;++n)t[n]=r.allocateTextureUnit();return t}function QP(r,e){const t=this.cache;t[0]!==e&&(r.uniform1f(this.addr,e),t[0]=e)}function e2(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(r.uniform2f(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(pn(t,e))return;r.uniform2fv(this.addr,e),mn(t,e)}}function t2(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(r.uniform3f(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else if(e.r!==void 0)(t[0]!==e.r||t[1]!==e.g||t[2]!==e.b)&&(r.uniform3f(this.addr,e.r,e.g,e.b),t[0]=e.r,t[1]=e.g,t[2]=e.b);else{if(pn(t,e))return;r.uniform3fv(this.addr,e),mn(t,e)}}function n2(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(r.uniform4f(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(pn(t,e))return;r.uniform4fv(this.addr,e),mn(t,e)}}function i2(r,e){const t=this.cache,n=e.elements;if(n===void 0){if(pn(t,e))return;r.uniformMatrix2fv(this.addr,!1,e),mn(t,e)}else{if(pn(t,n))return;R_.set(n),r.uniformMatrix2fv(this.addr,!1,R_),mn(t,n)}}function r2(r,e){const t=this.cache,n=e.elements;if(n===void 0){if(pn(t,e))return;r.uniformMatrix3fv(this.addr,!1,e),mn(t,e)}else{if(pn(t,n))return;C_.set(n),r.uniformMatrix3fv(this.addr,!1,C_),mn(t,n)}}function s2(r,e){const t=this.cache,n=e.elements;if(n===void 0){if(pn(t,e))return;r.uniformMatrix4fv(this.addr,!1,e),mn(t,e)}else{if(pn(t,n))return;T_.set(n),r.uniformMatrix4fv(this.addr,!1,T_),mn(t,n)}}function a2(r,e){const t=this.cache;t[0]!==e&&(r.uniform1i(this.addr,e),t[0]=e)}function o2(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(r.uniform2i(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(pn(t,e))return;r.uniform2iv(this.addr,e),mn(t,e)}}function l2(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(r.uniform3i(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else{if(pn(t,e))return;r.uniform3iv(this.addr,e),mn(t,e)}}function c2(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(r.uniform4i(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(pn(t,e))return;r.uniform4iv(this.addr,e),mn(t,e)}}function u2(r,e){const t=this.cache;t[0]!==e&&(r.uniform1ui(this.addr,e),t[0]=e)}function h2(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(r.uniform2ui(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(pn(t,e))return;r.uniform2uiv(this.addr,e),mn(t,e)}}function f2(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(r.uniform3ui(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else{if(pn(t,e))return;r.uniform3uiv(this.addr,e),mn(t,e)}}function d2(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(r.uniform4ui(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(pn(t,e))return;r.uniform4uiv(this.addr,e),mn(t,e)}}function p2(r,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(r.uniform1i(this.addr,i),n[0]=i);const s=this.type===r.SAMPLER_2D_SHADOW?vx:_x;t.setTexture2D(e||s,i)}function m2(r,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(r.uniform1i(this.addr,i),n[0]=i),t.setTexture3D(e||yx,i)}function g2(r,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(r.uniform1i(this.addr,i),n[0]=i),t.setTextureCube(e||bx,i)}function _2(r,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(r.uniform1i(this.addr,i),n[0]=i),t.setTexture2DArray(e||xx,i)}function v2(r){switch(r){case 5126:return QP;case 35664:return e2;case 35665:return t2;case 35666:return n2;case 35674:return i2;case 35675:return r2;case 35676:return s2;case 5124:case 35670:return a2;case 35667:case 35671:return o2;case 35668:case 35672:return l2;case 35669:case 35673:return c2;case 5125:return u2;case 36294:return h2;case 36295:return f2;case 36296:return d2;case 35678:case 36198:case 36298:case 36306:case 35682:return p2;case 35679:case 36299:case 36307:return m2;case 35680:case 36300:case 36308:case 36293:return g2;case 36289:case 36303:case 36311:case 36292:return _2}}function x2(r,e){r.uniform1fv(this.addr,e)}function y2(r,e){const t=Ia(e,this.size,2);r.uniform2fv(this.addr,t)}function b2(r,e){const t=Ia(e,this.size,3);r.uniform3fv(this.addr,t)}function M2(r,e){const t=Ia(e,this.size,4);r.uniform4fv(this.addr,t)}function S2(r,e){const t=Ia(e,this.size,4);r.uniformMatrix2fv(this.addr,!1,t)}function w2(r,e){const t=Ia(e,this.size,9);r.uniformMatrix3fv(this.addr,!1,t)}function E2(r,e){const t=Ia(e,this.size,16);r.uniformMatrix4fv(this.addr,!1,t)}function A2(r,e){r.uniform1iv(this.addr,e)}function T2(r,e){r.uniform2iv(this.addr,e)}function C2(r,e){r.uniform3iv(this.addr,e)}function R2(r,e){r.uniform4iv(this.addr,e)}function L2(r,e){r.uniform1uiv(this.addr,e)}function P2(r,e){r.uniform2uiv(this.addr,e)}function I2(r,e){r.uniform3uiv(this.addr,e)}function D2(r,e){r.uniform4uiv(this.addr,e)}function U2(r,e,t){const n=this.cache,i=e.length,s=fu(t,i);pn(n,s)||(r.uniform1iv(this.addr,s),mn(n,s));for(let o=0;o!==i;++o)t.setTexture2D(e[o]||_x,s[o])}function N2(r,e,t){const n=this.cache,i=e.length,s=fu(t,i);pn(n,s)||(r.uniform1iv(this.addr,s),mn(n,s));for(let o=0;o!==i;++o)t.setTexture3D(e[o]||yx,s[o])}function O2(r,e,t){const n=this.cache,i=e.length,s=fu(t,i);pn(n,s)||(r.uniform1iv(this.addr,s),mn(n,s));for(let o=0;o!==i;++o)t.setTextureCube(e[o]||bx,s[o])}function F2(r,e,t){const n=this.cache,i=e.length,s=fu(t,i);pn(n,s)||(r.uniform1iv(this.addr,s),mn(n,s));for(let o=0;o!==i;++o)t.setTexture2DArray(e[o]||xx,s[o])}function B2(r){switch(r){case 5126:return x2;case 35664:return y2;case 35665:return b2;case 35666:return M2;case 35674:return S2;case 35675:return w2;case 35676:return E2;case 5124:case 35670:return A2;case 35667:case 35671:return T2;case 35668:case 35672:return C2;case 35669:case 35673:return R2;case 5125:return L2;case 36294:return P2;case 36295:return I2;case 36296:return D2;case 35678:case 36198:case 36298:case 36306:case 35682:return U2;case 35679:case 36299:case 36307:return N2;case 35680:case 36300:case 36308:case 36293:return O2;case 36289:case 36303:case 36311:case 36292:return F2}}class z2{constructor(e,t,n){this.id=e,this.addr=n,this.cache=[],this.type=t.type,this.setValue=v2(t.type)}}class k2{constructor(e,t,n){this.id=e,this.addr=n,this.cache=[],this.type=t.type,this.size=t.size,this.setValue=B2(t.type)}}class G2{constructor(e){this.id=e,this.seq=[],this.map={}}setValue(e,t,n){const i=this.seq;for(let s=0,o=i.length;s!==o;++s){const c=i[s];c.setValue(e,t[c.id],n)}}}const _f=/(\w+)(\])?(\[|\.)?/g;function L_(r,e){r.seq.push(e),r.map[e.id]=e}function H2(r,e,t){const n=r.name,i=n.length;for(_f.lastIndex=0;;){const s=_f.exec(n),o=_f.lastIndex;let c=s[1];const u=s[2]==="]",h=s[3];if(u&&(c=c|0),h===void 0||h==="["&&o+2===i){L_(t,h===void 0?new z2(c,r,e):new k2(c,r,e));break}else{let g=t.map[c];g===void 0&&(g=new G2(c),L_(t,g)),t=g}}}class Xc{constructor(e,t){this.seq=[],this.map={};const n=e.getProgramParameter(t,e.ACTIVE_UNIFORMS);for(let i=0;i<n;++i){const s=e.getActiveUniform(t,i),o=e.getUniformLocation(t,s.name);H2(s,o,this)}}setValue(e,t,n,i){const s=this.map[t];s!==void 0&&s.setValue(e,n,i)}setOptional(e,t,n){const i=t[n];i!==void 0&&this.setValue(e,n,i)}static upload(e,t,n,i){for(let s=0,o=t.length;s!==o;++s){const c=t[s],u=n[c.id];u.needsUpdate!==!1&&c.setValue(e,u.value,i)}}static seqWithValue(e,t){const n=[];for(let i=0,s=e.length;i!==s;++i){const o=e[i];o.id in t&&n.push(o)}return n}}function P_(r,e,t){const n=r.createShader(e);return r.shaderSource(n,t),r.compileShader(n),n}const V2=37297;let W2=0;function X2(r,e){const t=r.split(`
`),n=[],i=Math.max(e-6,0),s=Math.min(e+6,t.length);for(let o=i;o<s;o++){const c=o+1;n.push(`${c===e?">":" "} ${c}: ${t[o]}`)}return n.join(`
`)}function q2(r){const e=Ut.getPrimaries(Ut.workingColorSpace),t=Ut.getPrimaries(r);let n;switch(e===t?n="":e===Io&&t===Po?n="LinearDisplayP3ToLinearSRGB":e===Po&&t===Io&&(n="LinearSRGBToLinearDisplayP3"),r){case Hi:case Xo:return[n,"LinearTransferOETF"];case dn:case ou:return[n,"sRGBTransferOETF"];default:return console.warn("THREE.WebGLProgram: Unsupported color space:",r),[n,"LinearTransferOETF"]}}function I_(r,e,t){const n=r.getShaderParameter(e,r.COMPILE_STATUS),i=r.getShaderInfoLog(e).trim();if(n&&i==="")return"";const s=/ERROR: 0:(\d+)/.exec(i);if(s){const o=parseInt(s[1]);return t.toUpperCase()+`

`+i+`

`+X2(r.getShaderSource(e),o)}else return i}function Y2(r,e){const t=q2(e);return`vec4 ${r}( vec4 value ) { return ${t[0]}( ${t[1]}( value ) ); }`}function $2(r,e){let t;switch(e){case Uv:t="Linear";break;case Nv:t="Reinhard";break;case Ov:t="OptimizedCineon";break;case Fv:t="ACESFilmic";break;case zv:t="AgX";break;case Bv:t="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",e),t="Linear"}return"vec3 "+r+"( vec3 color ) { return "+t+"ToneMapping( color ); }"}function Z2(r){return[r.extensionDerivatives||r.envMapCubeUVHeight||r.bumpMap||r.normalMapTangentSpace||r.clearcoatNormalMap||r.flatShading||r.alphaToCoverage||r.shaderID==="physical"?"#extension GL_OES_standard_derivatives : enable":"",(r.extensionFragDepth||r.logarithmicDepthBuffer)&&r.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",r.extensionDrawBuffers&&r.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(r.extensionShaderTextureLOD||r.envMap||r.transmission)&&r.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""].filter(ya).join(`
`)}function J2(r){return[r.extensionClipCullDistance?"#extension GL_ANGLE_clip_cull_distance : require":"",r.extensionMultiDraw?"#extension GL_ANGLE_multi_draw : require":""].filter(ya).join(`
`)}function K2(r){const e=[];for(const t in r){const n=r[t];n!==!1&&e.push("#define "+t+" "+n)}return e.join(`
`)}function j2(r,e){const t={},n=r.getProgramParameter(e,r.ACTIVE_ATTRIBUTES);for(let i=0;i<n;i++){const s=r.getActiveAttrib(e,i),o=s.name;let c=1;s.type===r.FLOAT_MAT2&&(c=2),s.type===r.FLOAT_MAT3&&(c=3),s.type===r.FLOAT_MAT4&&(c=4),t[o]={type:s.type,location:r.getAttribLocation(e,o),locationSize:c}}return t}function ya(r){return r!==""}function D_(r,e){const t=e.numSpotLightShadows+e.numSpotLightMaps-e.numSpotLightShadowsWithMaps;return r.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g,e.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g,t).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,e.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function U_(r,e){return r.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}const Q2=/^[ \t]*#include +<([\w\d./]+)>/gm;function Td(r){return r.replace(Q2,tI)}const eI=new Map([["encodings_fragment","colorspace_fragment"],["encodings_pars_fragment","colorspace_pars_fragment"],["output_fragment","opaque_fragment"]]);function tI(r,e){let t=pt[e];if(t===void 0){const n=eI.get(e);if(n!==void 0)t=pt[n],console.warn('THREE.WebGLRenderer: Shader chunk "%s" has been deprecated. Use "%s" instead.',e,n);else throw new Error("Can not resolve #include <"+e+">")}return Td(t)}const nI=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function N_(r){return r.replace(nI,iI)}function iI(r,e,t,n){let i="";for(let s=parseInt(e);s<parseInt(t);s++)i+=n.replace(/\[\s*i\s*\]/g,"[ "+s+" ]").replace(/UNROLLED_LOOP_INDEX/g,s);return i}function O_(r){let e=`precision ${r.precision} float;
	precision ${r.precision} int;
	precision ${r.precision} sampler2D;
	precision ${r.precision} samplerCube;
	`;return r.isWebGL2&&(e+=`precision ${r.precision} sampler3D;
		precision ${r.precision} sampler2DArray;
		precision ${r.precision} sampler2DShadow;
		precision ${r.precision} samplerCubeShadow;
		precision ${r.precision} sampler2DArrayShadow;
		precision ${r.precision} isampler2D;
		precision ${r.precision} isampler3D;
		precision ${r.precision} isamplerCube;
		precision ${r.precision} isampler2DArray;
		precision ${r.precision} usampler2D;
		precision ${r.precision} usampler3D;
		precision ${r.precision} usamplerCube;
		precision ${r.precision} usampler2DArray;
		`),r.precision==="highp"?e+=`
#define HIGH_PRECISION`:r.precision==="mediump"?e+=`
#define MEDIUM_PRECISION`:r.precision==="lowp"&&(e+=`
#define LOW_PRECISION`),e}function rI(r){let e="SHADOWMAP_TYPE_BASIC";return r.shadowMapType===Hd?e="SHADOWMAP_TYPE_PCF":r.shadowMapType===lv?e="SHADOWMAP_TYPE_PCF_SOFT":r.shadowMapType===Fi&&(e="SHADOWMAP_TYPE_VSM"),e}function sI(r){let e="ENVMAP_TYPE_CUBE";if(r.envMap)switch(r.envMapMode){case dr:case zr:e="ENVMAP_TYPE_CUBE";break;case Ra:e="ENVMAP_TYPE_CUBE_UV";break}return e}function aI(r){let e="ENVMAP_MODE_REFLECTION";if(r.envMap)switch(r.envMapMode){case zr:e="ENVMAP_MODE_REFRACTION";break}return e}function oI(r){let e="ENVMAP_BLENDING_NONE";if(r.envMap)switch(r.combine){case Wo:e="ENVMAP_BLENDING_MULTIPLY";break;case Iv:e="ENVMAP_BLENDING_MIX";break;case Dv:e="ENVMAP_BLENDING_ADD";break}return e}function lI(r){const e=r.envMapCubeUVHeight;if(e===null)return null;const t=Math.log2(e)-2,n=1/e;return{texelWidth:1/(3*Math.max(Math.pow(2,t),7*16)),texelHeight:n,maxMip:t}}function cI(r,e,t,n){const i=r.getContext(),s=t.defines;let o=t.vertexShader,c=t.fragmentShader;const u=rI(t),h=sI(t),p=aI(t),g=oI(t),d=lI(t),m=t.isWebGL2?"":Z2(t),_=J2(t),y=K2(s),v=i.createProgram();let x,w,M=t.glslVersion?"#version "+t.glslVersion+`
`:"";t.isRawShaderMaterial?(x=["#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,y].filter(ya).join(`
`),x.length>0&&(x+=`
`),w=[m,"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,y].filter(ya).join(`
`),w.length>0&&(w+=`
`)):(x=[O_(t),"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,y,t.extensionClipCullDistance?"#define USE_CLIP_DISTANCE":"",t.batching?"#define USE_BATCHING":"",t.instancing?"#define USE_INSTANCING":"",t.instancingColor?"#define USE_INSTANCING_COLOR":"",t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+p:"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",t.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",t.displacementMap?"#define USE_DISPLACEMENTMAP":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.anisotropy?"#define USE_ANISOTROPY":"",t.anisotropyMap?"#define USE_ANISOTROPYMAP":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",t.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaHash?"#define USE_ALPHAHASH":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",t.mapUv?"#define MAP_UV "+t.mapUv:"",t.alphaMapUv?"#define ALPHAMAP_UV "+t.alphaMapUv:"",t.lightMapUv?"#define LIGHTMAP_UV "+t.lightMapUv:"",t.aoMapUv?"#define AOMAP_UV "+t.aoMapUv:"",t.emissiveMapUv?"#define EMISSIVEMAP_UV "+t.emissiveMapUv:"",t.bumpMapUv?"#define BUMPMAP_UV "+t.bumpMapUv:"",t.normalMapUv?"#define NORMALMAP_UV "+t.normalMapUv:"",t.displacementMapUv?"#define DISPLACEMENTMAP_UV "+t.displacementMapUv:"",t.metalnessMapUv?"#define METALNESSMAP_UV "+t.metalnessMapUv:"",t.roughnessMapUv?"#define ROUGHNESSMAP_UV "+t.roughnessMapUv:"",t.anisotropyMapUv?"#define ANISOTROPYMAP_UV "+t.anisotropyMapUv:"",t.clearcoatMapUv?"#define CLEARCOATMAP_UV "+t.clearcoatMapUv:"",t.clearcoatNormalMapUv?"#define CLEARCOAT_NORMALMAP_UV "+t.clearcoatNormalMapUv:"",t.clearcoatRoughnessMapUv?"#define CLEARCOAT_ROUGHNESSMAP_UV "+t.clearcoatRoughnessMapUv:"",t.iridescenceMapUv?"#define IRIDESCENCEMAP_UV "+t.iridescenceMapUv:"",t.iridescenceThicknessMapUv?"#define IRIDESCENCE_THICKNESSMAP_UV "+t.iridescenceThicknessMapUv:"",t.sheenColorMapUv?"#define SHEEN_COLORMAP_UV "+t.sheenColorMapUv:"",t.sheenRoughnessMapUv?"#define SHEEN_ROUGHNESSMAP_UV "+t.sheenRoughnessMapUv:"",t.specularMapUv?"#define SPECULARMAP_UV "+t.specularMapUv:"",t.specularColorMapUv?"#define SPECULAR_COLORMAP_UV "+t.specularColorMapUv:"",t.specularIntensityMapUv?"#define SPECULAR_INTENSITYMAP_UV "+t.specularIntensityMapUv:"",t.transmissionMapUv?"#define TRANSMISSIONMAP_UV "+t.transmissionMapUv:"",t.thicknessMapUv?"#define THICKNESSMAP_UV "+t.thicknessMapUv:"",t.vertexTangents&&t.flatShading===!1?"#define USE_TANGENT":"",t.vertexColors?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUv1s?"#define USE_UV1":"",t.vertexUv2s?"#define USE_UV2":"",t.vertexUv3s?"#define USE_UV3":"",t.pointsUvs?"#define USE_POINTS_UV":"",t.flatShading?"#define FLAT_SHADED":"",t.skinning?"#define USE_SKINNING":"",t.morphTargets?"#define USE_MORPHTARGETS":"",t.morphNormals&&t.flatShading===!1?"#define USE_MORPHNORMALS":"",t.morphColors&&t.isWebGL2?"#define USE_MORPHCOLORS":"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_TEXTURE":"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_TEXTURE_STRIDE "+t.morphTextureStride:"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_COUNT "+t.morphTargetsCount:"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+u:"",t.sizeAttenuation?"#define USE_SIZEATTENUATION":"",t.numLightProbes>0?"#define USE_LIGHT_PROBES":"",t.useLegacyLights?"#define LEGACY_LIGHTS":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.logarithmicDepthBuffer&&t.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_UV1","	attribute vec2 uv1;","#endif","#ifdef USE_UV2","	attribute vec2 uv2;","#endif","#ifdef USE_UV3","	attribute vec2 uv3;","#endif","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )","	attribute vec3 morphTarget0;","	attribute vec3 morphTarget1;","	attribute vec3 morphTarget2;","	attribute vec3 morphTarget3;","	#ifdef USE_MORPHNORMALS","		attribute vec3 morphNormal0;","		attribute vec3 morphNormal1;","		attribute vec3 morphNormal2;","		attribute vec3 morphNormal3;","	#else","		attribute vec3 morphTarget4;","		attribute vec3 morphTarget5;","		attribute vec3 morphTarget6;","		attribute vec3 morphTarget7;","	#endif","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter(ya).join(`
`),w=[m,O_(t),"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,y,t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.alphaToCoverage?"#define ALPHA_TO_COVERAGE":"",t.map?"#define USE_MAP":"",t.matcap?"#define USE_MATCAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+h:"",t.envMap?"#define "+p:"",t.envMap?"#define "+g:"",d?"#define CUBEUV_TEXEL_WIDTH "+d.texelWidth:"",d?"#define CUBEUV_TEXEL_HEIGHT "+d.texelHeight:"",d?"#define CUBEUV_MAX_MIP "+d.maxMip+".0":"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",t.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.anisotropy?"#define USE_ANISOTROPY":"",t.anisotropyMap?"#define USE_ANISOTROPYMAP":"",t.clearcoat?"#define USE_CLEARCOAT":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.iridescence?"#define USE_IRIDESCENCE":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",t.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaTest?"#define USE_ALPHATEST":"",t.alphaHash?"#define USE_ALPHAHASH":"",t.sheen?"#define USE_SHEEN":"",t.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.vertexTangents&&t.flatShading===!1?"#define USE_TANGENT":"",t.vertexColors||t.instancingColor?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUv1s?"#define USE_UV1":"",t.vertexUv2s?"#define USE_UV2":"",t.vertexUv3s?"#define USE_UV3":"",t.pointsUvs?"#define USE_POINTS_UV":"",t.gradientMap?"#define USE_GRADIENTMAP":"",t.flatShading?"#define FLAT_SHADED":"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+u:"",t.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",t.numLightProbes>0?"#define USE_LIGHT_PROBES":"",t.useLegacyLights?"#define LEGACY_LIGHTS":"",t.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.logarithmicDepthBuffer&&t.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",t.toneMapping!==ur?"#define TONE_MAPPING":"",t.toneMapping!==ur?pt.tonemapping_pars_fragment:"",t.toneMapping!==ur?$2("toneMapping",t.toneMapping):"",t.dithering?"#define DITHERING":"",t.opaque?"#define OPAQUE":"",pt.colorspace_pars_fragment,Y2("linearToOutputTexel",t.outputColorSpace),t.useDepthPacking?"#define DEPTH_PACKING "+t.depthPacking:"",`
`].filter(ya).join(`
`)),o=Td(o),o=D_(o,t),o=U_(o,t),c=Td(c),c=D_(c,t),c=U_(c,t),o=N_(o),c=N_(c),t.isWebGL2&&t.isRawShaderMaterial!==!0&&(M=`#version 300 es
`,x=[_,"precision mediump sampler2DArray;","#define attribute in","#define varying out","#define texture2D texture"].join(`
`)+`
`+x,w=["precision mediump sampler2DArray;","#define varying in",t.glslVersion===wd?"":"layout(location = 0) out highp vec4 pc_fragColor;",t.glslVersion===wd?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join(`
`)+`
`+w);const E=M+x+o,O=M+w+c,P=P_(i,i.VERTEX_SHADER,E),U=P_(i,i.FRAGMENT_SHADER,O);i.attachShader(v,P),i.attachShader(v,U),t.index0AttributeName!==void 0?i.bindAttribLocation(v,0,t.index0AttributeName):t.morphTargets===!0&&i.bindAttribLocation(v,0,"position"),i.linkProgram(v);function V(ne){if(r.debug.checkShaderErrors){const Te=i.getProgramInfoLog(v).trim(),H=i.getShaderInfoLog(P).trim(),re=i.getShaderInfoLog(U).trim();let Q=!0,Me=!0;if(i.getProgramParameter(v,i.LINK_STATUS)===!1)if(Q=!1,typeof r.debug.onShaderError=="function")r.debug.onShaderError(i,v,P,U);else{const ve=I_(i,P,"vertex"),be=I_(i,U,"fragment");console.error("THREE.WebGLProgram: Shader Error "+i.getError()+" - VALIDATE_STATUS "+i.getProgramParameter(v,i.VALIDATE_STATUS)+`

Material Name: `+ne.name+`
Material Type: `+ne.type+`

Program Info Log: `+Te+`
`+ve+`
`+be)}else Te!==""?console.warn("THREE.WebGLProgram: Program Info Log:",Te):(H===""||re==="")&&(Me=!1);Me&&(ne.diagnostics={runnable:Q,programLog:Te,vertexShader:{log:H,prefix:x},fragmentShader:{log:re,prefix:w}})}i.deleteShader(P),i.deleteShader(U),se=new Xc(i,v),T=j2(i,v)}let se;this.getUniforms=function(){return se===void 0&&V(this),se};let T;this.getAttributes=function(){return T===void 0&&V(this),T};let N=t.rendererExtensionParallelShaderCompile===!1;return this.isReady=function(){return N===!1&&(N=i.getProgramParameter(v,V2)),N},this.destroy=function(){n.releaseStatesOfProgram(this),i.deleteProgram(v),this.program=void 0},this.type=t.shaderType,this.name=t.shaderName,this.id=W2++,this.cacheKey=e,this.usedTimes=1,this.program=v,this.vertexShader=P,this.fragmentShader=U,this}let uI=0;class hI{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(e){const t=e.vertexShader,n=e.fragmentShader,i=this._getShaderStage(t),s=this._getShaderStage(n),o=this._getShaderCacheForMaterial(e);return o.has(i)===!1&&(o.add(i),i.usedTimes++),o.has(s)===!1&&(o.add(s),s.usedTimes++),this}remove(e){const t=this.materialCache.get(e);for(const n of t)n.usedTimes--,n.usedTimes===0&&this.shaderCache.delete(n.code);return this.materialCache.delete(e),this}getVertexShaderID(e){return this._getShaderStage(e.vertexShader).id}getFragmentShaderID(e){return this._getShaderStage(e.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(e){const t=this.materialCache;let n=t.get(e);return n===void 0&&(n=new Set,t.set(e,n)),n}_getShaderStage(e){const t=this.shaderCache;let n=t.get(e);return n===void 0&&(n=new fI(e),t.set(e,n)),n}}class fI{constructor(e){this.id=uI++,this.code=e,this.usedTimes=0}}function dI(r,e,t,n,i,s,o){const c=new cu,u=new hI,h=new Set,p=[],g=i.isWebGL2,d=i.logarithmicDepthBuffer,m=i.vertexTextures;let _=i.precision;const y={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function v(T){return h.add(T),T===0?"uv":`uv${T}`}function x(T,N,ne,Te,H){const re=Te.fog,Q=H.geometry,Me=T.isMeshStandardMaterial?Te.environment:null,ve=(T.isMeshStandardMaterial?t:e).get(T.envMap||Me),be=ve&&ve.mapping===Ra?ve.image.height:null,Ie=y[T.type];T.precision!==null&&(_=i.getMaxPrecision(T.precision),_!==T.precision&&console.warn("THREE.WebGLProgram.getParameters:",T.precision,"not supported, using",_,"instead."));const Se=Q.morphAttributes.position||Q.morphAttributes.normal||Q.morphAttributes.color,Ve=Se!==void 0?Se.length:0;let je=0;Q.morphAttributes.position!==void 0&&(je=1),Q.morphAttributes.normal!==void 0&&(je=2),Q.morphAttributes.color!==void 0&&(je=3);let he,Pe,Ge,X;if(Ie){const It=Ci[Ie];he=It.vertexShader,Pe=It.fragmentShader}else he=T.vertexShader,Pe=T.fragmentShader,u.update(T),Ge=u.getVertexShaderID(T),X=u.getFragmentShaderID(T);const Z=r.getRenderTarget(),$=H.isInstancedMesh===!0,ue=H.isBatchedMesh===!0,me=!!T.map,I=!!T.matcap,ge=!!ve,J=!!T.aoMap,ee=!!T.lightMap,j=!!T.bumpMap,Ce=!!T.normalMap,Re=!!T.displacementMap,R=!!T.emissiveMap,A=!!T.metalnessMap,k=!!T.roughnessMap,ie=T.anisotropy>0,te=T.clearcoat>0,de=T.iridescence>0,oe=T.sheen>0,xe=T.transmission>0,pe=ie&&!!T.anisotropyMap,_e=te&&!!T.clearcoatMap,Fe=te&&!!T.clearcoatNormalMap,q=te&&!!T.clearcoatRoughnessMap,Ue=de&&!!T.iridescenceMap,Ee=de&&!!T.iridescenceThicknessMap,ze=oe&&!!T.sheenColorMap,Xe=oe&&!!T.sheenRoughnessMap,ke=!!T.specularMap,st=!!T.specularColorMap,St=!!T.specularIntensityMap,Tt=xe&&!!T.transmissionMap,mt=xe&&!!T.thicknessMap,bt=!!T.gradientMap,B=!!T.alphaMap,Ne=T.alphaTest>0,Oe=!!T.alphaHash,Ze=!!T.extensions;let Qe=ur;T.toneMapped&&(Z===null||Z.isXRRenderTarget===!0)&&(Qe=r.toneMapping);const Rt={isWebGL2:g,shaderID:Ie,shaderType:T.type,shaderName:T.name,vertexShader:he,fragmentShader:Pe,defines:T.defines,customVertexShaderID:Ge,customFragmentShaderID:X,isRawShaderMaterial:T.isRawShaderMaterial===!0,glslVersion:T.glslVersion,precision:_,batching:ue,instancing:$,instancingColor:$&&H.instanceColor!==null,supportsVertexTextures:m,outputColorSpace:Z===null?r.outputColorSpace:Z.isXRRenderTarget===!0?Z.texture.colorSpace:Hi,alphaToCoverage:!!T.alphaToCoverage,map:me,matcap:I,envMap:ge,envMapMode:ge&&ve.mapping,envMapCubeUVHeight:be,aoMap:J,lightMap:ee,bumpMap:j,normalMap:Ce,displacementMap:m&&Re,emissiveMap:R,normalMapObjectSpace:Ce&&T.normalMapType===ex,normalMapTangentSpace:Ce&&T.normalMapType===Gr,metalnessMap:A,roughnessMap:k,anisotropy:ie,anisotropyMap:pe,clearcoat:te,clearcoatMap:_e,clearcoatNormalMap:Fe,clearcoatRoughnessMap:q,iridescence:de,iridescenceMap:Ue,iridescenceThicknessMap:Ee,sheen:oe,sheenColorMap:ze,sheenRoughnessMap:Xe,specularMap:ke,specularColorMap:st,specularIntensityMap:St,transmission:xe,transmissionMap:Tt,thicknessMap:mt,gradientMap:bt,opaque:T.transparent===!1&&T.blending===xs&&T.alphaToCoverage===!1,alphaMap:B,alphaTest:Ne,alphaHash:Oe,combine:T.combine,mapUv:me&&v(T.map.channel),aoMapUv:J&&v(T.aoMap.channel),lightMapUv:ee&&v(T.lightMap.channel),bumpMapUv:j&&v(T.bumpMap.channel),normalMapUv:Ce&&v(T.normalMap.channel),displacementMapUv:Re&&v(T.displacementMap.channel),emissiveMapUv:R&&v(T.emissiveMap.channel),metalnessMapUv:A&&v(T.metalnessMap.channel),roughnessMapUv:k&&v(T.roughnessMap.channel),anisotropyMapUv:pe&&v(T.anisotropyMap.channel),clearcoatMapUv:_e&&v(T.clearcoatMap.channel),clearcoatNormalMapUv:Fe&&v(T.clearcoatNormalMap.channel),clearcoatRoughnessMapUv:q&&v(T.clearcoatRoughnessMap.channel),iridescenceMapUv:Ue&&v(T.iridescenceMap.channel),iridescenceThicknessMapUv:Ee&&v(T.iridescenceThicknessMap.channel),sheenColorMapUv:ze&&v(T.sheenColorMap.channel),sheenRoughnessMapUv:Xe&&v(T.sheenRoughnessMap.channel),specularMapUv:ke&&v(T.specularMap.channel),specularColorMapUv:st&&v(T.specularColorMap.channel),specularIntensityMapUv:St&&v(T.specularIntensityMap.channel),transmissionMapUv:Tt&&v(T.transmissionMap.channel),thicknessMapUv:mt&&v(T.thicknessMap.channel),alphaMapUv:B&&v(T.alphaMap.channel),vertexTangents:!!Q.attributes.tangent&&(Ce||ie),vertexColors:T.vertexColors,vertexAlphas:T.vertexColors===!0&&!!Q.attributes.color&&Q.attributes.color.itemSize===4,pointsUvs:H.isPoints===!0&&!!Q.attributes.uv&&(me||B),fog:!!re,useFog:T.fog===!0,fogExp2:!!re&&re.isFogExp2,flatShading:T.flatShading===!0,sizeAttenuation:T.sizeAttenuation===!0,logarithmicDepthBuffer:d,skinning:H.isSkinnedMesh===!0,morphTargets:Q.morphAttributes.position!==void 0,morphNormals:Q.morphAttributes.normal!==void 0,morphColors:Q.morphAttributes.color!==void 0,morphTargetsCount:Ve,morphTextureStride:je,numDirLights:N.directional.length,numPointLights:N.point.length,numSpotLights:N.spot.length,numSpotLightMaps:N.spotLightMap.length,numRectAreaLights:N.rectArea.length,numHemiLights:N.hemi.length,numDirLightShadows:N.directionalShadowMap.length,numPointLightShadows:N.pointShadowMap.length,numSpotLightShadows:N.spotShadowMap.length,numSpotLightShadowsWithMaps:N.numSpotLightShadowsWithMaps,numLightProbes:N.numLightProbes,numClippingPlanes:o.numPlanes,numClipIntersection:o.numIntersection,dithering:T.dithering,shadowMapEnabled:r.shadowMap.enabled&&ne.length>0,shadowMapType:r.shadowMap.type,toneMapping:Qe,useLegacyLights:r._useLegacyLights,decodeVideoTexture:me&&T.map.isVideoTexture===!0&&Ut.getTransfer(T.map.colorSpace)===Gt,premultipliedAlpha:T.premultipliedAlpha,doubleSided:T.side===Bi,flipSided:T.side===On,useDepthPacking:T.depthPacking>=0,depthPacking:T.depthPacking||0,index0AttributeName:T.index0AttributeName,extensionDerivatives:Ze&&T.extensions.derivatives===!0,extensionFragDepth:Ze&&T.extensions.fragDepth===!0,extensionDrawBuffers:Ze&&T.extensions.drawBuffers===!0,extensionShaderTextureLOD:Ze&&T.extensions.shaderTextureLOD===!0,extensionClipCullDistance:Ze&&T.extensions.clipCullDistance===!0&&n.has("WEBGL_clip_cull_distance"),extensionMultiDraw:Ze&&T.extensions.multiDraw===!0&&n.has("WEBGL_multi_draw"),rendererExtensionFragDepth:g||n.has("EXT_frag_depth"),rendererExtensionDrawBuffers:g||n.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:g||n.has("EXT_shader_texture_lod"),rendererExtensionParallelShaderCompile:n.has("KHR_parallel_shader_compile"),customProgramCacheKey:T.customProgramCacheKey()};return Rt.vertexUv1s=h.has(1),Rt.vertexUv2s=h.has(2),Rt.vertexUv3s=h.has(3),h.clear(),Rt}function w(T){const N=[];if(T.shaderID?N.push(T.shaderID):(N.push(T.customVertexShaderID),N.push(T.customFragmentShaderID)),T.defines!==void 0)for(const ne in T.defines)N.push(ne),N.push(T.defines[ne]);return T.isRawShaderMaterial===!1&&(M(N,T),E(N,T),N.push(r.outputColorSpace)),N.push(T.customProgramCacheKey),N.join()}function M(T,N){T.push(N.precision),T.push(N.outputColorSpace),T.push(N.envMapMode),T.push(N.envMapCubeUVHeight),T.push(N.mapUv),T.push(N.alphaMapUv),T.push(N.lightMapUv),T.push(N.aoMapUv),T.push(N.bumpMapUv),T.push(N.normalMapUv),T.push(N.displacementMapUv),T.push(N.emissiveMapUv),T.push(N.metalnessMapUv),T.push(N.roughnessMapUv),T.push(N.anisotropyMapUv),T.push(N.clearcoatMapUv),T.push(N.clearcoatNormalMapUv),T.push(N.clearcoatRoughnessMapUv),T.push(N.iridescenceMapUv),T.push(N.iridescenceThicknessMapUv),T.push(N.sheenColorMapUv),T.push(N.sheenRoughnessMapUv),T.push(N.specularMapUv),T.push(N.specularColorMapUv),T.push(N.specularIntensityMapUv),T.push(N.transmissionMapUv),T.push(N.thicknessMapUv),T.push(N.combine),T.push(N.fogExp2),T.push(N.sizeAttenuation),T.push(N.morphTargetsCount),T.push(N.morphAttributeCount),T.push(N.numDirLights),T.push(N.numPointLights),T.push(N.numSpotLights),T.push(N.numSpotLightMaps),T.push(N.numHemiLights),T.push(N.numRectAreaLights),T.push(N.numDirLightShadows),T.push(N.numPointLightShadows),T.push(N.numSpotLightShadows),T.push(N.numSpotLightShadowsWithMaps),T.push(N.numLightProbes),T.push(N.shadowMapType),T.push(N.toneMapping),T.push(N.numClippingPlanes),T.push(N.numClipIntersection),T.push(N.depthPacking)}function E(T,N){c.disableAll(),N.isWebGL2&&c.enable(0),N.supportsVertexTextures&&c.enable(1),N.instancing&&c.enable(2),N.instancingColor&&c.enable(3),N.matcap&&c.enable(4),N.envMap&&c.enable(5),N.normalMapObjectSpace&&c.enable(6),N.normalMapTangentSpace&&c.enable(7),N.clearcoat&&c.enable(8),N.iridescence&&c.enable(9),N.alphaTest&&c.enable(10),N.vertexColors&&c.enable(11),N.vertexAlphas&&c.enable(12),N.vertexUv1s&&c.enable(13),N.vertexUv2s&&c.enable(14),N.vertexUv3s&&c.enable(15),N.vertexTangents&&c.enable(16),N.anisotropy&&c.enable(17),N.alphaHash&&c.enable(18),N.batching&&c.enable(19),T.push(c.mask),c.disableAll(),N.fog&&c.enable(0),N.useFog&&c.enable(1),N.flatShading&&c.enable(2),N.logarithmicDepthBuffer&&c.enable(3),N.skinning&&c.enable(4),N.morphTargets&&c.enable(5),N.morphNormals&&c.enable(6),N.morphColors&&c.enable(7),N.premultipliedAlpha&&c.enable(8),N.shadowMapEnabled&&c.enable(9),N.useLegacyLights&&c.enable(10),N.doubleSided&&c.enable(11),N.flipSided&&c.enable(12),N.useDepthPacking&&c.enable(13),N.dithering&&c.enable(14),N.transmission&&c.enable(15),N.sheen&&c.enable(16),N.opaque&&c.enable(17),N.pointsUvs&&c.enable(18),N.decodeVideoTexture&&c.enable(19),N.alphaToCoverage&&c.enable(20),T.push(c.mask)}function O(T){const N=y[T.type];let ne;if(N){const Te=Ci[N];ne=dx.clone(Te.uniforms)}else ne=T.uniforms;return ne}function P(T,N){let ne;for(let Te=0,H=p.length;Te<H;Te++){const re=p[Te];if(re.cacheKey===N){ne=re,++ne.usedTimes;break}}return ne===void 0&&(ne=new cI(r,N,T,s),p.push(ne)),ne}function U(T){if(--T.usedTimes===0){const N=p.indexOf(T);p[N]=p[p.length-1],p.pop(),T.destroy()}}function V(T){u.remove(T)}function se(){u.dispose()}return{getParameters:x,getProgramCacheKey:w,getUniforms:O,acquireProgram:P,releaseProgram:U,releaseShaderCache:V,programs:p,dispose:se}}function pI(){let r=new WeakMap;function e(s){let o=r.get(s);return o===void 0&&(o={},r.set(s,o)),o}function t(s){r.delete(s)}function n(s,o,c){r.get(s)[o]=c}function i(){r=new WeakMap}return{get:e,remove:t,update:n,dispose:i}}function mI(r,e){return r.groupOrder!==e.groupOrder?r.groupOrder-e.groupOrder:r.renderOrder!==e.renderOrder?r.renderOrder-e.renderOrder:r.material.id!==e.material.id?r.material.id-e.material.id:r.z!==e.z?r.z-e.z:r.id-e.id}function F_(r,e){return r.groupOrder!==e.groupOrder?r.groupOrder-e.groupOrder:r.renderOrder!==e.renderOrder?r.renderOrder-e.renderOrder:r.z!==e.z?e.z-r.z:r.id-e.id}function B_(){const r=[];let e=0;const t=[],n=[],i=[];function s(){e=0,t.length=0,n.length=0,i.length=0}function o(g,d,m,_,y,v){let x=r[e];return x===void 0?(x={id:g.id,object:g,geometry:d,material:m,groupOrder:_,renderOrder:g.renderOrder,z:y,group:v},r[e]=x):(x.id=g.id,x.object=g,x.geometry=d,x.material=m,x.groupOrder=_,x.renderOrder=g.renderOrder,x.z=y,x.group=v),e++,x}function c(g,d,m,_,y,v){const x=o(g,d,m,_,y,v);m.transmission>0?n.push(x):m.transparent===!0?i.push(x):t.push(x)}function u(g,d,m,_,y,v){const x=o(g,d,m,_,y,v);m.transmission>0?n.unshift(x):m.transparent===!0?i.unshift(x):t.unshift(x)}function h(g,d){t.length>1&&t.sort(g||mI),n.length>1&&n.sort(d||F_),i.length>1&&i.sort(d||F_)}function p(){for(let g=e,d=r.length;g<d;g++){const m=r[g];if(m.id===null)break;m.id=null,m.object=null,m.geometry=null,m.material=null,m.group=null}}return{opaque:t,transmissive:n,transparent:i,init:s,push:c,unshift:u,finish:p,sort:h}}function gI(){let r=new WeakMap;function e(n,i){const s=r.get(n);let o;return s===void 0?(o=new B_,r.set(n,[o])):i>=s.length?(o=new B_,s.push(o)):o=s[i],o}function t(){r=new WeakMap}return{get:e,dispose:t}}function _I(){const r={};return{get:function(e){if(r[e.id]!==void 0)return r[e.id];let t;switch(e.type){case"DirectionalLight":t={direction:new F,color:new qe};break;case"SpotLight":t={position:new F,direction:new F,color:new qe,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":t={position:new F,color:new qe,distance:0,decay:0};break;case"HemisphereLight":t={direction:new F,skyColor:new qe,groundColor:new qe};break;case"RectAreaLight":t={color:new qe,position:new F,halfWidth:new F,halfHeight:new F};break}return r[e.id]=t,t}}}function vI(){const r={};return{get:function(e){if(r[e.id]!==void 0)return r[e.id];let t;switch(e.type){case"DirectionalLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Le};break;case"SpotLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Le};break;case"PointLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Le,shadowCameraNear:1,shadowCameraFar:1e3};break}return r[e.id]=t,t}}}let xI=0;function yI(r,e){return(e.castShadow?2:0)-(r.castShadow?2:0)+(e.map?1:0)-(r.map?1:0)}function bI(r,e){const t=new _I,n=vI(),i={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1,numSpotMaps:-1,numLightProbes:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotLightMap:[],spotShadow:[],spotShadowMap:[],spotLightMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numSpotLightShadowsWithMaps:0,numLightProbes:0};for(let p=0;p<9;p++)i.probe.push(new F);const s=new F,o=new at,c=new at;function u(p,g){let d=0,m=0,_=0;for(let ne=0;ne<9;ne++)i.probe[ne].set(0,0,0);let y=0,v=0,x=0,w=0,M=0,E=0,O=0,P=0,U=0,V=0,se=0;p.sort(yI);const T=g===!0?Math.PI:1;for(let ne=0,Te=p.length;ne<Te;ne++){const H=p[ne],re=H.color,Q=H.intensity,Me=H.distance,ve=H.shadow&&H.shadow.map?H.shadow.map.texture:null;if(H.isAmbientLight)d+=re.r*Q*T,m+=re.g*Q*T,_+=re.b*Q*T;else if(H.isLightProbe){for(let be=0;be<9;be++)i.probe[be].addScaledVector(H.sh.coefficients[be],Q);se++}else if(H.isDirectionalLight){const be=t.get(H);if(be.color.copy(H.color).multiplyScalar(H.intensity*T),H.castShadow){const Ie=H.shadow,Se=n.get(H);Se.shadowBias=Ie.bias,Se.shadowNormalBias=Ie.normalBias,Se.shadowRadius=Ie.radius,Se.shadowMapSize=Ie.mapSize,i.directionalShadow[y]=Se,i.directionalShadowMap[y]=ve,i.directionalShadowMatrix[y]=H.shadow.matrix,E++}i.directional[y]=be,y++}else if(H.isSpotLight){const be=t.get(H);be.position.setFromMatrixPosition(H.matrixWorld),be.color.copy(re).multiplyScalar(Q*T),be.distance=Me,be.coneCos=Math.cos(H.angle),be.penumbraCos=Math.cos(H.angle*(1-H.penumbra)),be.decay=H.decay,i.spot[x]=be;const Ie=H.shadow;if(H.map&&(i.spotLightMap[U]=H.map,U++,Ie.updateMatrices(H),H.castShadow&&V++),i.spotLightMatrix[x]=Ie.matrix,H.castShadow){const Se=n.get(H);Se.shadowBias=Ie.bias,Se.shadowNormalBias=Ie.normalBias,Se.shadowRadius=Ie.radius,Se.shadowMapSize=Ie.mapSize,i.spotShadow[x]=Se,i.spotShadowMap[x]=ve,P++}x++}else if(H.isRectAreaLight){const be=t.get(H);be.color.copy(re).multiplyScalar(Q),be.halfWidth.set(H.width*.5,0,0),be.halfHeight.set(0,H.height*.5,0),i.rectArea[w]=be,w++}else if(H.isPointLight){const be=t.get(H);if(be.color.copy(H.color).multiplyScalar(H.intensity*T),be.distance=H.distance,be.decay=H.decay,H.castShadow){const Ie=H.shadow,Se=n.get(H);Se.shadowBias=Ie.bias,Se.shadowNormalBias=Ie.normalBias,Se.shadowRadius=Ie.radius,Se.shadowMapSize=Ie.mapSize,Se.shadowCameraNear=Ie.camera.near,Se.shadowCameraFar=Ie.camera.far,i.pointShadow[v]=Se,i.pointShadowMap[v]=ve,i.pointShadowMatrix[v]=H.shadow.matrix,O++}i.point[v]=be,v++}else if(H.isHemisphereLight){const be=t.get(H);be.skyColor.copy(H.color).multiplyScalar(Q*T),be.groundColor.copy(H.groundColor).multiplyScalar(Q*T),i.hemi[M]=be,M++}}w>0&&(e.isWebGL2?r.has("OES_texture_float_linear")===!0?(i.rectAreaLTC1=Be.LTC_FLOAT_1,i.rectAreaLTC2=Be.LTC_FLOAT_2):(i.rectAreaLTC1=Be.LTC_HALF_1,i.rectAreaLTC2=Be.LTC_HALF_2):r.has("OES_texture_float_linear")===!0?(i.rectAreaLTC1=Be.LTC_FLOAT_1,i.rectAreaLTC2=Be.LTC_FLOAT_2):r.has("OES_texture_half_float_linear")===!0?(i.rectAreaLTC1=Be.LTC_HALF_1,i.rectAreaLTC2=Be.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),i.ambient[0]=d,i.ambient[1]=m,i.ambient[2]=_;const N=i.hash;(N.directionalLength!==y||N.pointLength!==v||N.spotLength!==x||N.rectAreaLength!==w||N.hemiLength!==M||N.numDirectionalShadows!==E||N.numPointShadows!==O||N.numSpotShadows!==P||N.numSpotMaps!==U||N.numLightProbes!==se)&&(i.directional.length=y,i.spot.length=x,i.rectArea.length=w,i.point.length=v,i.hemi.length=M,i.directionalShadow.length=E,i.directionalShadowMap.length=E,i.pointShadow.length=O,i.pointShadowMap.length=O,i.spotShadow.length=P,i.spotShadowMap.length=P,i.directionalShadowMatrix.length=E,i.pointShadowMatrix.length=O,i.spotLightMatrix.length=P+U-V,i.spotLightMap.length=U,i.numSpotLightShadowsWithMaps=V,i.numLightProbes=se,N.directionalLength=y,N.pointLength=v,N.spotLength=x,N.rectAreaLength=w,N.hemiLength=M,N.numDirectionalShadows=E,N.numPointShadows=O,N.numSpotShadows=P,N.numSpotMaps=U,N.numLightProbes=se,i.version=xI++)}function h(p,g){let d=0,m=0,_=0,y=0,v=0;const x=g.matrixWorldInverse;for(let w=0,M=p.length;w<M;w++){const E=p[w];if(E.isDirectionalLight){const O=i.directional[d];O.direction.setFromMatrixPosition(E.matrixWorld),s.setFromMatrixPosition(E.target.matrixWorld),O.direction.sub(s),O.direction.transformDirection(x),d++}else if(E.isSpotLight){const O=i.spot[_];O.position.setFromMatrixPosition(E.matrixWorld),O.position.applyMatrix4(x),O.direction.setFromMatrixPosition(E.matrixWorld),s.setFromMatrixPosition(E.target.matrixWorld),O.direction.sub(s),O.direction.transformDirection(x),_++}else if(E.isRectAreaLight){const O=i.rectArea[y];O.position.setFromMatrixPosition(E.matrixWorld),O.position.applyMatrix4(x),c.identity(),o.copy(E.matrixWorld),o.premultiply(x),c.extractRotation(o),O.halfWidth.set(E.width*.5,0,0),O.halfHeight.set(0,E.height*.5,0),O.halfWidth.applyMatrix4(c),O.halfHeight.applyMatrix4(c),y++}else if(E.isPointLight){const O=i.point[m];O.position.setFromMatrixPosition(E.matrixWorld),O.position.applyMatrix4(x),m++}else if(E.isHemisphereLight){const O=i.hemi[v];O.direction.setFromMatrixPosition(E.matrixWorld),O.direction.transformDirection(x),v++}}}return{setup:u,setupView:h,state:i}}function z_(r,e){const t=new bI(r,e),n=[],i=[];function s(){n.length=0,i.length=0}function o(g){n.push(g)}function c(g){i.push(g)}function u(g){t.setup(n,g)}function h(g){t.setupView(n,g)}return{init:s,state:{lightsArray:n,shadowsArray:i,lights:t},setupLights:u,setupLightsView:h,pushLight:o,pushShadow:c}}function MI(r,e){let t=new WeakMap;function n(s,o=0){const c=t.get(s);let u;return c===void 0?(u=new z_(r,e),t.set(s,[u])):o>=c.length?(u=new z_(r,e),c.push(u)):u=c[o],u}function i(){t=new WeakMap}return{get:n,dispose:i}}class ap extends Rn{constructor(e){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=jv,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(e)}copy(e){return super.copy(e),this.depthPacking=e.depthPacking,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}}class op extends Rn{constructor(e){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(e)}copy(e){return super.copy(e),this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}}const SI=`void main() {
	gl_Position = vec4( position, 1.0 );
}`,wI=`uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	const float samples = float( VSM_SAMPLES );
	float mean = 0.0;
	float squared_mean = 0.0;
	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );
	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;
	for ( float i = 0.0; i < samples; i ++ ) {
		float uvOffset = uvStart + i * uvStride;
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean / samples;
	squared_mean = squared_mean / samples;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`;function EI(r,e,t){let n=new $o;const i=new Le,s=new Le,o=new Nt,c=new ap({depthPacking:Qv}),u=new op,h={},p=t.maxTextureSize,g={[fr]:On,[On]:fr,[Bi]:Bi},d=new Li({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new Le},radius:{value:4}},vertexShader:SI,fragmentShader:wI}),m=d.clone();m.defines.HORIZONTAL_PASS=1;const _=new xt;_.setAttribute("position",new Ot(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const y=new on(_,d),v=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=Hd;let x=this.type;this.render=function(P,U,V){if(v.enabled===!1||v.autoUpdate===!1&&v.needsUpdate===!1||P.length===0)return;const se=r.getRenderTarget(),T=r.getActiveCubeFace(),N=r.getActiveMipmapLevel(),ne=r.state;ne.setBlending(cr),ne.buffers.color.setClear(1,1,1,1),ne.buffers.depth.setTest(!0),ne.setScissorTest(!1);const Te=x!==Fi&&this.type===Fi,H=x===Fi&&this.type!==Fi;for(let re=0,Q=P.length;re<Q;re++){const Me=P[re],ve=Me.shadow;if(ve===void 0){console.warn("THREE.WebGLShadowMap:",Me,"has no shadow.");continue}if(ve.autoUpdate===!1&&ve.needsUpdate===!1)continue;i.copy(ve.mapSize);const be=ve.getFrameExtents();if(i.multiply(be),s.copy(ve.mapSize),(i.x>p||i.y>p)&&(i.x>p&&(s.x=Math.floor(p/be.x),i.x=s.x*be.x,ve.mapSize.x=s.x),i.y>p&&(s.y=Math.floor(p/be.y),i.y=s.y*be.y,ve.mapSize.y=s.y)),ve.map===null||Te===!0||H===!0){const Se=this.type!==Fi?{minFilter:sn,magFilter:sn}:{};ve.map!==null&&ve.map.dispose(),ve.map=new Ri(i.x,i.y,Se),ve.map.texture.name=Me.name+".shadowMap",ve.camera.updateProjectionMatrix()}r.setRenderTarget(ve.map),r.clear();const Ie=ve.getViewportCount();for(let Se=0;Se<Ie;Se++){const Ve=ve.getViewport(Se);o.set(s.x*Ve.x,s.y*Ve.y,s.x*Ve.z,s.y*Ve.w),ne.viewport(o),ve.updateMatrices(Me,Se),n=ve.getFrustum(),E(U,V,ve.camera,Me,this.type)}ve.isPointLightShadow!==!0&&this.type===Fi&&w(ve,V),ve.needsUpdate=!1}x=this.type,v.needsUpdate=!1,r.setRenderTarget(se,T,N)};function w(P,U){const V=e.update(y);d.defines.VSM_SAMPLES!==P.blurSamples&&(d.defines.VSM_SAMPLES=P.blurSamples,m.defines.VSM_SAMPLES=P.blurSamples,d.needsUpdate=!0,m.needsUpdate=!0),P.mapPass===null&&(P.mapPass=new Ri(i.x,i.y)),d.uniforms.shadow_pass.value=P.map.texture,d.uniforms.resolution.value=P.mapSize,d.uniforms.radius.value=P.radius,r.setRenderTarget(P.mapPass),r.clear(),r.renderBufferDirect(U,null,V,d,y,null),m.uniforms.shadow_pass.value=P.mapPass.texture,m.uniforms.resolution.value=P.mapSize,m.uniforms.radius.value=P.radius,r.setRenderTarget(P.map),r.clear(),r.renderBufferDirect(U,null,V,m,y,null)}function M(P,U,V,se){let T=null;const N=V.isPointLight===!0?P.customDistanceMaterial:P.customDepthMaterial;if(N!==void 0)T=N;else if(T=V.isPointLight===!0?u:c,r.localClippingEnabled&&U.clipShadows===!0&&Array.isArray(U.clippingPlanes)&&U.clippingPlanes.length!==0||U.displacementMap&&U.displacementScale!==0||U.alphaMap&&U.alphaTest>0||U.map&&U.alphaTest>0){const ne=T.uuid,Te=U.uuid;let H=h[ne];H===void 0&&(H={},h[ne]=H);let re=H[Te];re===void 0&&(re=T.clone(),H[Te]=re,U.addEventListener("dispose",O)),T=re}if(T.visible=U.visible,T.wireframe=U.wireframe,se===Fi?T.side=U.shadowSide!==null?U.shadowSide:U.side:T.side=U.shadowSide!==null?U.shadowSide:g[U.side],T.alphaMap=U.alphaMap,T.alphaTest=U.alphaTest,T.map=U.map,T.clipShadows=U.clipShadows,T.clippingPlanes=U.clippingPlanes,T.clipIntersection=U.clipIntersection,T.displacementMap=U.displacementMap,T.displacementScale=U.displacementScale,T.displacementBias=U.displacementBias,T.wireframeLinewidth=U.wireframeLinewidth,T.linewidth=U.linewidth,V.isPointLight===!0&&T.isMeshDistanceMaterial===!0){const ne=r.properties.get(T);ne.light=V}return T}function E(P,U,V,se,T){if(P.visible===!1)return;if(P.layers.test(U.layers)&&(P.isMesh||P.isLine||P.isPoints)&&(P.castShadow||P.receiveShadow&&T===Fi)&&(!P.frustumCulled||n.intersectsObject(P))){P.modelViewMatrix.multiplyMatrices(V.matrixWorldInverse,P.matrixWorld);const Te=e.update(P),H=P.material;if(Array.isArray(H)){const re=Te.groups;for(let Q=0,Me=re.length;Q<Me;Q++){const ve=re[Q],be=H[ve.materialIndex];if(be&&be.visible){const Ie=M(P,be,se,T);P.onBeforeShadow(r,P,U,V,Te,Ie,ve),r.renderBufferDirect(V,null,Te,Ie,P,ve),P.onAfterShadow(r,P,U,V,Te,Ie,ve)}}}else if(H.visible){const re=M(P,H,se,T);P.onBeforeShadow(r,P,U,V,Te,re,null),r.renderBufferDirect(V,null,Te,re,P,null),P.onAfterShadow(r,P,U,V,Te,re,null)}}const ne=P.children;for(let Te=0,H=ne.length;Te<H;Te++)E(ne[Te],U,V,se,T)}function O(P){P.target.removeEventListener("dispose",O);for(const V in h){const se=h[V],T=P.target.uuid;T in se&&(se[T].dispose(),delete se[T])}}}function AI(r,e,t){const n=t.isWebGL2;function i(){let B=!1;const Ne=new Nt;let Oe=null;const Ze=new Nt(0,0,0,0);return{setMask:function(Qe){Oe!==Qe&&!B&&(r.colorMask(Qe,Qe,Qe,Qe),Oe=Qe)},setLocked:function(Qe){B=Qe},setClear:function(Qe,Rt,It,ln,zn){zn===!0&&(Qe*=ln,Rt*=ln,It*=ln),Ne.set(Qe,Rt,It,ln),Ze.equals(Ne)===!1&&(r.clearColor(Qe,Rt,It,ln),Ze.copy(Ne))},reset:function(){B=!1,Oe=null,Ze.set(-1,0,0,0)}}}function s(){let B=!1,Ne=null,Oe=null,Ze=null;return{setTest:function(Qe){Qe?$(r.DEPTH_TEST):ue(r.DEPTH_TEST)},setMask:function(Qe){Ne!==Qe&&!B&&(r.depthMask(Qe),Ne=Qe)},setFunc:function(Qe){if(Oe!==Qe){switch(Qe){case Ev:r.depthFunc(r.NEVER);break;case Av:r.depthFunc(r.ALWAYS);break;case Tv:r.depthFunc(r.LESS);break;case Mo:r.depthFunc(r.LEQUAL);break;case Cv:r.depthFunc(r.EQUAL);break;case Rv:r.depthFunc(r.GEQUAL);break;case Lv:r.depthFunc(r.GREATER);break;case Pv:r.depthFunc(r.NOTEQUAL);break;default:r.depthFunc(r.LEQUAL)}Oe=Qe}},setLocked:function(Qe){B=Qe},setClear:function(Qe){Ze!==Qe&&(r.clearDepth(Qe),Ze=Qe)},reset:function(){B=!1,Ne=null,Oe=null,Ze=null}}}function o(){let B=!1,Ne=null,Oe=null,Ze=null,Qe=null,Rt=null,It=null,ln=null,zn=null;return{setTest:function(Ft){B||(Ft?$(r.STENCIL_TEST):ue(r.STENCIL_TEST))},setMask:function(Ft){Ne!==Ft&&!B&&(r.stencilMask(Ft),Ne=Ft)},setFunc:function(Ft,cn,li){(Oe!==Ft||Ze!==cn||Qe!==li)&&(r.stencilFunc(Ft,cn,li),Oe=Ft,Ze=cn,Qe=li)},setOp:function(Ft,cn,li){(Rt!==Ft||It!==cn||ln!==li)&&(r.stencilOp(Ft,cn,li),Rt=Ft,It=cn,ln=li)},setLocked:function(Ft){B=Ft},setClear:function(Ft){zn!==Ft&&(r.clearStencil(Ft),zn=Ft)},reset:function(){B=!1,Ne=null,Oe=null,Ze=null,Qe=null,Rt=null,It=null,ln=null,zn=null}}}const c=new i,u=new s,h=new o,p=new WeakMap,g=new WeakMap;let d={},m={},_=new WeakMap,y=[],v=null,x=!1,w=null,M=null,E=null,O=null,P=null,U=null,V=null,se=new qe(0,0,0),T=0,N=!1,ne=null,Te=null,H=null,re=null,Q=null;const Me=r.getParameter(r.MAX_COMBINED_TEXTURE_IMAGE_UNITS);let ve=!1,be=0;const Ie=r.getParameter(r.VERSION);Ie.indexOf("WebGL")!==-1?(be=parseFloat(/^WebGL (\d)/.exec(Ie)[1]),ve=be>=1):Ie.indexOf("OpenGL ES")!==-1&&(be=parseFloat(/^OpenGL ES (\d)/.exec(Ie)[1]),ve=be>=2);let Se=null,Ve={};const je=r.getParameter(r.SCISSOR_BOX),he=r.getParameter(r.VIEWPORT),Pe=new Nt().fromArray(je),Ge=new Nt().fromArray(he);function X(B,Ne,Oe,Ze){const Qe=new Uint8Array(4),Rt=r.createTexture();r.bindTexture(B,Rt),r.texParameteri(B,r.TEXTURE_MIN_FILTER,r.NEAREST),r.texParameteri(B,r.TEXTURE_MAG_FILTER,r.NEAREST);for(let It=0;It<Oe;It++)n&&(B===r.TEXTURE_3D||B===r.TEXTURE_2D_ARRAY)?r.texImage3D(Ne,0,r.RGBA,1,1,Ze,0,r.RGBA,r.UNSIGNED_BYTE,Qe):r.texImage2D(Ne+It,0,r.RGBA,1,1,0,r.RGBA,r.UNSIGNED_BYTE,Qe);return Rt}const Z={};Z[r.TEXTURE_2D]=X(r.TEXTURE_2D,r.TEXTURE_2D,1),Z[r.TEXTURE_CUBE_MAP]=X(r.TEXTURE_CUBE_MAP,r.TEXTURE_CUBE_MAP_POSITIVE_X,6),n&&(Z[r.TEXTURE_2D_ARRAY]=X(r.TEXTURE_2D_ARRAY,r.TEXTURE_2D_ARRAY,1,1),Z[r.TEXTURE_3D]=X(r.TEXTURE_3D,r.TEXTURE_3D,1,1)),c.setClear(0,0,0,1),u.setClear(1),h.setClear(0),$(r.DEPTH_TEST),u.setFunc(Mo),Re(!1),R(Xf),$(r.CULL_FACE),j(cr);function $(B){d[B]!==!0&&(r.enable(B),d[B]=!0)}function ue(B){d[B]!==!1&&(r.disable(B),d[B]=!1)}function me(B,Ne){return m[B]!==Ne?(r.bindFramebuffer(B,Ne),m[B]=Ne,n&&(B===r.DRAW_FRAMEBUFFER&&(m[r.FRAMEBUFFER]=Ne),B===r.FRAMEBUFFER&&(m[r.DRAW_FRAMEBUFFER]=Ne)),!0):!1}function I(B,Ne){let Oe=y,Ze=!1;if(B)if(Oe=_.get(Ne),Oe===void 0&&(Oe=[],_.set(Ne,Oe)),B.isWebGLMultipleRenderTargets){const Qe=B.texture;if(Oe.length!==Qe.length||Oe[0]!==r.COLOR_ATTACHMENT0){for(let Rt=0,It=Qe.length;Rt<It;Rt++)Oe[Rt]=r.COLOR_ATTACHMENT0+Rt;Oe.length=Qe.length,Ze=!0}}else Oe[0]!==r.COLOR_ATTACHMENT0&&(Oe[0]=r.COLOR_ATTACHMENT0,Ze=!0);else Oe[0]!==r.BACK&&(Oe[0]=r.BACK,Ze=!0);Ze&&(t.isWebGL2?r.drawBuffers(Oe):e.get("WEBGL_draw_buffers").drawBuffersWEBGL(Oe))}function ge(B){return v!==B?(r.useProgram(B),v=B,!0):!1}const J={[Nr]:r.FUNC_ADD,[uv]:r.FUNC_SUBTRACT,[hv]:r.FUNC_REVERSE_SUBTRACT};if(n)J[Zf]=r.MIN,J[Jf]=r.MAX;else{const B=e.get("EXT_blend_minmax");B!==null&&(J[Zf]=B.MIN_EXT,J[Jf]=B.MAX_EXT)}const ee={[fv]:r.ZERO,[dv]:r.ONE,[pv]:r.SRC_COLOR,[Zc]:r.SRC_ALPHA,[yv]:r.SRC_ALPHA_SATURATE,[vv]:r.DST_COLOR,[gv]:r.DST_ALPHA,[mv]:r.ONE_MINUS_SRC_COLOR,[Jc]:r.ONE_MINUS_SRC_ALPHA,[xv]:r.ONE_MINUS_DST_COLOR,[_v]:r.ONE_MINUS_DST_ALPHA,[bv]:r.CONSTANT_COLOR,[Mv]:r.ONE_MINUS_CONSTANT_COLOR,[Sv]:r.CONSTANT_ALPHA,[wv]:r.ONE_MINUS_CONSTANT_ALPHA};function j(B,Ne,Oe,Ze,Qe,Rt,It,ln,zn,Ft){if(B===cr){x===!0&&(ue(r.BLEND),x=!1);return}if(x===!1&&($(r.BLEND),x=!0),B!==cv){if(B!==w||Ft!==N){if((M!==Nr||P!==Nr)&&(r.blendEquation(r.FUNC_ADD),M=Nr,P=Nr),Ft)switch(B){case xs:r.blendFuncSeparate(r.ONE,r.ONE_MINUS_SRC_ALPHA,r.ONE,r.ONE_MINUS_SRC_ALPHA);break;case qf:r.blendFunc(r.ONE,r.ONE);break;case Yf:r.blendFuncSeparate(r.ZERO,r.ONE_MINUS_SRC_COLOR,r.ZERO,r.ONE);break;case $f:r.blendFuncSeparate(r.ZERO,r.SRC_COLOR,r.ZERO,r.SRC_ALPHA);break;default:console.error("THREE.WebGLState: Invalid blending: ",B);break}else switch(B){case xs:r.blendFuncSeparate(r.SRC_ALPHA,r.ONE_MINUS_SRC_ALPHA,r.ONE,r.ONE_MINUS_SRC_ALPHA);break;case qf:r.blendFunc(r.SRC_ALPHA,r.ONE);break;case Yf:r.blendFuncSeparate(r.ZERO,r.ONE_MINUS_SRC_COLOR,r.ZERO,r.ONE);break;case $f:r.blendFunc(r.ZERO,r.SRC_COLOR);break;default:console.error("THREE.WebGLState: Invalid blending: ",B);break}E=null,O=null,U=null,V=null,se.set(0,0,0),T=0,w=B,N=Ft}return}Qe=Qe||Ne,Rt=Rt||Oe,It=It||Ze,(Ne!==M||Qe!==P)&&(r.blendEquationSeparate(J[Ne],J[Qe]),M=Ne,P=Qe),(Oe!==E||Ze!==O||Rt!==U||It!==V)&&(r.blendFuncSeparate(ee[Oe],ee[Ze],ee[Rt],ee[It]),E=Oe,O=Ze,U=Rt,V=It),(ln.equals(se)===!1||zn!==T)&&(r.blendColor(ln.r,ln.g,ln.b,zn),se.copy(ln),T=zn),w=B,N=!1}function Ce(B,Ne){B.side===Bi?ue(r.CULL_FACE):$(r.CULL_FACE);let Oe=B.side===On;Ne&&(Oe=!Oe),Re(Oe),B.blending===xs&&B.transparent===!1?j(cr):j(B.blending,B.blendEquation,B.blendSrc,B.blendDst,B.blendEquationAlpha,B.blendSrcAlpha,B.blendDstAlpha,B.blendColor,B.blendAlpha,B.premultipliedAlpha),u.setFunc(B.depthFunc),u.setTest(B.depthTest),u.setMask(B.depthWrite),c.setMask(B.colorWrite);const Ze=B.stencilWrite;h.setTest(Ze),Ze&&(h.setMask(B.stencilWriteMask),h.setFunc(B.stencilFunc,B.stencilRef,B.stencilFuncMask),h.setOp(B.stencilFail,B.stencilZFail,B.stencilZPass)),k(B.polygonOffset,B.polygonOffsetFactor,B.polygonOffsetUnits),B.alphaToCoverage===!0?$(r.SAMPLE_ALPHA_TO_COVERAGE):ue(r.SAMPLE_ALPHA_TO_COVERAGE)}function Re(B){ne!==B&&(B?r.frontFace(r.CW):r.frontFace(r.CCW),ne=B)}function R(B){B!==av?($(r.CULL_FACE),B!==Te&&(B===Xf?r.cullFace(r.BACK):B===ov?r.cullFace(r.FRONT):r.cullFace(r.FRONT_AND_BACK))):ue(r.CULL_FACE),Te=B}function A(B){B!==H&&(ve&&r.lineWidth(B),H=B)}function k(B,Ne,Oe){B?($(r.POLYGON_OFFSET_FILL),(re!==Ne||Q!==Oe)&&(r.polygonOffset(Ne,Oe),re=Ne,Q=Oe)):ue(r.POLYGON_OFFSET_FILL)}function ie(B){B?$(r.SCISSOR_TEST):ue(r.SCISSOR_TEST)}function te(B){B===void 0&&(B=r.TEXTURE0+Me-1),Se!==B&&(r.activeTexture(B),Se=B)}function de(B,Ne,Oe){Oe===void 0&&(Se===null?Oe=r.TEXTURE0+Me-1:Oe=Se);let Ze=Ve[Oe];Ze===void 0&&(Ze={type:void 0,texture:void 0},Ve[Oe]=Ze),(Ze.type!==B||Ze.texture!==Ne)&&(Se!==Oe&&(r.activeTexture(Oe),Se=Oe),r.bindTexture(B,Ne||Z[B]),Ze.type=B,Ze.texture=Ne)}function oe(){const B=Ve[Se];B!==void 0&&B.type!==void 0&&(r.bindTexture(B.type,null),B.type=void 0,B.texture=void 0)}function xe(){try{r.compressedTexImage2D.apply(r,arguments)}catch(B){console.error("THREE.WebGLState:",B)}}function pe(){try{r.compressedTexImage3D.apply(r,arguments)}catch(B){console.error("THREE.WebGLState:",B)}}function _e(){try{r.texSubImage2D.apply(r,arguments)}catch(B){console.error("THREE.WebGLState:",B)}}function Fe(){try{r.texSubImage3D.apply(r,arguments)}catch(B){console.error("THREE.WebGLState:",B)}}function q(){try{r.compressedTexSubImage2D.apply(r,arguments)}catch(B){console.error("THREE.WebGLState:",B)}}function Ue(){try{r.compressedTexSubImage3D.apply(r,arguments)}catch(B){console.error("THREE.WebGLState:",B)}}function Ee(){try{r.texStorage2D.apply(r,arguments)}catch(B){console.error("THREE.WebGLState:",B)}}function ze(){try{r.texStorage3D.apply(r,arguments)}catch(B){console.error("THREE.WebGLState:",B)}}function Xe(){try{r.texImage2D.apply(r,arguments)}catch(B){console.error("THREE.WebGLState:",B)}}function ke(){try{r.texImage3D.apply(r,arguments)}catch(B){console.error("THREE.WebGLState:",B)}}function st(B){Pe.equals(B)===!1&&(r.scissor(B.x,B.y,B.z,B.w),Pe.copy(B))}function St(B){Ge.equals(B)===!1&&(r.viewport(B.x,B.y,B.z,B.w),Ge.copy(B))}function Tt(B,Ne){let Oe=g.get(Ne);Oe===void 0&&(Oe=new WeakMap,g.set(Ne,Oe));let Ze=Oe.get(B);Ze===void 0&&(Ze=r.getUniformBlockIndex(Ne,B.name),Oe.set(B,Ze))}function mt(B,Ne){const Ze=g.get(Ne).get(B);p.get(Ne)!==Ze&&(r.uniformBlockBinding(Ne,Ze,B.__bindingPointIndex),p.set(Ne,Ze))}function bt(){r.disable(r.BLEND),r.disable(r.CULL_FACE),r.disable(r.DEPTH_TEST),r.disable(r.POLYGON_OFFSET_FILL),r.disable(r.SCISSOR_TEST),r.disable(r.STENCIL_TEST),r.disable(r.SAMPLE_ALPHA_TO_COVERAGE),r.blendEquation(r.FUNC_ADD),r.blendFunc(r.ONE,r.ZERO),r.blendFuncSeparate(r.ONE,r.ZERO,r.ONE,r.ZERO),r.blendColor(0,0,0,0),r.colorMask(!0,!0,!0,!0),r.clearColor(0,0,0,0),r.depthMask(!0),r.depthFunc(r.LESS),r.clearDepth(1),r.stencilMask(4294967295),r.stencilFunc(r.ALWAYS,0,4294967295),r.stencilOp(r.KEEP,r.KEEP,r.KEEP),r.clearStencil(0),r.cullFace(r.BACK),r.frontFace(r.CCW),r.polygonOffset(0,0),r.activeTexture(r.TEXTURE0),r.bindFramebuffer(r.FRAMEBUFFER,null),n===!0&&(r.bindFramebuffer(r.DRAW_FRAMEBUFFER,null),r.bindFramebuffer(r.READ_FRAMEBUFFER,null)),r.useProgram(null),r.lineWidth(1),r.scissor(0,0,r.canvas.width,r.canvas.height),r.viewport(0,0,r.canvas.width,r.canvas.height),d={},Se=null,Ve={},m={},_=new WeakMap,y=[],v=null,x=!1,w=null,M=null,E=null,O=null,P=null,U=null,V=null,se=new qe(0,0,0),T=0,N=!1,ne=null,Te=null,H=null,re=null,Q=null,Pe.set(0,0,r.canvas.width,r.canvas.height),Ge.set(0,0,r.canvas.width,r.canvas.height),c.reset(),u.reset(),h.reset()}return{buffers:{color:c,depth:u,stencil:h},enable:$,disable:ue,bindFramebuffer:me,drawBuffers:I,useProgram:ge,setBlending:j,setMaterial:Ce,setFlipSided:Re,setCullFace:R,setLineWidth:A,setPolygonOffset:k,setScissorTest:ie,activeTexture:te,bindTexture:de,unbindTexture:oe,compressedTexImage2D:xe,compressedTexImage3D:pe,texImage2D:Xe,texImage3D:ke,updateUBOMapping:Tt,uniformBlockBinding:mt,texStorage2D:Ee,texStorage3D:ze,texSubImage2D:_e,texSubImage3D:Fe,compressedTexSubImage2D:q,compressedTexSubImage3D:Ue,scissor:st,viewport:St,reset:bt}}function TI(r,e,t,n,i,s,o){const c=i.isWebGL2,u=e.has("WEBGL_multisampled_render_to_texture")?e.get("WEBGL_multisampled_render_to_texture"):null,h=typeof navigator>"u"?!1:/OculusBrowser/g.test(navigator.userAgent),p=new WeakMap;let g;const d=new WeakMap;let m=!1;try{m=typeof OffscreenCanvas<"u"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch{}function _(R,A){return m?new OffscreenCanvas(R,A):No("canvas")}function y(R,A,k,ie){let te=1;if((R.width>ie||R.height>ie)&&(te=ie/Math.max(R.width,R.height)),te<1||A===!0)if(typeof HTMLImageElement<"u"&&R instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&R instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&R instanceof ImageBitmap){const de=A?Qc:Math.floor,oe=de(te*R.width),xe=de(te*R.height);g===void 0&&(g=_(oe,xe));const pe=k?_(oe,xe):g;return pe.width=oe,pe.height=xe,pe.getContext("2d").drawImage(R,0,0,oe,xe),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+R.width+"x"+R.height+") to ("+oe+"x"+xe+")."),pe}else return"data"in R&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+R.width+"x"+R.height+")."),R;return R}function v(R){return Ed(R.width)&&Ed(R.height)}function x(R){return c?!1:R.wrapS!==Tn||R.wrapT!==Tn||R.minFilter!==sn&&R.minFilter!==$t}function w(R,A){return R.generateMipmaps&&A&&R.minFilter!==sn&&R.minFilter!==$t}function M(R){r.generateMipmap(R)}function E(R,A,k,ie,te=!1){if(c===!1)return A;if(R!==null){if(r[R]!==void 0)return r[R];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+R+"'")}let de=A;if(A===r.RED&&(k===r.FLOAT&&(de=r.R32F),k===r.HALF_FLOAT&&(de=r.R16F),k===r.UNSIGNED_BYTE&&(de=r.R8)),A===r.RED_INTEGER&&(k===r.UNSIGNED_BYTE&&(de=r.R8UI),k===r.UNSIGNED_SHORT&&(de=r.R16UI),k===r.UNSIGNED_INT&&(de=r.R32UI),k===r.BYTE&&(de=r.R8I),k===r.SHORT&&(de=r.R16I),k===r.INT&&(de=r.R32I)),A===r.RG&&(k===r.FLOAT&&(de=r.RG32F),k===r.HALF_FLOAT&&(de=r.RG16F),k===r.UNSIGNED_BYTE&&(de=r.RG8)),A===r.RGBA){const oe=te?Lo:Ut.getTransfer(ie);k===r.FLOAT&&(de=r.RGBA32F),k===r.HALF_FLOAT&&(de=r.RGBA16F),k===r.UNSIGNED_BYTE&&(de=oe===Gt?r.SRGB8_ALPHA8:r.RGBA8),k===r.UNSIGNED_SHORT_4_4_4_4&&(de=r.RGBA4),k===r.UNSIGNED_SHORT_5_5_5_1&&(de=r.RGB5_A1)}return(de===r.R16F||de===r.R32F||de===r.RG16F||de===r.RG32F||de===r.RGBA16F||de===r.RGBA32F)&&e.get("EXT_color_buffer_float"),de}function O(R,A,k){return w(R,k)===!0||R.isFramebufferTexture&&R.minFilter!==sn&&R.minFilter!==$t?Math.log2(Math.max(A.width,A.height))+1:R.mipmaps!==void 0&&R.mipmaps.length>0?R.mipmaps.length:R.isCompressedTexture&&Array.isArray(R.image)?A.mipmaps.length:1}function P(R){return R===sn||R===Kc||R===ds?r.NEAREST:r.LINEAR}function U(R){const A=R.target;A.removeEventListener("dispose",U),se(A),A.isVideoTexture&&p.delete(A)}function V(R){const A=R.target;A.removeEventListener("dispose",V),N(A)}function se(R){const A=n.get(R);if(A.__webglInit===void 0)return;const k=R.source,ie=d.get(k);if(ie){const te=ie[A.__cacheKey];te.usedTimes--,te.usedTimes===0&&T(R),Object.keys(ie).length===0&&d.delete(k)}n.remove(R)}function T(R){const A=n.get(R);r.deleteTexture(A.__webglTexture);const k=R.source,ie=d.get(k);delete ie[A.__cacheKey],o.memory.textures--}function N(R){const A=R.texture,k=n.get(R),ie=n.get(A);if(ie.__webglTexture!==void 0&&(r.deleteTexture(ie.__webglTexture),o.memory.textures--),R.depthTexture&&R.depthTexture.dispose(),R.isWebGLCubeRenderTarget)for(let te=0;te<6;te++){if(Array.isArray(k.__webglFramebuffer[te]))for(let de=0;de<k.__webglFramebuffer[te].length;de++)r.deleteFramebuffer(k.__webglFramebuffer[te][de]);else r.deleteFramebuffer(k.__webglFramebuffer[te]);k.__webglDepthbuffer&&r.deleteRenderbuffer(k.__webglDepthbuffer[te])}else{if(Array.isArray(k.__webglFramebuffer))for(let te=0;te<k.__webglFramebuffer.length;te++)r.deleteFramebuffer(k.__webglFramebuffer[te]);else r.deleteFramebuffer(k.__webglFramebuffer);if(k.__webglDepthbuffer&&r.deleteRenderbuffer(k.__webglDepthbuffer),k.__webglMultisampledFramebuffer&&r.deleteFramebuffer(k.__webglMultisampledFramebuffer),k.__webglColorRenderbuffer)for(let te=0;te<k.__webglColorRenderbuffer.length;te++)k.__webglColorRenderbuffer[te]&&r.deleteRenderbuffer(k.__webglColorRenderbuffer[te]);k.__webglDepthRenderbuffer&&r.deleteRenderbuffer(k.__webglDepthRenderbuffer)}if(R.isWebGLMultipleRenderTargets)for(let te=0,de=A.length;te<de;te++){const oe=n.get(A[te]);oe.__webglTexture&&(r.deleteTexture(oe.__webglTexture),o.memory.textures--),n.remove(A[te])}n.remove(A),n.remove(R)}let ne=0;function Te(){ne=0}function H(){const R=ne;return R>=i.maxTextures&&console.warn("THREE.WebGLTextures: Trying to use "+R+" texture units while this GPU supports only "+i.maxTextures),ne+=1,R}function re(R){const A=[];return A.push(R.wrapS),A.push(R.wrapT),A.push(R.wrapR||0),A.push(R.magFilter),A.push(R.minFilter),A.push(R.anisotropy),A.push(R.internalFormat),A.push(R.format),A.push(R.type),A.push(R.generateMipmaps),A.push(R.premultiplyAlpha),A.push(R.flipY),A.push(R.unpackAlignment),A.push(R.colorSpace),A.join()}function Q(R,A){const k=n.get(R);if(R.isVideoTexture&&Ce(R),R.isRenderTargetTexture===!1&&R.version>0&&k.__version!==R.version){const ie=R.image;if(ie===null)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else if(ie.complete===!1)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{Pe(k,R,A);return}}t.bindTexture(r.TEXTURE_2D,k.__webglTexture,r.TEXTURE0+A)}function Me(R,A){const k=n.get(R);if(R.version>0&&k.__version!==R.version){Pe(k,R,A);return}t.bindTexture(r.TEXTURE_2D_ARRAY,k.__webglTexture,r.TEXTURE0+A)}function ve(R,A){const k=n.get(R);if(R.version>0&&k.__version!==R.version){Pe(k,R,A);return}t.bindTexture(r.TEXTURE_3D,k.__webglTexture,r.TEXTURE0+A)}function be(R,A){const k=n.get(R);if(R.version>0&&k.__version!==R.version){Ge(k,R,A);return}t.bindTexture(r.TEXTURE_CUBE_MAP,k.__webglTexture,r.TEXTURE0+A)}const Ie={[Eo]:r.REPEAT,[Tn]:r.CLAMP_TO_EDGE,[Ao]:r.MIRRORED_REPEAT},Se={[sn]:r.NEAREST,[Kc]:r.NEAREST_MIPMAP_NEAREST,[ds]:r.NEAREST_MIPMAP_LINEAR,[$t]:r.LINEAR,[vo]:r.LINEAR_MIPMAP_NEAREST,[zi]:r.LINEAR_MIPMAP_LINEAR},Ve={[tx]:r.NEVER,[ox]:r.ALWAYS,[nx]:r.LESS,[jd]:r.LEQUAL,[ix]:r.EQUAL,[ax]:r.GEQUAL,[rx]:r.GREATER,[sx]:r.NOTEQUAL};function je(R,A,k){if(A.type===xi&&e.has("OES_texture_float_linear")===!1&&(A.magFilter===$t||A.magFilter===vo||A.magFilter===ds||A.magFilter===zi||A.minFilter===$t||A.minFilter===vo||A.minFilter===ds||A.minFilter===zi)&&console.warn("THREE.WebGLRenderer: Unable to use linear filtering with floating point textures. OES_texture_float_linear not supported on this device."),k?(r.texParameteri(R,r.TEXTURE_WRAP_S,Ie[A.wrapS]),r.texParameteri(R,r.TEXTURE_WRAP_T,Ie[A.wrapT]),(R===r.TEXTURE_3D||R===r.TEXTURE_2D_ARRAY)&&r.texParameteri(R,r.TEXTURE_WRAP_R,Ie[A.wrapR]),r.texParameteri(R,r.TEXTURE_MAG_FILTER,Se[A.magFilter]),r.texParameteri(R,r.TEXTURE_MIN_FILTER,Se[A.minFilter])):(r.texParameteri(R,r.TEXTURE_WRAP_S,r.CLAMP_TO_EDGE),r.texParameteri(R,r.TEXTURE_WRAP_T,r.CLAMP_TO_EDGE),(R===r.TEXTURE_3D||R===r.TEXTURE_2D_ARRAY)&&r.texParameteri(R,r.TEXTURE_WRAP_R,r.CLAMP_TO_EDGE),(A.wrapS!==Tn||A.wrapT!==Tn)&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),r.texParameteri(R,r.TEXTURE_MAG_FILTER,P(A.magFilter)),r.texParameteri(R,r.TEXTURE_MIN_FILTER,P(A.minFilter)),A.minFilter!==sn&&A.minFilter!==$t&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")),A.compareFunction&&(r.texParameteri(R,r.TEXTURE_COMPARE_MODE,r.COMPARE_REF_TO_TEXTURE),r.texParameteri(R,r.TEXTURE_COMPARE_FUNC,Ve[A.compareFunction])),e.has("EXT_texture_filter_anisotropic")===!0){const ie=e.get("EXT_texture_filter_anisotropic");if(A.magFilter===sn||A.minFilter!==ds&&A.minFilter!==zi||A.type===xi&&e.has("OES_texture_float_linear")===!1||c===!1&&A.type===Ea&&e.has("OES_texture_half_float_linear")===!1)return;(A.anisotropy>1||n.get(A).__currentAnisotropy)&&(r.texParameterf(R,ie.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(A.anisotropy,i.getMaxAnisotropy())),n.get(A).__currentAnisotropy=A.anisotropy)}}function he(R,A){let k=!1;R.__webglInit===void 0&&(R.__webglInit=!0,A.addEventListener("dispose",U));const ie=A.source;let te=d.get(ie);te===void 0&&(te={},d.set(ie,te));const de=re(A);if(de!==R.__cacheKey){te[de]===void 0&&(te[de]={texture:r.createTexture(),usedTimes:0},o.memory.textures++,k=!0),te[de].usedTimes++;const oe=te[R.__cacheKey];oe!==void 0&&(te[R.__cacheKey].usedTimes--,oe.usedTimes===0&&T(A)),R.__cacheKey=de,R.__webglTexture=te[de].texture}return k}function Pe(R,A,k){let ie=r.TEXTURE_2D;(A.isDataArrayTexture||A.isCompressedArrayTexture)&&(ie=r.TEXTURE_2D_ARRAY),A.isData3DTexture&&(ie=r.TEXTURE_3D);const te=he(R,A),de=A.source;t.bindTexture(ie,R.__webglTexture,r.TEXTURE0+k);const oe=n.get(de);if(de.version!==oe.__version||te===!0){t.activeTexture(r.TEXTURE0+k);const xe=Ut.getPrimaries(Ut.workingColorSpace),pe=A.colorSpace===si?null:Ut.getPrimaries(A.colorSpace),_e=A.colorSpace===si||xe===pe?r.NONE:r.BROWSER_DEFAULT_WEBGL;r.pixelStorei(r.UNPACK_FLIP_Y_WEBGL,A.flipY),r.pixelStorei(r.UNPACK_PREMULTIPLY_ALPHA_WEBGL,A.premultiplyAlpha),r.pixelStorei(r.UNPACK_ALIGNMENT,A.unpackAlignment),r.pixelStorei(r.UNPACK_COLORSPACE_CONVERSION_WEBGL,_e);const Fe=x(A)&&v(A.image)===!1;let q=y(A.image,Fe,!1,i.maxTextureSize);q=Re(A,q);const Ue=v(q)||c,Ee=s.convert(A.format,A.colorSpace);let ze=s.convert(A.type),Xe=E(A.internalFormat,Ee,ze,A.colorSpace,A.isVideoTexture);je(ie,A,Ue);let ke;const st=A.mipmaps,St=c&&A.isVideoTexture!==!0&&Xe!==Zd,Tt=oe.__version===void 0||te===!0,mt=de.dataReady,bt=O(A,q,Ue);if(A.isDepthTexture)Xe=r.DEPTH_COMPONENT,c?A.type===xi?Xe=r.DEPTH_COMPONENT32F:A.type===or?Xe=r.DEPTH_COMPONENT24:A.type===Or?Xe=r.DEPTH24_STENCIL8:Xe=r.DEPTH_COMPONENT16:A.type===xi&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),A.format===Fr&&Xe===r.DEPTH_COMPONENT&&A.type!==su&&A.type!==or&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),A.type=or,ze=s.convert(A.type)),A.format===ws&&Xe===r.DEPTH_COMPONENT&&(Xe=r.DEPTH_STENCIL,A.type!==Or&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),A.type=Or,ze=s.convert(A.type))),Tt&&(St?t.texStorage2D(r.TEXTURE_2D,1,Xe,q.width,q.height):t.texImage2D(r.TEXTURE_2D,0,Xe,q.width,q.height,0,Ee,ze,null));else if(A.isDataTexture)if(st.length>0&&Ue){St&&Tt&&t.texStorage2D(r.TEXTURE_2D,bt,Xe,st[0].width,st[0].height);for(let B=0,Ne=st.length;B<Ne;B++)ke=st[B],St?mt&&t.texSubImage2D(r.TEXTURE_2D,B,0,0,ke.width,ke.height,Ee,ze,ke.data):t.texImage2D(r.TEXTURE_2D,B,Xe,ke.width,ke.height,0,Ee,ze,ke.data);A.generateMipmaps=!1}else St?(Tt&&t.texStorage2D(r.TEXTURE_2D,bt,Xe,q.width,q.height),mt&&t.texSubImage2D(r.TEXTURE_2D,0,0,0,q.width,q.height,Ee,ze,q.data)):t.texImage2D(r.TEXTURE_2D,0,Xe,q.width,q.height,0,Ee,ze,q.data);else if(A.isCompressedTexture)if(A.isCompressedArrayTexture){St&&Tt&&t.texStorage3D(r.TEXTURE_2D_ARRAY,bt,Xe,st[0].width,st[0].height,q.depth);for(let B=0,Ne=st.length;B<Ne;B++)ke=st[B],A.format!==Yn?Ee!==null?St?mt&&t.compressedTexSubImage3D(r.TEXTURE_2D_ARRAY,B,0,0,0,ke.width,ke.height,q.depth,Ee,ke.data,0,0):t.compressedTexImage3D(r.TEXTURE_2D_ARRAY,B,Xe,ke.width,ke.height,q.depth,0,ke.data,0,0):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):St?mt&&t.texSubImage3D(r.TEXTURE_2D_ARRAY,B,0,0,0,ke.width,ke.height,q.depth,Ee,ze,ke.data):t.texImage3D(r.TEXTURE_2D_ARRAY,B,Xe,ke.width,ke.height,q.depth,0,Ee,ze,ke.data)}else{St&&Tt&&t.texStorage2D(r.TEXTURE_2D,bt,Xe,st[0].width,st[0].height);for(let B=0,Ne=st.length;B<Ne;B++)ke=st[B],A.format!==Yn?Ee!==null?St?mt&&t.compressedTexSubImage2D(r.TEXTURE_2D,B,0,0,ke.width,ke.height,Ee,ke.data):t.compressedTexImage2D(r.TEXTURE_2D,B,Xe,ke.width,ke.height,0,ke.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):St?mt&&t.texSubImage2D(r.TEXTURE_2D,B,0,0,ke.width,ke.height,Ee,ze,ke.data):t.texImage2D(r.TEXTURE_2D,B,Xe,ke.width,ke.height,0,Ee,ze,ke.data)}else if(A.isDataArrayTexture)St?(Tt&&t.texStorage3D(r.TEXTURE_2D_ARRAY,bt,Xe,q.width,q.height,q.depth),mt&&t.texSubImage3D(r.TEXTURE_2D_ARRAY,0,0,0,0,q.width,q.height,q.depth,Ee,ze,q.data)):t.texImage3D(r.TEXTURE_2D_ARRAY,0,Xe,q.width,q.height,q.depth,0,Ee,ze,q.data);else if(A.isData3DTexture)St?(Tt&&t.texStorage3D(r.TEXTURE_3D,bt,Xe,q.width,q.height,q.depth),mt&&t.texSubImage3D(r.TEXTURE_3D,0,0,0,0,q.width,q.height,q.depth,Ee,ze,q.data)):t.texImage3D(r.TEXTURE_3D,0,Xe,q.width,q.height,q.depth,0,Ee,ze,q.data);else if(A.isFramebufferTexture){if(Tt)if(St)t.texStorage2D(r.TEXTURE_2D,bt,Xe,q.width,q.height);else{let B=q.width,Ne=q.height;for(let Oe=0;Oe<bt;Oe++)t.texImage2D(r.TEXTURE_2D,Oe,Xe,B,Ne,0,Ee,ze,null),B>>=1,Ne>>=1}}else if(st.length>0&&Ue){St&&Tt&&t.texStorage2D(r.TEXTURE_2D,bt,Xe,st[0].width,st[0].height);for(let B=0,Ne=st.length;B<Ne;B++)ke=st[B],St?mt&&t.texSubImage2D(r.TEXTURE_2D,B,0,0,Ee,ze,ke):t.texImage2D(r.TEXTURE_2D,B,Xe,Ee,ze,ke);A.generateMipmaps=!1}else St?(Tt&&t.texStorage2D(r.TEXTURE_2D,bt,Xe,q.width,q.height),mt&&t.texSubImage2D(r.TEXTURE_2D,0,0,0,Ee,ze,q)):t.texImage2D(r.TEXTURE_2D,0,Xe,Ee,ze,q);w(A,Ue)&&M(ie),oe.__version=de.version,A.onUpdate&&A.onUpdate(A)}R.__version=A.version}function Ge(R,A,k){if(A.image.length!==6)return;const ie=he(R,A),te=A.source;t.bindTexture(r.TEXTURE_CUBE_MAP,R.__webglTexture,r.TEXTURE0+k);const de=n.get(te);if(te.version!==de.__version||ie===!0){t.activeTexture(r.TEXTURE0+k);const oe=Ut.getPrimaries(Ut.workingColorSpace),xe=A.colorSpace===si?null:Ut.getPrimaries(A.colorSpace),pe=A.colorSpace===si||oe===xe?r.NONE:r.BROWSER_DEFAULT_WEBGL;r.pixelStorei(r.UNPACK_FLIP_Y_WEBGL,A.flipY),r.pixelStorei(r.UNPACK_PREMULTIPLY_ALPHA_WEBGL,A.premultiplyAlpha),r.pixelStorei(r.UNPACK_ALIGNMENT,A.unpackAlignment),r.pixelStorei(r.UNPACK_COLORSPACE_CONVERSION_WEBGL,pe);const _e=A.isCompressedTexture||A.image[0].isCompressedTexture,Fe=A.image[0]&&A.image[0].isDataTexture,q=[];for(let B=0;B<6;B++)!_e&&!Fe?q[B]=y(A.image[B],!1,!0,i.maxCubemapSize):q[B]=Fe?A.image[B].image:A.image[B],q[B]=Re(A,q[B]);const Ue=q[0],Ee=v(Ue)||c,ze=s.convert(A.format,A.colorSpace),Xe=s.convert(A.type),ke=E(A.internalFormat,ze,Xe,A.colorSpace),st=c&&A.isVideoTexture!==!0,St=de.__version===void 0||ie===!0,Tt=te.dataReady;let mt=O(A,Ue,Ee);je(r.TEXTURE_CUBE_MAP,A,Ee);let bt;if(_e){st&&St&&t.texStorage2D(r.TEXTURE_CUBE_MAP,mt,ke,Ue.width,Ue.height);for(let B=0;B<6;B++){bt=q[B].mipmaps;for(let Ne=0;Ne<bt.length;Ne++){const Oe=bt[Ne];A.format!==Yn?ze!==null?st?Tt&&t.compressedTexSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+B,Ne,0,0,Oe.width,Oe.height,ze,Oe.data):t.compressedTexImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+B,Ne,ke,Oe.width,Oe.height,0,Oe.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):st?Tt&&t.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+B,Ne,0,0,Oe.width,Oe.height,ze,Xe,Oe.data):t.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+B,Ne,ke,Oe.width,Oe.height,0,ze,Xe,Oe.data)}}}else{bt=A.mipmaps,st&&St&&(bt.length>0&&mt++,t.texStorage2D(r.TEXTURE_CUBE_MAP,mt,ke,q[0].width,q[0].height));for(let B=0;B<6;B++)if(Fe){st?Tt&&t.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+B,0,0,0,q[B].width,q[B].height,ze,Xe,q[B].data):t.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+B,0,ke,q[B].width,q[B].height,0,ze,Xe,q[B].data);for(let Ne=0;Ne<bt.length;Ne++){const Ze=bt[Ne].image[B].image;st?Tt&&t.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+B,Ne+1,0,0,Ze.width,Ze.height,ze,Xe,Ze.data):t.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+B,Ne+1,ke,Ze.width,Ze.height,0,ze,Xe,Ze.data)}}else{st?Tt&&t.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+B,0,0,0,ze,Xe,q[B]):t.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+B,0,ke,ze,Xe,q[B]);for(let Ne=0;Ne<bt.length;Ne++){const Oe=bt[Ne];st?Tt&&t.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+B,Ne+1,0,0,ze,Xe,Oe.image[B]):t.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+B,Ne+1,ke,ze,Xe,Oe.image[B])}}}w(A,Ee)&&M(r.TEXTURE_CUBE_MAP),de.__version=te.version,A.onUpdate&&A.onUpdate(A)}R.__version=A.version}function X(R,A,k,ie,te,de){const oe=s.convert(k.format,k.colorSpace),xe=s.convert(k.type),pe=E(k.internalFormat,oe,xe,k.colorSpace);if(!n.get(A).__hasExternalTextures){const Fe=Math.max(1,A.width>>de),q=Math.max(1,A.height>>de);te===r.TEXTURE_3D||te===r.TEXTURE_2D_ARRAY?t.texImage3D(te,de,pe,Fe,q,A.depth,0,oe,xe,null):t.texImage2D(te,de,pe,Fe,q,0,oe,xe,null)}t.bindFramebuffer(r.FRAMEBUFFER,R),j(A)?u.framebufferTexture2DMultisampleEXT(r.FRAMEBUFFER,ie,te,n.get(k).__webglTexture,0,ee(A)):(te===r.TEXTURE_2D||te>=r.TEXTURE_CUBE_MAP_POSITIVE_X&&te<=r.TEXTURE_CUBE_MAP_NEGATIVE_Z)&&r.framebufferTexture2D(r.FRAMEBUFFER,ie,te,n.get(k).__webglTexture,de),t.bindFramebuffer(r.FRAMEBUFFER,null)}function Z(R,A,k){if(r.bindRenderbuffer(r.RENDERBUFFER,R),A.depthBuffer&&!A.stencilBuffer){let ie=c===!0?r.DEPTH_COMPONENT24:r.DEPTH_COMPONENT16;if(k||j(A)){const te=A.depthTexture;te&&te.isDepthTexture&&(te.type===xi?ie=r.DEPTH_COMPONENT32F:te.type===or&&(ie=r.DEPTH_COMPONENT24));const de=ee(A);j(A)?u.renderbufferStorageMultisampleEXT(r.RENDERBUFFER,de,ie,A.width,A.height):r.renderbufferStorageMultisample(r.RENDERBUFFER,de,ie,A.width,A.height)}else r.renderbufferStorage(r.RENDERBUFFER,ie,A.width,A.height);r.framebufferRenderbuffer(r.FRAMEBUFFER,r.DEPTH_ATTACHMENT,r.RENDERBUFFER,R)}else if(A.depthBuffer&&A.stencilBuffer){const ie=ee(A);k&&j(A)===!1?r.renderbufferStorageMultisample(r.RENDERBUFFER,ie,r.DEPTH24_STENCIL8,A.width,A.height):j(A)?u.renderbufferStorageMultisampleEXT(r.RENDERBUFFER,ie,r.DEPTH24_STENCIL8,A.width,A.height):r.renderbufferStorage(r.RENDERBUFFER,r.DEPTH_STENCIL,A.width,A.height),r.framebufferRenderbuffer(r.FRAMEBUFFER,r.DEPTH_STENCIL_ATTACHMENT,r.RENDERBUFFER,R)}else{const ie=A.isWebGLMultipleRenderTargets===!0?A.texture:[A.texture];for(let te=0;te<ie.length;te++){const de=ie[te],oe=s.convert(de.format,de.colorSpace),xe=s.convert(de.type),pe=E(de.internalFormat,oe,xe,de.colorSpace),_e=ee(A);k&&j(A)===!1?r.renderbufferStorageMultisample(r.RENDERBUFFER,_e,pe,A.width,A.height):j(A)?u.renderbufferStorageMultisampleEXT(r.RENDERBUFFER,_e,pe,A.width,A.height):r.renderbufferStorage(r.RENDERBUFFER,pe,A.width,A.height)}}r.bindRenderbuffer(r.RENDERBUFFER,null)}function $(R,A){if(A&&A.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(t.bindFramebuffer(r.FRAMEBUFFER,R),!(A.depthTexture&&A.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");(!n.get(A.depthTexture).__webglTexture||A.depthTexture.image.width!==A.width||A.depthTexture.image.height!==A.height)&&(A.depthTexture.image.width=A.width,A.depthTexture.image.height=A.height,A.depthTexture.needsUpdate=!0),Q(A.depthTexture,0);const ie=n.get(A.depthTexture).__webglTexture,te=ee(A);if(A.depthTexture.format===Fr)j(A)?u.framebufferTexture2DMultisampleEXT(r.FRAMEBUFFER,r.DEPTH_ATTACHMENT,r.TEXTURE_2D,ie,0,te):r.framebufferTexture2D(r.FRAMEBUFFER,r.DEPTH_ATTACHMENT,r.TEXTURE_2D,ie,0);else if(A.depthTexture.format===ws)j(A)?u.framebufferTexture2DMultisampleEXT(r.FRAMEBUFFER,r.DEPTH_STENCIL_ATTACHMENT,r.TEXTURE_2D,ie,0,te):r.framebufferTexture2D(r.FRAMEBUFFER,r.DEPTH_STENCIL_ATTACHMENT,r.TEXTURE_2D,ie,0);else throw new Error("Unknown depthTexture format")}function ue(R){const A=n.get(R),k=R.isWebGLCubeRenderTarget===!0;if(R.depthTexture&&!A.__autoAllocateDepthBuffer){if(k)throw new Error("target.depthTexture not supported in Cube render targets");$(A.__webglFramebuffer,R)}else if(k){A.__webglDepthbuffer=[];for(let ie=0;ie<6;ie++)t.bindFramebuffer(r.FRAMEBUFFER,A.__webglFramebuffer[ie]),A.__webglDepthbuffer[ie]=r.createRenderbuffer(),Z(A.__webglDepthbuffer[ie],R,!1)}else t.bindFramebuffer(r.FRAMEBUFFER,A.__webglFramebuffer),A.__webglDepthbuffer=r.createRenderbuffer(),Z(A.__webglDepthbuffer,R,!1);t.bindFramebuffer(r.FRAMEBUFFER,null)}function me(R,A,k){const ie=n.get(R);A!==void 0&&X(ie.__webglFramebuffer,R,R.texture,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,0),k!==void 0&&ue(R)}function I(R){const A=R.texture,k=n.get(R),ie=n.get(A);R.addEventListener("dispose",V),R.isWebGLMultipleRenderTargets!==!0&&(ie.__webglTexture===void 0&&(ie.__webglTexture=r.createTexture()),ie.__version=A.version,o.memory.textures++);const te=R.isWebGLCubeRenderTarget===!0,de=R.isWebGLMultipleRenderTargets===!0,oe=v(R)||c;if(te){k.__webglFramebuffer=[];for(let xe=0;xe<6;xe++)if(c&&A.mipmaps&&A.mipmaps.length>0){k.__webglFramebuffer[xe]=[];for(let pe=0;pe<A.mipmaps.length;pe++)k.__webglFramebuffer[xe][pe]=r.createFramebuffer()}else k.__webglFramebuffer[xe]=r.createFramebuffer()}else{if(c&&A.mipmaps&&A.mipmaps.length>0){k.__webglFramebuffer=[];for(let xe=0;xe<A.mipmaps.length;xe++)k.__webglFramebuffer[xe]=r.createFramebuffer()}else k.__webglFramebuffer=r.createFramebuffer();if(de)if(i.drawBuffers){const xe=R.texture;for(let pe=0,_e=xe.length;pe<_e;pe++){const Fe=n.get(xe[pe]);Fe.__webglTexture===void 0&&(Fe.__webglTexture=r.createTexture(),o.memory.textures++)}}else console.warn("THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.");if(c&&R.samples>0&&j(R)===!1){const xe=de?A:[A];k.__webglMultisampledFramebuffer=r.createFramebuffer(),k.__webglColorRenderbuffer=[],t.bindFramebuffer(r.FRAMEBUFFER,k.__webglMultisampledFramebuffer);for(let pe=0;pe<xe.length;pe++){const _e=xe[pe];k.__webglColorRenderbuffer[pe]=r.createRenderbuffer(),r.bindRenderbuffer(r.RENDERBUFFER,k.__webglColorRenderbuffer[pe]);const Fe=s.convert(_e.format,_e.colorSpace),q=s.convert(_e.type),Ue=E(_e.internalFormat,Fe,q,_e.colorSpace,R.isXRRenderTarget===!0),Ee=ee(R);r.renderbufferStorageMultisample(r.RENDERBUFFER,Ee,Ue,R.width,R.height),r.framebufferRenderbuffer(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0+pe,r.RENDERBUFFER,k.__webglColorRenderbuffer[pe])}r.bindRenderbuffer(r.RENDERBUFFER,null),R.depthBuffer&&(k.__webglDepthRenderbuffer=r.createRenderbuffer(),Z(k.__webglDepthRenderbuffer,R,!0)),t.bindFramebuffer(r.FRAMEBUFFER,null)}}if(te){t.bindTexture(r.TEXTURE_CUBE_MAP,ie.__webglTexture),je(r.TEXTURE_CUBE_MAP,A,oe);for(let xe=0;xe<6;xe++)if(c&&A.mipmaps&&A.mipmaps.length>0)for(let pe=0;pe<A.mipmaps.length;pe++)X(k.__webglFramebuffer[xe][pe],R,A,r.COLOR_ATTACHMENT0,r.TEXTURE_CUBE_MAP_POSITIVE_X+xe,pe);else X(k.__webglFramebuffer[xe],R,A,r.COLOR_ATTACHMENT0,r.TEXTURE_CUBE_MAP_POSITIVE_X+xe,0);w(A,oe)&&M(r.TEXTURE_CUBE_MAP),t.unbindTexture()}else if(de){const xe=R.texture;for(let pe=0,_e=xe.length;pe<_e;pe++){const Fe=xe[pe],q=n.get(Fe);t.bindTexture(r.TEXTURE_2D,q.__webglTexture),je(r.TEXTURE_2D,Fe,oe),X(k.__webglFramebuffer,R,Fe,r.COLOR_ATTACHMENT0+pe,r.TEXTURE_2D,0),w(Fe,oe)&&M(r.TEXTURE_2D)}t.unbindTexture()}else{let xe=r.TEXTURE_2D;if((R.isWebGL3DRenderTarget||R.isWebGLArrayRenderTarget)&&(c?xe=R.isWebGL3DRenderTarget?r.TEXTURE_3D:r.TEXTURE_2D_ARRAY:console.error("THREE.WebGLTextures: THREE.Data3DTexture and THREE.DataArrayTexture only supported with WebGL2.")),t.bindTexture(xe,ie.__webglTexture),je(xe,A,oe),c&&A.mipmaps&&A.mipmaps.length>0)for(let pe=0;pe<A.mipmaps.length;pe++)X(k.__webglFramebuffer[pe],R,A,r.COLOR_ATTACHMENT0,xe,pe);else X(k.__webglFramebuffer,R,A,r.COLOR_ATTACHMENT0,xe,0);w(A,oe)&&M(xe),t.unbindTexture()}R.depthBuffer&&ue(R)}function ge(R){const A=v(R)||c,k=R.isWebGLMultipleRenderTargets===!0?R.texture:[R.texture];for(let ie=0,te=k.length;ie<te;ie++){const de=k[ie];if(w(de,A)){const oe=R.isWebGLCubeRenderTarget?r.TEXTURE_CUBE_MAP:r.TEXTURE_2D,xe=n.get(de).__webglTexture;t.bindTexture(oe,xe),M(oe),t.unbindTexture()}}}function J(R){if(c&&R.samples>0&&j(R)===!1){const A=R.isWebGLMultipleRenderTargets?R.texture:[R.texture],k=R.width,ie=R.height;let te=r.COLOR_BUFFER_BIT;const de=[],oe=R.stencilBuffer?r.DEPTH_STENCIL_ATTACHMENT:r.DEPTH_ATTACHMENT,xe=n.get(R),pe=R.isWebGLMultipleRenderTargets===!0;if(pe)for(let _e=0;_e<A.length;_e++)t.bindFramebuffer(r.FRAMEBUFFER,xe.__webglMultisampledFramebuffer),r.framebufferRenderbuffer(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0+_e,r.RENDERBUFFER,null),t.bindFramebuffer(r.FRAMEBUFFER,xe.__webglFramebuffer),r.framebufferTexture2D(r.DRAW_FRAMEBUFFER,r.COLOR_ATTACHMENT0+_e,r.TEXTURE_2D,null,0);t.bindFramebuffer(r.READ_FRAMEBUFFER,xe.__webglMultisampledFramebuffer),t.bindFramebuffer(r.DRAW_FRAMEBUFFER,xe.__webglFramebuffer);for(let _e=0;_e<A.length;_e++){de.push(r.COLOR_ATTACHMENT0+_e),R.depthBuffer&&de.push(oe);const Fe=xe.__ignoreDepthValues!==void 0?xe.__ignoreDepthValues:!1;if(Fe===!1&&(R.depthBuffer&&(te|=r.DEPTH_BUFFER_BIT),R.stencilBuffer&&(te|=r.STENCIL_BUFFER_BIT)),pe&&r.framebufferRenderbuffer(r.READ_FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.RENDERBUFFER,xe.__webglColorRenderbuffer[_e]),Fe===!0&&(r.invalidateFramebuffer(r.READ_FRAMEBUFFER,[oe]),r.invalidateFramebuffer(r.DRAW_FRAMEBUFFER,[oe])),pe){const q=n.get(A[_e]).__webglTexture;r.framebufferTexture2D(r.DRAW_FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,q,0)}r.blitFramebuffer(0,0,k,ie,0,0,k,ie,te,r.NEAREST),h&&r.invalidateFramebuffer(r.READ_FRAMEBUFFER,de)}if(t.bindFramebuffer(r.READ_FRAMEBUFFER,null),t.bindFramebuffer(r.DRAW_FRAMEBUFFER,null),pe)for(let _e=0;_e<A.length;_e++){t.bindFramebuffer(r.FRAMEBUFFER,xe.__webglMultisampledFramebuffer),r.framebufferRenderbuffer(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0+_e,r.RENDERBUFFER,xe.__webglColorRenderbuffer[_e]);const Fe=n.get(A[_e]).__webglTexture;t.bindFramebuffer(r.FRAMEBUFFER,xe.__webglFramebuffer),r.framebufferTexture2D(r.DRAW_FRAMEBUFFER,r.COLOR_ATTACHMENT0+_e,r.TEXTURE_2D,Fe,0)}t.bindFramebuffer(r.DRAW_FRAMEBUFFER,xe.__webglMultisampledFramebuffer)}}function ee(R){return Math.min(i.maxSamples,R.samples)}function j(R){const A=n.get(R);return c&&R.samples>0&&e.has("WEBGL_multisampled_render_to_texture")===!0&&A.__useRenderToTexture!==!1}function Ce(R){const A=o.render.frame;p.get(R)!==A&&(p.set(R,A),R.update())}function Re(R,A){const k=R.colorSpace,ie=R.format,te=R.type;return R.isCompressedTexture===!0||R.isVideoTexture===!0||R.format===jc||k!==Hi&&k!==si&&(Ut.getTransfer(k)===Gt?c===!1?e.has("EXT_sRGB")===!0&&ie===Yn?(R.format=jc,R.minFilter=$t,R.generateMipmaps=!1):A=ep.sRGBToLinear(A):(ie!==Yn||te!==hr)&&console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture color space:",k)),A}this.allocateTextureUnit=H,this.resetTextureUnits=Te,this.setTexture2D=Q,this.setTexture2DArray=Me,this.setTexture3D=ve,this.setTextureCube=be,this.rebindTextures=me,this.setupRenderTarget=I,this.updateRenderTargetMipmap=ge,this.updateMultisampleRenderTarget=J,this.setupDepthRenderbuffer=ue,this.setupFrameBufferTexture=X,this.useMultisampledRTT=j}function Mx(r,e,t){const n=t.isWebGL2;function i(s,o=si){let c;const u=Ut.getTransfer(o);if(s===hr)return r.UNSIGNED_BYTE;if(s===Wd)return r.UNSIGNED_SHORT_4_4_4_4;if(s===Xd)return r.UNSIGNED_SHORT_5_5_5_1;if(s===Gv)return r.BYTE;if(s===Hv)return r.SHORT;if(s===su)return r.UNSIGNED_SHORT;if(s===Vd)return r.INT;if(s===or)return r.UNSIGNED_INT;if(s===xi)return r.FLOAT;if(s===Ea)return n?r.HALF_FLOAT:(c=e.get("OES_texture_half_float"),c!==null?c.HALF_FLOAT_OES:null);if(s===Vv)return r.ALPHA;if(s===Yn)return r.RGBA;if(s===Wv)return r.LUMINANCE;if(s===Xv)return r.LUMINANCE_ALPHA;if(s===Fr)return r.DEPTH_COMPONENT;if(s===ws)return r.DEPTH_STENCIL;if(s===jc)return c=e.get("EXT_sRGB"),c!==null?c.SRGB_ALPHA_EXT:null;if(s===qv)return r.RED;if(s===qd)return r.RED_INTEGER;if(s===Yv)return r.RG;if(s===Yd)return r.RG_INTEGER;if(s===$d)return r.RGBA_INTEGER;if(s===zc||s===kc||s===Gc||s===Hc)if(u===Gt)if(c=e.get("WEBGL_compressed_texture_s3tc_srgb"),c!==null){if(s===zc)return c.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(s===kc)return c.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(s===Gc)return c.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(s===Hc)return c.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else return null;else if(c=e.get("WEBGL_compressed_texture_s3tc"),c!==null){if(s===zc)return c.COMPRESSED_RGB_S3TC_DXT1_EXT;if(s===kc)return c.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(s===Gc)return c.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(s===Hc)return c.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(s===jf||s===Qf||s===ed||s===td)if(c=e.get("WEBGL_compressed_texture_pvrtc"),c!==null){if(s===jf)return c.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(s===Qf)return c.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(s===ed)return c.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(s===td)return c.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(s===Zd)return c=e.get("WEBGL_compressed_texture_etc1"),c!==null?c.COMPRESSED_RGB_ETC1_WEBGL:null;if(s===nd||s===id)if(c=e.get("WEBGL_compressed_texture_etc"),c!==null){if(s===nd)return u===Gt?c.COMPRESSED_SRGB8_ETC2:c.COMPRESSED_RGB8_ETC2;if(s===id)return u===Gt?c.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:c.COMPRESSED_RGBA8_ETC2_EAC}else return null;if(s===rd||s===sd||s===ad||s===od||s===ld||s===cd||s===ud||s===hd||s===fd||s===dd||s===pd||s===md||s===gd||s===_d)if(c=e.get("WEBGL_compressed_texture_astc"),c!==null){if(s===rd)return u===Gt?c.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:c.COMPRESSED_RGBA_ASTC_4x4_KHR;if(s===sd)return u===Gt?c.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:c.COMPRESSED_RGBA_ASTC_5x4_KHR;if(s===ad)return u===Gt?c.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:c.COMPRESSED_RGBA_ASTC_5x5_KHR;if(s===od)return u===Gt?c.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:c.COMPRESSED_RGBA_ASTC_6x5_KHR;if(s===ld)return u===Gt?c.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:c.COMPRESSED_RGBA_ASTC_6x6_KHR;if(s===cd)return u===Gt?c.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:c.COMPRESSED_RGBA_ASTC_8x5_KHR;if(s===ud)return u===Gt?c.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:c.COMPRESSED_RGBA_ASTC_8x6_KHR;if(s===hd)return u===Gt?c.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:c.COMPRESSED_RGBA_ASTC_8x8_KHR;if(s===fd)return u===Gt?c.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:c.COMPRESSED_RGBA_ASTC_10x5_KHR;if(s===dd)return u===Gt?c.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:c.COMPRESSED_RGBA_ASTC_10x6_KHR;if(s===pd)return u===Gt?c.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:c.COMPRESSED_RGBA_ASTC_10x8_KHR;if(s===md)return u===Gt?c.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:c.COMPRESSED_RGBA_ASTC_10x10_KHR;if(s===gd)return u===Gt?c.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:c.COMPRESSED_RGBA_ASTC_12x10_KHR;if(s===_d)return u===Gt?c.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:c.COMPRESSED_RGBA_ASTC_12x12_KHR}else return null;if(s===Vc||s===vd||s===xd)if(c=e.get("EXT_texture_compression_bptc"),c!==null){if(s===Vc)return u===Gt?c.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:c.COMPRESSED_RGBA_BPTC_UNORM_EXT;if(s===vd)return c.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT;if(s===xd)return c.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT}else return null;if(s===$v||s===yd||s===bd||s===Md)if(c=e.get("EXT_texture_compression_rgtc"),c!==null){if(s===Vc)return c.COMPRESSED_RED_RGTC1_EXT;if(s===yd)return c.COMPRESSED_SIGNED_RED_RGTC1_EXT;if(s===bd)return c.COMPRESSED_RED_GREEN_RGTC2_EXT;if(s===Md)return c.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT}else return null;return s===Or?n?r.UNSIGNED_INT_24_8:(c=e.get("WEBGL_depth_texture"),c!==null?c.UNSIGNED_INT_24_8_WEBGL:null):r[s]!==void 0?r[s]:null}return{convert:i}}class Sx extends yn{constructor(e=[]){super(),this.isArrayCamera=!0,this.cameras=e}}class ba extends Ct{constructor(){super(),this.isGroup=!0,this.type="Group"}}const CI={type:"move"};class vf{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return this._hand===null&&(this._hand=new ba,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return this._targetRay===null&&(this._targetRay=new ba,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new F,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new F),this._targetRay}getGripSpace(){return this._grip===null&&(this._grip=new ba,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new F,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new F),this._grip}dispatchEvent(e){return this._targetRay!==null&&this._targetRay.dispatchEvent(e),this._grip!==null&&this._grip.dispatchEvent(e),this._hand!==null&&this._hand.dispatchEvent(e),this}connect(e){if(e&&e.hand){const t=this._hand;if(t)for(const n of e.hand.values())this._getHandJoint(t,n)}return this.dispatchEvent({type:"connected",data:e}),this}disconnect(e){return this.dispatchEvent({type:"disconnected",data:e}),this._targetRay!==null&&(this._targetRay.visible=!1),this._grip!==null&&(this._grip.visible=!1),this._hand!==null&&(this._hand.visible=!1),this}update(e,t,n){let i=null,s=null,o=null;const c=this._targetRay,u=this._grip,h=this._hand;if(e&&t.session.visibilityState!=="visible-blurred"){if(h&&e.hand){o=!0;for(const y of e.hand.values()){const v=t.getJointPose(y,n),x=this._getHandJoint(h,y);v!==null&&(x.matrix.fromArray(v.transform.matrix),x.matrix.decompose(x.position,x.rotation,x.scale),x.matrixWorldNeedsUpdate=!0,x.jointRadius=v.radius),x.visible=v!==null}const p=h.joints["index-finger-tip"],g=h.joints["thumb-tip"],d=p.position.distanceTo(g.position),m=.02,_=.005;h.inputState.pinching&&d>m+_?(h.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!h.inputState.pinching&&d<=m-_&&(h.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else u!==null&&e.gripSpace&&(s=t.getPose(e.gripSpace,n),s!==null&&(u.matrix.fromArray(s.transform.matrix),u.matrix.decompose(u.position,u.rotation,u.scale),u.matrixWorldNeedsUpdate=!0,s.linearVelocity?(u.hasLinearVelocity=!0,u.linearVelocity.copy(s.linearVelocity)):u.hasLinearVelocity=!1,s.angularVelocity?(u.hasAngularVelocity=!0,u.angularVelocity.copy(s.angularVelocity)):u.hasAngularVelocity=!1));c!==null&&(i=t.getPose(e.targetRaySpace,n),i===null&&s!==null&&(i=s),i!==null&&(c.matrix.fromArray(i.transform.matrix),c.matrix.decompose(c.position,c.rotation,c.scale),c.matrixWorldNeedsUpdate=!0,i.linearVelocity?(c.hasLinearVelocity=!0,c.linearVelocity.copy(i.linearVelocity)):c.hasLinearVelocity=!1,i.angularVelocity?(c.hasAngularVelocity=!0,c.angularVelocity.copy(i.angularVelocity)):c.hasAngularVelocity=!1,this.dispatchEvent(CI)))}return c!==null&&(c.visible=i!==null),u!==null&&(u.visible=s!==null),h!==null&&(h.visible=o!==null),this}_getHandJoint(e,t){if(e.joints[t.jointName]===void 0){const n=new ba;n.matrixAutoUpdate=!1,n.visible=!1,e.joints[t.jointName]=n,e.add(n)}return e.joints[t.jointName]}}const RI=`
void main() {

	gl_Position = vec4( position, 1.0 );

}`,LI=`
uniform sampler2DArray depthColor;
uniform float depthWidth;
uniform float depthHeight;

void main() {

	vec2 coord = vec2( gl_FragCoord.x / depthWidth, gl_FragCoord.y / depthHeight );

	if ( coord.x >= 1.0 ) {

		gl_FragDepthEXT = texture( depthColor, vec3( coord.x - 1.0, coord.y, 1 ) ).r;

	} else {

		gl_FragDepthEXT = texture( depthColor, vec3( coord.x, coord.y, 0 ) ).r;

	}

}`;class PI{constructor(){this.texture=null,this.mesh=null,this.depthNear=0,this.depthFar=0}init(e,t,n){if(this.texture===null){const i=new Qt,s=e.properties.get(i);s.__webglTexture=t.texture,(t.depthNear!=n.depthNear||t.depthFar!=n.depthFar)&&(this.depthNear=t.depthNear,this.depthFar=t.depthFar),this.texture=i}}render(e,t){if(this.texture!==null){if(this.mesh===null){const n=t.cameras[0].viewport,i=new Li({extensions:{fragDepth:!0},vertexShader:RI,fragmentShader:LI,uniforms:{depthColor:{value:this.texture},depthWidth:{value:n.z},depthHeight:{value:n.w}}});this.mesh=new on(new Pa(20,20),i)}e.render(this.mesh,t)}}reset(){this.texture=null,this.mesh=null}}class II extends gr{constructor(e,t){super();const n=this;let i=null,s=1,o=null,c="local-floor",u=1,h=null,p=null,g=null,d=null,m=null,_=null;const y=new PI,v=t.getContextAttributes();let x=null,w=null;const M=[],E=[],O=new Le;let P=null;const U=new yn;U.layers.enable(1),U.viewport=new Nt;const V=new yn;V.layers.enable(2),V.viewport=new Nt;const se=[U,V],T=new Sx;T.layers.enable(1),T.layers.enable(2);let N=null,ne=null;this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(he){let Pe=M[he];return Pe===void 0&&(Pe=new vf,M[he]=Pe),Pe.getTargetRaySpace()},this.getControllerGrip=function(he){let Pe=M[he];return Pe===void 0&&(Pe=new vf,M[he]=Pe),Pe.getGripSpace()},this.getHand=function(he){let Pe=M[he];return Pe===void 0&&(Pe=new vf,M[he]=Pe),Pe.getHandSpace()};function Te(he){const Pe=E.indexOf(he.inputSource);if(Pe===-1)return;const Ge=M[Pe];Ge!==void 0&&(Ge.update(he.inputSource,he.frame,h||o),Ge.dispatchEvent({type:he.type,data:he.inputSource}))}function H(){i.removeEventListener("select",Te),i.removeEventListener("selectstart",Te),i.removeEventListener("selectend",Te),i.removeEventListener("squeeze",Te),i.removeEventListener("squeezestart",Te),i.removeEventListener("squeezeend",Te),i.removeEventListener("end",H),i.removeEventListener("inputsourceschange",re);for(let he=0;he<M.length;he++){const Pe=E[he];Pe!==null&&(E[he]=null,M[he].disconnect(Pe))}N=null,ne=null,y.reset(),e.setRenderTarget(x),m=null,d=null,g=null,i=null,w=null,je.stop(),n.isPresenting=!1,e.setPixelRatio(P),e.setSize(O.width,O.height,!1),n.dispatchEvent({type:"sessionend"})}this.setFramebufferScaleFactor=function(he){s=he,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(he){c=he,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return h||o},this.setReferenceSpace=function(he){h=he},this.getBaseLayer=function(){return d!==null?d:m},this.getBinding=function(){return g},this.getFrame=function(){return _},this.getSession=function(){return i},this.setSession=async function(he){if(i=he,i!==null){if(x=e.getRenderTarget(),i.addEventListener("select",Te),i.addEventListener("selectstart",Te),i.addEventListener("selectend",Te),i.addEventListener("squeeze",Te),i.addEventListener("squeezestart",Te),i.addEventListener("squeezeend",Te),i.addEventListener("end",H),i.addEventListener("inputsourceschange",re),v.xrCompatible!==!0&&await t.makeXRCompatible(),P=e.getPixelRatio(),e.getSize(O),i.renderState.layers===void 0||e.capabilities.isWebGL2===!1){const Pe={antialias:i.renderState.layers===void 0?v.antialias:!0,alpha:!0,depth:v.depth,stencil:v.stencil,framebufferScaleFactor:s};m=new XRWebGLLayer(i,t,Pe),i.updateRenderState({baseLayer:m}),e.setPixelRatio(1),e.setSize(m.framebufferWidth,m.framebufferHeight,!1),w=new Ri(m.framebufferWidth,m.framebufferHeight,{format:Yn,type:hr,colorSpace:e.outputColorSpace,stencilBuffer:v.stencil})}else{let Pe=null,Ge=null,X=null;v.depth&&(X=v.stencil?t.DEPTH24_STENCIL8:t.DEPTH_COMPONENT24,Pe=v.stencil?ws:Fr,Ge=v.stencil?Or:or);const Z={colorFormat:t.RGBA8,depthFormat:X,scaleFactor:s};g=new XRWebGLBinding(i,t),d=g.createProjectionLayer(Z),i.updateRenderState({layers:[d]}),e.setPixelRatio(1),e.setSize(d.textureWidth,d.textureHeight,!1),w=new Ri(d.textureWidth,d.textureHeight,{format:Yn,type:hr,depthTexture:new sp(d.textureWidth,d.textureHeight,Ge,void 0,void 0,void 0,void 0,void 0,void 0,Pe),stencilBuffer:v.stencil,colorSpace:e.outputColorSpace,samples:v.antialias?4:0});const $=e.properties.get(w);$.__ignoreDepthValues=d.ignoreDepthValues}w.isXRRenderTarget=!0,this.setFoveation(u),h=null,o=await i.requestReferenceSpace(c),je.setContext(i),je.start(),n.isPresenting=!0,n.dispatchEvent({type:"sessionstart"})}},this.getEnvironmentBlendMode=function(){if(i!==null)return i.environmentBlendMode};function re(he){for(let Pe=0;Pe<he.removed.length;Pe++){const Ge=he.removed[Pe],X=E.indexOf(Ge);X>=0&&(E[X]=null,M[X].disconnect(Ge))}for(let Pe=0;Pe<he.added.length;Pe++){const Ge=he.added[Pe];let X=E.indexOf(Ge);if(X===-1){for(let $=0;$<M.length;$++)if($>=E.length){E.push(Ge),X=$;break}else if(E[$]===null){E[$]=Ge,X=$;break}if(X===-1)break}const Z=M[X];Z&&Z.connect(Ge)}}const Q=new F,Me=new F;function ve(he,Pe,Ge){Q.setFromMatrixPosition(Pe.matrixWorld),Me.setFromMatrixPosition(Ge.matrixWorld);const X=Q.distanceTo(Me),Z=Pe.projectionMatrix.elements,$=Ge.projectionMatrix.elements,ue=Z[14]/(Z[10]-1),me=Z[14]/(Z[10]+1),I=(Z[9]+1)/Z[5],ge=(Z[9]-1)/Z[5],J=(Z[8]-1)/Z[0],ee=($[8]+1)/$[0],j=ue*J,Ce=ue*ee,Re=X/(-J+ee),R=Re*-J;Pe.matrixWorld.decompose(he.position,he.quaternion,he.scale),he.translateX(R),he.translateZ(Re),he.matrixWorld.compose(he.position,he.quaternion,he.scale),he.matrixWorldInverse.copy(he.matrixWorld).invert();const A=ue+Re,k=me+Re,ie=j-R,te=Ce+(X-R),de=I*me/k*A,oe=ge*me/k*A;he.projectionMatrix.makePerspective(ie,te,de,oe,A,k),he.projectionMatrixInverse.copy(he.projectionMatrix).invert()}function be(he,Pe){Pe===null?he.matrixWorld.copy(he.matrix):he.matrixWorld.multiplyMatrices(Pe.matrixWorld,he.matrix),he.matrixWorldInverse.copy(he.matrixWorld).invert()}this.updateCamera=function(he){if(i===null)return;y.texture!==null&&(he.near=y.depthNear,he.far=y.depthFar),T.near=V.near=U.near=he.near,T.far=V.far=U.far=he.far,(N!==T.near||ne!==T.far)&&(i.updateRenderState({depthNear:T.near,depthFar:T.far}),N=T.near,ne=T.far,U.near=N,U.far=ne,V.near=N,V.far=ne,U.updateProjectionMatrix(),V.updateProjectionMatrix(),he.updateProjectionMatrix());const Pe=he.parent,Ge=T.cameras;be(T,Pe);for(let X=0;X<Ge.length;X++)be(Ge[X],Pe);Ge.length===2?ve(T,U,V):T.projectionMatrix.copy(U.projectionMatrix),Ie(he,T,Pe)};function Ie(he,Pe,Ge){Ge===null?he.matrix.copy(Pe.matrixWorld):(he.matrix.copy(Ge.matrixWorld),he.matrix.invert(),he.matrix.multiply(Pe.matrixWorld)),he.matrix.decompose(he.position,he.quaternion,he.scale),he.updateMatrixWorld(!0),he.projectionMatrix.copy(Pe.projectionMatrix),he.projectionMatrixInverse.copy(Pe.projectionMatrixInverse),he.isPerspectiveCamera&&(he.fov=Aa*2*Math.atan(1/he.projectionMatrix.elements[5]),he.zoom=1)}this.getCamera=function(){return T},this.getFoveation=function(){if(!(d===null&&m===null))return u},this.setFoveation=function(he){u=he,d!==null&&(d.fixedFoveation=he),m!==null&&m.fixedFoveation!==void 0&&(m.fixedFoveation=he)},this.hasDepthSensing=function(){return y.texture!==null};let Se=null;function Ve(he,Pe){if(p=Pe.getViewerPose(h||o),_=Pe,p!==null){const Ge=p.views;m!==null&&(e.setRenderTargetFramebuffer(w,m.framebuffer),e.setRenderTarget(w));let X=!1;Ge.length!==T.cameras.length&&(T.cameras.length=0,X=!0);for(let $=0;$<Ge.length;$++){const ue=Ge[$];let me=null;if(m!==null)me=m.getViewport(ue);else{const ge=g.getViewSubImage(d,ue);me=ge.viewport,$===0&&(e.setRenderTargetTextures(w,ge.colorTexture,d.ignoreDepthValues?void 0:ge.depthStencilTexture),e.setRenderTarget(w))}let I=se[$];I===void 0&&(I=new yn,I.layers.enable($),I.viewport=new Nt,se[$]=I),I.matrix.fromArray(ue.transform.matrix),I.matrix.decompose(I.position,I.quaternion,I.scale),I.projectionMatrix.fromArray(ue.projectionMatrix),I.projectionMatrixInverse.copy(I.projectionMatrix).invert(),I.viewport.set(me.x,me.y,me.width,me.height),$===0&&(T.matrix.copy(I.matrix),T.matrix.decompose(T.position,T.quaternion,T.scale)),X===!0&&T.cameras.push(I)}const Z=i.enabledFeatures;if(Z&&Z.includes("depth-sensing")){const $=g.getDepthInformation(Ge[0]);$&&$.isValid&&$.texture&&y.init(e,$,i.renderState)}}for(let Ge=0;Ge<M.length;Ge++){const X=E[Ge],Z=M[Ge];X!==null&&Z!==void 0&&Z.update(X,Pe,h||o)}y.render(e,T),Se&&Se(he,Pe),Pe.detectedPlanes&&n.dispatchEvent({type:"planesdetected",data:Pe}),_=null}const je=new gx;je.setAnimationLoop(Ve),this.setAnimationLoop=function(he){Se=he},this.dispose=function(){}}}function DI(r,e){function t(v,x){v.matrixAutoUpdate===!0&&v.updateMatrix(),x.value.copy(v.matrix)}function n(v,x){x.color.getRGB(v.fogColor.value,fx(r)),x.isFog?(v.fogNear.value=x.near,v.fogFar.value=x.far):x.isFogExp2&&(v.fogDensity.value=x.density)}function i(v,x,w,M,E){x.isMeshBasicMaterial||x.isMeshLambertMaterial?s(v,x):x.isMeshToonMaterial?(s(v,x),g(v,x)):x.isMeshPhongMaterial?(s(v,x),p(v,x)):x.isMeshStandardMaterial?(s(v,x),d(v,x),x.isMeshPhysicalMaterial&&m(v,x,E)):x.isMeshMatcapMaterial?(s(v,x),_(v,x)):x.isMeshDepthMaterial?s(v,x):x.isMeshDistanceMaterial?(s(v,x),y(v,x)):x.isMeshNormalMaterial?s(v,x):x.isLineBasicMaterial?(o(v,x),x.isLineDashedMaterial&&c(v,x)):x.isPointsMaterial?u(v,x,w,M):x.isSpriteMaterial?h(v,x):x.isShadowMaterial?(v.color.value.copy(x.color),v.opacity.value=x.opacity):x.isShaderMaterial&&(x.uniformsNeedUpdate=!1)}function s(v,x){v.opacity.value=x.opacity,x.color&&v.diffuse.value.copy(x.color),x.emissive&&v.emissive.value.copy(x.emissive).multiplyScalar(x.emissiveIntensity),x.map&&(v.map.value=x.map,t(x.map,v.mapTransform)),x.alphaMap&&(v.alphaMap.value=x.alphaMap,t(x.alphaMap,v.alphaMapTransform)),x.bumpMap&&(v.bumpMap.value=x.bumpMap,t(x.bumpMap,v.bumpMapTransform),v.bumpScale.value=x.bumpScale,x.side===On&&(v.bumpScale.value*=-1)),x.normalMap&&(v.normalMap.value=x.normalMap,t(x.normalMap,v.normalMapTransform),v.normalScale.value.copy(x.normalScale),x.side===On&&v.normalScale.value.negate()),x.displacementMap&&(v.displacementMap.value=x.displacementMap,t(x.displacementMap,v.displacementMapTransform),v.displacementScale.value=x.displacementScale,v.displacementBias.value=x.displacementBias),x.emissiveMap&&(v.emissiveMap.value=x.emissiveMap,t(x.emissiveMap,v.emissiveMapTransform)),x.specularMap&&(v.specularMap.value=x.specularMap,t(x.specularMap,v.specularMapTransform)),x.alphaTest>0&&(v.alphaTest.value=x.alphaTest);const w=e.get(x).envMap;if(w&&(v.envMap.value=w,v.flipEnvMap.value=w.isCubeTexture&&w.isRenderTargetTexture===!1?-1:1,v.reflectivity.value=x.reflectivity,v.ior.value=x.ior,v.refractionRatio.value=x.refractionRatio),x.lightMap){v.lightMap.value=x.lightMap;const M=r._useLegacyLights===!0?Math.PI:1;v.lightMapIntensity.value=x.lightMapIntensity*M,t(x.lightMap,v.lightMapTransform)}x.aoMap&&(v.aoMap.value=x.aoMap,v.aoMapIntensity.value=x.aoMapIntensity,t(x.aoMap,v.aoMapTransform))}function o(v,x){v.diffuse.value.copy(x.color),v.opacity.value=x.opacity,x.map&&(v.map.value=x.map,t(x.map,v.mapTransform))}function c(v,x){v.dashSize.value=x.dashSize,v.totalSize.value=x.dashSize+x.gapSize,v.scale.value=x.scale}function u(v,x,w,M){v.diffuse.value.copy(x.color),v.opacity.value=x.opacity,v.size.value=x.size*w,v.scale.value=M*.5,x.map&&(v.map.value=x.map,t(x.map,v.uvTransform)),x.alphaMap&&(v.alphaMap.value=x.alphaMap,t(x.alphaMap,v.alphaMapTransform)),x.alphaTest>0&&(v.alphaTest.value=x.alphaTest)}function h(v,x){v.diffuse.value.copy(x.color),v.opacity.value=x.opacity,v.rotation.value=x.rotation,x.map&&(v.map.value=x.map,t(x.map,v.mapTransform)),x.alphaMap&&(v.alphaMap.value=x.alphaMap,t(x.alphaMap,v.alphaMapTransform)),x.alphaTest>0&&(v.alphaTest.value=x.alphaTest)}function p(v,x){v.specular.value.copy(x.specular),v.shininess.value=Math.max(x.shininess,1e-4)}function g(v,x){x.gradientMap&&(v.gradientMap.value=x.gradientMap)}function d(v,x){v.metalness.value=x.metalness,x.metalnessMap&&(v.metalnessMap.value=x.metalnessMap,t(x.metalnessMap,v.metalnessMapTransform)),v.roughness.value=x.roughness,x.roughnessMap&&(v.roughnessMap.value=x.roughnessMap,t(x.roughnessMap,v.roughnessMapTransform)),e.get(x).envMap&&(v.envMapIntensity.value=x.envMapIntensity)}function m(v,x,w){v.ior.value=x.ior,x.sheen>0&&(v.sheenColor.value.copy(x.sheenColor).multiplyScalar(x.sheen),v.sheenRoughness.value=x.sheenRoughness,x.sheenColorMap&&(v.sheenColorMap.value=x.sheenColorMap,t(x.sheenColorMap,v.sheenColorMapTransform)),x.sheenRoughnessMap&&(v.sheenRoughnessMap.value=x.sheenRoughnessMap,t(x.sheenRoughnessMap,v.sheenRoughnessMapTransform))),x.clearcoat>0&&(v.clearcoat.value=x.clearcoat,v.clearcoatRoughness.value=x.clearcoatRoughness,x.clearcoatMap&&(v.clearcoatMap.value=x.clearcoatMap,t(x.clearcoatMap,v.clearcoatMapTransform)),x.clearcoatRoughnessMap&&(v.clearcoatRoughnessMap.value=x.clearcoatRoughnessMap,t(x.clearcoatRoughnessMap,v.clearcoatRoughnessMapTransform)),x.clearcoatNormalMap&&(v.clearcoatNormalMap.value=x.clearcoatNormalMap,t(x.clearcoatNormalMap,v.clearcoatNormalMapTransform),v.clearcoatNormalScale.value.copy(x.clearcoatNormalScale),x.side===On&&v.clearcoatNormalScale.value.negate())),x.iridescence>0&&(v.iridescence.value=x.iridescence,v.iridescenceIOR.value=x.iridescenceIOR,v.iridescenceThicknessMinimum.value=x.iridescenceThicknessRange[0],v.iridescenceThicknessMaximum.value=x.iridescenceThicknessRange[1],x.iridescenceMap&&(v.iridescenceMap.value=x.iridescenceMap,t(x.iridescenceMap,v.iridescenceMapTransform)),x.iridescenceThicknessMap&&(v.iridescenceThicknessMap.value=x.iridescenceThicknessMap,t(x.iridescenceThicknessMap,v.iridescenceThicknessMapTransform))),x.transmission>0&&(v.transmission.value=x.transmission,v.transmissionSamplerMap.value=w.texture,v.transmissionSamplerSize.value.set(w.width,w.height),x.transmissionMap&&(v.transmissionMap.value=x.transmissionMap,t(x.transmissionMap,v.transmissionMapTransform)),v.thickness.value=x.thickness,x.thicknessMap&&(v.thicknessMap.value=x.thicknessMap,t(x.thicknessMap,v.thicknessMapTransform)),v.attenuationDistance.value=x.attenuationDistance,v.attenuationColor.value.copy(x.attenuationColor)),x.anisotropy>0&&(v.anisotropyVector.value.set(x.anisotropy*Math.cos(x.anisotropyRotation),x.anisotropy*Math.sin(x.anisotropyRotation)),x.anisotropyMap&&(v.anisotropyMap.value=x.anisotropyMap,t(x.anisotropyMap,v.anisotropyMapTransform))),v.specularIntensity.value=x.specularIntensity,v.specularColor.value.copy(x.specularColor),x.specularColorMap&&(v.specularColorMap.value=x.specularColorMap,t(x.specularColorMap,v.specularColorMapTransform)),x.specularIntensityMap&&(v.specularIntensityMap.value=x.specularIntensityMap,t(x.specularIntensityMap,v.specularIntensityMapTransform))}function _(v,x){x.matcap&&(v.matcap.value=x.matcap)}function y(v,x){const w=e.get(x).light;v.referencePosition.value.setFromMatrixPosition(w.matrixWorld),v.nearDistance.value=w.shadow.camera.near,v.farDistance.value=w.shadow.camera.far}return{refreshFogUniforms:n,refreshMaterialUniforms:i}}function UI(r,e,t,n){let i={},s={},o=[];const c=t.isWebGL2?r.getParameter(r.MAX_UNIFORM_BUFFER_BINDINGS):0;function u(w,M){const E=M.program;n.uniformBlockBinding(w,E)}function h(w,M){let E=i[w.id];E===void 0&&(_(w),E=p(w),i[w.id]=E,w.addEventListener("dispose",v));const O=M.program;n.updateUBOMapping(w,O);const P=e.render.frame;s[w.id]!==P&&(d(w),s[w.id]=P)}function p(w){const M=g();w.__bindingPointIndex=M;const E=r.createBuffer(),O=w.__size,P=w.usage;return r.bindBuffer(r.UNIFORM_BUFFER,E),r.bufferData(r.UNIFORM_BUFFER,O,P),r.bindBuffer(r.UNIFORM_BUFFER,null),r.bindBufferBase(r.UNIFORM_BUFFER,M,E),E}function g(){for(let w=0;w<c;w++)if(o.indexOf(w)===-1)return o.push(w),w;return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),0}function d(w){const M=i[w.id],E=w.uniforms,O=w.__cache;r.bindBuffer(r.UNIFORM_BUFFER,M);for(let P=0,U=E.length;P<U;P++){const V=Array.isArray(E[P])?E[P]:[E[P]];for(let se=0,T=V.length;se<T;se++){const N=V[se];if(m(N,P,se,O)===!0){const ne=N.__offset,Te=Array.isArray(N.value)?N.value:[N.value];let H=0;for(let re=0;re<Te.length;re++){const Q=Te[re],Me=y(Q);typeof Q=="number"||typeof Q=="boolean"?(N.__data[0]=Q,r.bufferSubData(r.UNIFORM_BUFFER,ne+H,N.__data)):Q.isMatrix3?(N.__data[0]=Q.elements[0],N.__data[1]=Q.elements[1],N.__data[2]=Q.elements[2],N.__data[3]=0,N.__data[4]=Q.elements[3],N.__data[5]=Q.elements[4],N.__data[6]=Q.elements[5],N.__data[7]=0,N.__data[8]=Q.elements[6],N.__data[9]=Q.elements[7],N.__data[10]=Q.elements[8],N.__data[11]=0):(Q.toArray(N.__data,H),H+=Me.storage/Float32Array.BYTES_PER_ELEMENT)}r.bufferSubData(r.UNIFORM_BUFFER,ne,N.__data)}}}r.bindBuffer(r.UNIFORM_BUFFER,null)}function m(w,M,E,O){const P=w.value,U=M+"_"+E;if(O[U]===void 0)return typeof P=="number"||typeof P=="boolean"?O[U]=P:O[U]=P.clone(),!0;{const V=O[U];if(typeof P=="number"||typeof P=="boolean"){if(V!==P)return O[U]=P,!0}else if(V.equals(P)===!1)return V.copy(P),!0}return!1}function _(w){const M=w.uniforms;let E=0;const O=16;for(let U=0,V=M.length;U<V;U++){const se=Array.isArray(M[U])?M[U]:[M[U]];for(let T=0,N=se.length;T<N;T++){const ne=se[T],Te=Array.isArray(ne.value)?ne.value:[ne.value];for(let H=0,re=Te.length;H<re;H++){const Q=Te[H],Me=y(Q),ve=E%O;ve!==0&&O-ve<Me.boundary&&(E+=O-ve),ne.__data=new Float32Array(Me.storage/Float32Array.BYTES_PER_ELEMENT),ne.__offset=E,E+=Me.storage}}}const P=E%O;return P>0&&(E+=O-P),w.__size=E,w.__cache={},this}function y(w){const M={boundary:0,storage:0};return typeof w=="number"||typeof w=="boolean"?(M.boundary=4,M.storage=4):w.isVector2?(M.boundary=8,M.storage=8):w.isVector3||w.isColor?(M.boundary=16,M.storage=12):w.isVector4?(M.boundary=16,M.storage=16):w.isMatrix3?(M.boundary=48,M.storage=48):w.isMatrix4?(M.boundary=64,M.storage=64):w.isTexture?console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."):console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",w),M}function v(w){const M=w.target;M.removeEventListener("dispose",v);const E=o.indexOf(M.__bindingPointIndex);o.splice(E,1),r.deleteBuffer(i[M.id]),delete i[M.id],delete s[M.id]}function x(){for(const w in i)r.deleteBuffer(i[w]);o=[],i={},s={}}return{bind:u,update:h,dispose:x}}class wx{constructor(e={}){const{canvas:t=cx(),context:n=null,depth:i=!0,stencil:s=!0,alpha:o=!1,antialias:c=!1,premultipliedAlpha:u=!0,preserveDrawingBuffer:h=!1,powerPreference:p="default",failIfMajorPerformanceCaveat:g=!1}=e;this.isWebGLRenderer=!0;let d;n!==null?d=n.getContextAttributes().alpha:d=o;const m=new Uint32Array(4),_=new Int32Array(4);let y=null,v=null;const x=[],w=[];this.domElement=t,this.debug={checkShaderErrors:!0,onShaderError:null},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this._outputColorSpace=dn,this._useLegacyLights=!1,this.toneMapping=ur,this.toneMappingExposure=1;const M=this;let E=!1,O=0,P=0,U=null,V=-1,se=null;const T=new Nt,N=new Nt;let ne=null;const Te=new qe(0);let H=0,re=t.width,Q=t.height,Me=1,ve=null,be=null;const Ie=new Nt(0,0,re,Q),Se=new Nt(0,0,re,Q);let Ve=!1;const je=new $o;let he=!1,Pe=!1,Ge=null;const X=new at,Z=new Le,$=new F,ue={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function me(){return U===null?Me:1}let I=n;function ge(D,K){for(let le=0;le<D.length;le++){const fe=D[le],ae=t.getContext(fe,K);if(ae!==null)return ae}return null}try{const D={alpha:!0,depth:i,stencil:s,antialias:c,premultipliedAlpha:u,preserveDrawingBuffer:h,powerPreference:p,failIfMajorPerformanceCaveat:g};if("setAttribute"in t&&t.setAttribute("data-engine",`three.js r${iu}`),t.addEventListener("webglcontextlost",bt,!1),t.addEventListener("webglcontextrestored",B,!1),t.addEventListener("webglcontextcreationerror",Ne,!1),I===null){const K=["webgl2","webgl","experimental-webgl"];if(M.isWebGL1Renderer===!0&&K.shift(),I=ge(K,D),I===null)throw ge(K)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}typeof WebGLRenderingContext<"u"&&I instanceof WebGLRenderingContext&&console.warn("THREE.WebGLRenderer: WebGL 1 support was deprecated in r153 and will be removed in r163."),I.getShaderPrecisionFormat===void 0&&(I.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(D){throw console.error("THREE.WebGLRenderer: "+D.message),D}let J,ee,j,Ce,Re,R,A,k,ie,te,de,oe,xe,pe,_e,Fe,q,Ue,Ee,ze,Xe,ke,st,St;function Tt(){J=new XP(I),ee=new zP(I,J,e),J.init(ee),ke=new Mx(I,J,ee),j=new AI(I,J,ee),Ce=new $P(I),Re=new pI,R=new TI(I,J,j,Re,ee,ke,Ce),A=new GP(M),k=new WP(M),ie=new nR(I,ee),st=new FP(I,J,ie,ee),te=new qP(I,ie,Ce,st),de=new jP(I,te,ie,Ce),Ee=new KP(I,ee,R),Fe=new kP(Re),oe=new dI(M,A,k,J,ee,st,Fe),xe=new DI(M,Re),pe=new gI,_e=new MI(J,ee),Ue=new OP(M,A,k,j,de,d,u),q=new EI(M,de,ee),St=new UI(I,Ce,ee,j),ze=new BP(I,J,Ce,ee),Xe=new YP(I,J,Ce,ee),Ce.programs=oe.programs,M.capabilities=ee,M.extensions=J,M.properties=Re,M.renderLists=pe,M.shadowMap=q,M.state=j,M.info=Ce}Tt();const mt=new II(M,I);this.xr=mt,this.getContext=function(){return I},this.getContextAttributes=function(){return I.getContextAttributes()},this.forceContextLoss=function(){const D=J.get("WEBGL_lose_context");D&&D.loseContext()},this.forceContextRestore=function(){const D=J.get("WEBGL_lose_context");D&&D.restoreContext()},this.getPixelRatio=function(){return Me},this.setPixelRatio=function(D){D!==void 0&&(Me=D,this.setSize(re,Q,!1))},this.getSize=function(D){return D.set(re,Q)},this.setSize=function(D,K,le=!0){if(mt.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}re=D,Q=K,t.width=Math.floor(D*Me),t.height=Math.floor(K*Me),le===!0&&(t.style.width=D+"px",t.style.height=K+"px"),this.setViewport(0,0,D,K)},this.getDrawingBufferSize=function(D){return D.set(re*Me,Q*Me).floor()},this.setDrawingBufferSize=function(D,K,le){re=D,Q=K,Me=le,t.width=Math.floor(D*le),t.height=Math.floor(K*le),this.setViewport(0,0,D,K)},this.getCurrentViewport=function(D){return D.copy(T)},this.getViewport=function(D){return D.copy(Ie)},this.setViewport=function(D,K,le,fe){D.isVector4?Ie.set(D.x,D.y,D.z,D.w):Ie.set(D,K,le,fe),j.viewport(T.copy(Ie).multiplyScalar(Me).floor())},this.getScissor=function(D){return D.copy(Se)},this.setScissor=function(D,K,le,fe){D.isVector4?Se.set(D.x,D.y,D.z,D.w):Se.set(D,K,le,fe),j.scissor(N.copy(Se).multiplyScalar(Me).floor())},this.getScissorTest=function(){return Ve},this.setScissorTest=function(D){j.setScissorTest(Ve=D)},this.setOpaqueSort=function(D){ve=D},this.setTransparentSort=function(D){be=D},this.getClearColor=function(D){return D.copy(Ue.getClearColor())},this.setClearColor=function(){Ue.setClearColor.apply(Ue,arguments)},this.getClearAlpha=function(){return Ue.getClearAlpha()},this.setClearAlpha=function(){Ue.setClearAlpha.apply(Ue,arguments)},this.clear=function(D=!0,K=!0,le=!0){let fe=0;if(D){let ae=!1;if(U!==null){const We=U.texture.format;ae=We===$d||We===Yd||We===qd}if(ae){const We=U.texture.type,Je=We===hr||We===or||We===su||We===Or||We===Wd||We===Xd,tt=Ue.getClearColor(),nt=Ue.getClearAlpha(),ft=tt.r,ot=tt.g,ct=tt.b;Je?(m[0]=ft,m[1]=ot,m[2]=ct,m[3]=nt,I.clearBufferuiv(I.COLOR,0,m)):(_[0]=ft,_[1]=ot,_[2]=ct,_[3]=nt,I.clearBufferiv(I.COLOR,0,_))}else fe|=I.COLOR_BUFFER_BIT}K&&(fe|=I.DEPTH_BUFFER_BIT),le&&(fe|=I.STENCIL_BUFFER_BIT,this.state.buffers.stencil.setMask(4294967295)),I.clear(fe)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){t.removeEventListener("webglcontextlost",bt,!1),t.removeEventListener("webglcontextrestored",B,!1),t.removeEventListener("webglcontextcreationerror",Ne,!1),pe.dispose(),_e.dispose(),Re.dispose(),A.dispose(),k.dispose(),de.dispose(),st.dispose(),St.dispose(),oe.dispose(),mt.dispose(),mt.removeEventListener("sessionstart",zn),mt.removeEventListener("sessionend",Ft),Ge&&(Ge.dispose(),Ge=null),cn.stop()};function bt(D){D.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),E=!0}function B(){console.log("THREE.WebGLRenderer: Context Restored."),E=!1;const D=Ce.autoReset,K=q.enabled,le=q.autoUpdate,fe=q.needsUpdate,ae=q.type;Tt(),Ce.autoReset=D,q.enabled=K,q.autoUpdate=le,q.needsUpdate=fe,q.type=ae}function Ne(D){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",D.statusMessage)}function Oe(D){const K=D.target;K.removeEventListener("dispose",Oe),Ze(K)}function Ze(D){Qe(D),Re.remove(D)}function Qe(D){const K=Re.get(D).programs;K!==void 0&&(K.forEach(function(le){oe.releaseProgram(le)}),D.isShaderMaterial&&oe.releaseShaderCache(D))}this.renderBufferDirect=function(D,K,le,fe,ae,We){K===null&&(K=ue);const Je=ae.isMesh&&ae.matrixWorld.determinant()<0,tt=zu(D,K,le,fe,ae);j.setMaterial(fe,Je);let nt=le.index,ft=1;if(fe.wireframe===!0){if(nt=te.getWireframeAttribute(le),nt===void 0)return;ft=2}const ot=le.drawRange,ct=le.attributes.position;let Xt=ot.start*ft,bn=(ot.start+ot.count)*ft;We!==null&&(Xt=Math.max(Xt,We.start*ft),bn=Math.min(bn,(We.start+We.count)*ft)),nt!==null?(Xt=Math.max(Xt,0),bn=Math.min(bn,nt.count)):ct!=null&&(Xt=Math.max(Xt,0),bn=Math.min(bn,ct.count));const en=bn-Xt;if(en<0||en===1/0)return;st.setup(ae,fe,tt,le,nt);let yi,Ht=ze;if(nt!==null&&(yi=ie.get(nt),Ht=Xe,Ht.setIndex(yi)),ae.isMesh)fe.wireframe===!0?(j.setLineWidth(fe.wireframeLinewidth*me()),Ht.setMode(I.LINES)):Ht.setMode(I.TRIANGLES);else if(ae.isLine){let gt=fe.linewidth;gt===void 0&&(gt=1),j.setLineWidth(gt*me()),ae.isLineSegments?Ht.setMode(I.LINES):ae.isLineLoop?Ht.setMode(I.LINE_LOOP):Ht.setMode(I.LINE_STRIP)}else ae.isPoints?Ht.setMode(I.POINTS):ae.isSprite&&Ht.setMode(I.TRIANGLES);if(ae.isBatchedMesh)Ht.renderMultiDraw(ae._multiDrawStarts,ae._multiDrawCounts,ae._multiDrawCount);else if(ae.isInstancedMesh)Ht.renderInstances(Xt,en,ae.count);else if(le.isInstancedBufferGeometry){const gt=le._maxInstanceCount!==void 0?le._maxInstanceCount:1/0,ka=Math.min(le.instanceCount,gt);Ht.renderInstances(Xt,en,ka)}else Ht.render(Xt,en)};function Rt(D,K,le){D.transparent===!0&&D.side===Bi&&D.forceSinglePass===!1?(D.side=On,D.needsUpdate=!0,Is(D,K,le),D.side=fr,D.needsUpdate=!0,Is(D,K,le),D.side=Bi):Is(D,K,le)}this.compile=function(D,K,le=null){le===null&&(le=D),v=_e.get(le),v.init(),w.push(v),le.traverseVisible(function(ae){ae.isLight&&ae.layers.test(K.layers)&&(v.pushLight(ae),ae.castShadow&&v.pushShadow(ae))}),D!==le&&D.traverseVisible(function(ae){ae.isLight&&ae.layers.test(K.layers)&&(v.pushLight(ae),ae.castShadow&&v.pushShadow(ae))}),v.setupLights(M._useLegacyLights);const fe=new Set;return D.traverse(function(ae){const We=ae.material;if(We)if(Array.isArray(We))for(let Je=0;Je<We.length;Je++){const tt=We[Je];Rt(tt,le,ae),fe.add(tt)}else Rt(We,le,ae),fe.add(We)}),w.pop(),v=null,fe},this.compileAsync=function(D,K,le=null){const fe=this.compile(D,K,le);return new Promise(ae=>{function We(){if(fe.forEach(function(Je){Re.get(Je).currentProgram.isReady()&&fe.delete(Je)}),fe.size===0){ae(D);return}setTimeout(We,10)}J.get("KHR_parallel_shader_compile")!==null?We():setTimeout(We,10)})};let It=null;function ln(D){It&&It(D)}function zn(){cn.stop()}function Ft(){cn.start()}const cn=new gx;cn.setAnimationLoop(ln),typeof self<"u"&&cn.setContext(self),this.setAnimationLoop=function(D){It=D,mt.setAnimationLoop(D),D===null?cn.stop():cn.start()},mt.addEventListener("sessionstart",zn),mt.addEventListener("sessionend",Ft),this.render=function(D,K){if(K!==void 0&&K.isCamera!==!0){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(E===!0)return;D.matrixWorldAutoUpdate===!0&&D.updateMatrixWorld(),K.parent===null&&K.matrixWorldAutoUpdate===!0&&K.updateMatrixWorld(),mt.enabled===!0&&mt.isPresenting===!0&&(mt.cameraAutoUpdate===!0&&mt.updateCamera(K),K=mt.getCamera()),D.isScene===!0&&D.onBeforeRender(M,D,K,U),v=_e.get(D,w.length),v.init(),w.push(v),X.multiplyMatrices(K.projectionMatrix,K.matrixWorldInverse),je.setFromProjectionMatrix(X),Pe=this.localClippingEnabled,he=Fe.init(this.clippingPlanes,Pe),y=pe.get(D,x.length),y.init(),x.push(y),li(D,K,0,M.sortObjects),y.finish(),M.sortObjects===!0&&y.sort(ve,be),this.info.render.frame++,he===!0&&Fe.beginShadows();const le=v.state.shadowsArray;if(q.render(le,D,K),he===!0&&Fe.endShadows(),this.info.autoReset===!0&&this.info.reset(),(mt.enabled===!1||mt.isPresenting===!1||mt.hasDepthSensing()===!1)&&Ue.render(y,D),v.setupLights(M._useLegacyLights),K.isArrayCamera){const fe=K.cameras;for(let ae=0,We=fe.length;ae<We;ae++){const Je=fe[ae];Ls(y,D,Je,Je.viewport)}}else Ls(y,D,K);U!==null&&(R.updateMultisampleRenderTarget(U),R.updateRenderTargetMipmap(U)),D.isScene===!0&&D.onAfterRender(M,D,K),st.resetDefaultState(),V=-1,se=null,w.pop(),w.length>0?v=w[w.length-1]:v=null,x.pop(),x.length>0?y=x[x.length-1]:y=null};function li(D,K,le,fe){if(D.visible===!1)return;if(D.layers.test(K.layers)){if(D.isGroup)le=D.renderOrder;else if(D.isLOD)D.autoUpdate===!0&&D.update(K);else if(D.isLight)v.pushLight(D),D.castShadow&&v.pushShadow(D);else if(D.isSprite){if(!D.frustumCulled||je.intersectsSprite(D)){fe&&$.setFromMatrixPosition(D.matrixWorld).applyMatrix4(X);const Je=de.update(D),tt=D.material;tt.visible&&y.push(D,Je,tt,le,$.z,null)}}else if((D.isMesh||D.isLine||D.isPoints)&&(!D.frustumCulled||je.intersectsObject(D))){const Je=de.update(D),tt=D.material;if(fe&&(D.boundingSphere!==void 0?(D.boundingSphere===null&&D.computeBoundingSphere(),$.copy(D.boundingSphere.center)):(Je.boundingSphere===null&&Je.computeBoundingSphere(),$.copy(Je.boundingSphere.center)),$.applyMatrix4(D.matrixWorld).applyMatrix4(X)),Array.isArray(tt)){const nt=Je.groups;for(let ft=0,ot=nt.length;ft<ot;ft++){const ct=nt[ft],Xt=tt[ct.materialIndex];Xt&&Xt.visible&&y.push(D,Je,Xt,le,$.z,ct)}}else tt.visible&&y.push(D,Je,tt,le,$.z,null)}}const We=D.children;for(let Je=0,tt=We.length;Je<tt;Je++)li(We[Je],K,le,fe)}function Ls(D,K,le,fe){const ae=D.opaque,We=D.transmissive,Je=D.transparent;v.setupLightsView(le),he===!0&&Fe.setGlobalState(M.clippingPlanes,le),We.length>0&&Bu(ae,We,K,le),fe&&j.viewport(T.copy(fe)),ae.length>0&&Ps(ae,K,le),We.length>0&&Ps(We,K,le),Je.length>0&&Ps(Je,K,le),j.buffers.depth.setTest(!0),j.buffers.depth.setMask(!0),j.buffers.color.setMask(!0),j.setPolygonOffset(!1)}function Bu(D,K,le,fe){if((le.isScene===!0?le.overrideMaterial:null)!==null)return;const We=ee.isWebGL2;Ge===null&&(Ge=new Ri(1,1,{generateMipmaps:!0,type:J.has("EXT_color_buffer_half_float")?Ea:hr,minFilter:zi,samples:We?4:0})),M.getDrawingBufferSize(Z),We?Ge.setSize(Z.x,Z.y):Ge.setSize(Qc(Z.x),Qc(Z.y));const Je=M.getRenderTarget();M.setRenderTarget(Ge),M.getClearColor(Te),H=M.getClearAlpha(),H<1&&M.setClearColor(16777215,.5),M.clear();const tt=M.toneMapping;M.toneMapping=ur,Ps(D,le,fe),R.updateMultisampleRenderTarget(Ge),R.updateRenderTargetMipmap(Ge);let nt=!1;for(let ft=0,ot=K.length;ft<ot;ft++){const ct=K[ft],Xt=ct.object,bn=ct.geometry,en=ct.material,yi=ct.group;if(en.side===Bi&&Xt.layers.test(fe.layers)){const Ht=en.side;en.side=On,en.needsUpdate=!0,el(Xt,le,fe,bn,en,yi),en.side=Ht,en.needsUpdate=!0,nt=!0}}nt===!0&&(R.updateMultisampleRenderTarget(Ge),R.updateRenderTargetMipmap(Ge)),M.setRenderTarget(Je),M.setClearColor(Te,H),M.toneMapping=tt}function Ps(D,K,le){const fe=K.isScene===!0?K.overrideMaterial:null;for(let ae=0,We=D.length;ae<We;ae++){const Je=D[ae],tt=Je.object,nt=Je.geometry,ft=fe===null?Je.material:fe,ot=Je.group;tt.layers.test(le.layers)&&el(tt,K,le,nt,ft,ot)}}function el(D,K,le,fe,ae,We){D.onBeforeRender(M,K,le,fe,ae,We),D.modelViewMatrix.multiplyMatrices(le.matrixWorldInverse,D.matrixWorld),D.normalMatrix.getNormalMatrix(D.modelViewMatrix),ae.onBeforeRender(M,K,le,fe,D,We),ae.transparent===!0&&ae.side===Bi&&ae.forceSinglePass===!1?(ae.side=On,ae.needsUpdate=!0,M.renderBufferDirect(le,K,fe,ae,D,We),ae.side=fr,ae.needsUpdate=!0,M.renderBufferDirect(le,K,fe,ae,D,We),ae.side=Bi):M.renderBufferDirect(le,K,fe,ae,D,We),D.onAfterRender(M,K,le,fe,ae,We)}function Is(D,K,le){K.isScene!==!0&&(K=ue);const fe=Re.get(D),ae=v.state.lights,We=v.state.shadowsArray,Je=ae.state.version,tt=oe.getParameters(D,ae.state,We,K,le),nt=oe.getProgramCacheKey(tt);let ft=fe.programs;fe.environment=D.isMeshStandardMaterial?K.environment:null,fe.fog=K.fog,fe.envMap=(D.isMeshStandardMaterial?k:A).get(D.envMap||fe.environment),ft===void 0&&(D.addEventListener("dispose",Oe),ft=new Map,fe.programs=ft);let ot=ft.get(nt);if(ot!==void 0){if(fe.currentProgram===ot&&fe.lightsStateVersion===Je)return nl(D,tt),ot}else tt.uniforms=oe.getUniforms(D),D.onBuild(le,tt,M),D.onBeforeCompile(tt,M),ot=oe.acquireProgram(tt,nt),ft.set(nt,ot),fe.uniforms=tt.uniforms;const ct=fe.uniforms;return(!D.isShaderMaterial&&!D.isRawShaderMaterial||D.clipping===!0)&&(ct.clippingPlanes=Fe.uniform),nl(D,tt),fe.needsLights=il(D),fe.lightsStateVersion=Je,fe.needsLights&&(ct.ambientLightColor.value=ae.state.ambient,ct.lightProbe.value=ae.state.probe,ct.directionalLights.value=ae.state.directional,ct.directionalLightShadows.value=ae.state.directionalShadow,ct.spotLights.value=ae.state.spot,ct.spotLightShadows.value=ae.state.spotShadow,ct.rectAreaLights.value=ae.state.rectArea,ct.ltc_1.value=ae.state.rectAreaLTC1,ct.ltc_2.value=ae.state.rectAreaLTC2,ct.pointLights.value=ae.state.point,ct.pointLightShadows.value=ae.state.pointShadow,ct.hemisphereLights.value=ae.state.hemi,ct.directionalShadowMap.value=ae.state.directionalShadowMap,ct.directionalShadowMatrix.value=ae.state.directionalShadowMatrix,ct.spotShadowMap.value=ae.state.spotShadowMap,ct.spotLightMatrix.value=ae.state.spotLightMatrix,ct.spotLightMap.value=ae.state.spotLightMap,ct.pointShadowMap.value=ae.state.pointShadowMap,ct.pointShadowMatrix.value=ae.state.pointShadowMatrix),fe.currentProgram=ot,fe.uniformsList=null,ot}function tl(D){if(D.uniformsList===null){const K=D.currentProgram.getUniforms();D.uniformsList=Xc.seqWithValue(K.seq,D.uniforms)}return D.uniformsList}function nl(D,K){const le=Re.get(D);le.outputColorSpace=K.outputColorSpace,le.batching=K.batching,le.instancing=K.instancing,le.instancingColor=K.instancingColor,le.skinning=K.skinning,le.morphTargets=K.morphTargets,le.morphNormals=K.morphNormals,le.morphColors=K.morphColors,le.morphTargetsCount=K.morphTargetsCount,le.numClippingPlanes=K.numClippingPlanes,le.numIntersection=K.numClipIntersection,le.vertexAlphas=K.vertexAlphas,le.vertexTangents=K.vertexTangents,le.toneMapping=K.toneMapping}function zu(D,K,le,fe,ae){K.isScene!==!0&&(K=ue),R.resetTextureUnits();const We=K.fog,Je=fe.isMeshStandardMaterial?K.environment:null,tt=U===null?M.outputColorSpace:U.isXRRenderTarget===!0?U.texture.colorSpace:Hi,nt=(fe.isMeshStandardMaterial?k:A).get(fe.envMap||Je),ft=fe.vertexColors===!0&&!!le.attributes.color&&le.attributes.color.itemSize===4,ot=!!le.attributes.tangent&&(!!fe.normalMap||fe.anisotropy>0),ct=!!le.morphAttributes.position,Xt=!!le.morphAttributes.normal,bn=!!le.morphAttributes.color;let en=ur;fe.toneMapped&&(U===null||U.isXRRenderTarget===!0)&&(en=M.toneMapping);const yi=le.morphAttributes.position||le.morphAttributes.normal||le.morphAttributes.color,Ht=yi!==void 0?yi.length:0,gt=Re.get(fe),ka=v.state.lights;if(he===!0&&(Pe===!0||D!==se)){const kn=D===se&&fe.id===V;Fe.setState(fe,D,kn)}let Vt=!1;fe.version===gt.__version?(gt.needsLights&&gt.lightsStateVersion!==ka.state.version||gt.outputColorSpace!==tt||ae.isBatchedMesh&&gt.batching===!1||!ae.isBatchedMesh&&gt.batching===!0||ae.isInstancedMesh&&gt.instancing===!1||!ae.isInstancedMesh&&gt.instancing===!0||ae.isSkinnedMesh&&gt.skinning===!1||!ae.isSkinnedMesh&&gt.skinning===!0||ae.isInstancedMesh&&gt.instancingColor===!0&&ae.instanceColor===null||ae.isInstancedMesh&&gt.instancingColor===!1&&ae.instanceColor!==null||gt.envMap!==nt||fe.fog===!0&&gt.fog!==We||gt.numClippingPlanes!==void 0&&(gt.numClippingPlanes!==Fe.numPlanes||gt.numIntersection!==Fe.numIntersection)||gt.vertexAlphas!==ft||gt.vertexTangents!==ot||gt.morphTargets!==ct||gt.morphNormals!==Xt||gt.morphColors!==bn||gt.toneMapping!==en||ee.isWebGL2===!0&&gt.morphTargetsCount!==Ht)&&(Vt=!0):(Vt=!0,gt.__version=fe.version);let Di=gt.currentProgram;Vt===!0&&(Di=Is(fe,K,ae));let Ga=!1,Wi=!1,Ha=!1;const un=Di.getUniforms(),ci=gt.uniforms;if(j.useProgram(Di.program)&&(Ga=!0,Wi=!0,Ha=!0),fe.id!==V&&(V=fe.id,Wi=!0),Ga||se!==D){un.setValue(I,"projectionMatrix",D.projectionMatrix),un.setValue(I,"viewMatrix",D.matrixWorldInverse);const kn=un.map.cameraPosition;kn!==void 0&&kn.setValue(I,$.setFromMatrixPosition(D.matrixWorld)),ee.logarithmicDepthBuffer&&un.setValue(I,"logDepthBufFC",2/(Math.log(D.far+1)/Math.LN2)),(fe.isMeshPhongMaterial||fe.isMeshToonMaterial||fe.isMeshLambertMaterial||fe.isMeshBasicMaterial||fe.isMeshStandardMaterial||fe.isShaderMaterial)&&un.setValue(I,"isOrthographic",D.isOrthographicCamera===!0),se!==D&&(se=D,Wi=!0,Ha=!0)}if(ae.isSkinnedMesh){un.setOptional(I,ae,"bindMatrix"),un.setOptional(I,ae,"bindMatrixInverse");const kn=ae.skeleton;kn&&(ee.floatVertexTextures?(kn.boneTexture===null&&kn.computeBoneTexture(),un.setValue(I,"boneTexture",kn.boneTexture,R)):console.warn("THREE.WebGLRenderer: SkinnedMesh can only be used with WebGL 2. With WebGL 1 OES_texture_float and vertex textures support is required."))}ae.isBatchedMesh&&(un.setOptional(I,ae,"batchingTexture"),un.setValue(I,"batchingTexture",ae._matricesTexture,R));const Ds=le.morphAttributes;if((Ds.position!==void 0||Ds.normal!==void 0||Ds.color!==void 0&&ee.isWebGL2===!0)&&Ee.update(ae,le,Di),(Wi||gt.receiveShadow!==ae.receiveShadow)&&(gt.receiveShadow=ae.receiveShadow,un.setValue(I,"receiveShadow",ae.receiveShadow)),fe.isMeshGouraudMaterial&&fe.envMap!==null&&(ci.envMap.value=nt,ci.flipEnvMap.value=nt.isCubeTexture&&nt.isRenderTargetTexture===!1?-1:1),Wi&&(un.setValue(I,"toneMappingExposure",M.toneMappingExposure),gt.needsLights&&ku(ci,Ha),We&&fe.fog===!0&&xe.refreshFogUniforms(ci,We),xe.refreshMaterialUniforms(ci,fe,Me,Q,Ge),Xc.upload(I,tl(gt),ci,R)),fe.isShaderMaterial&&fe.uniformsNeedUpdate===!0&&(Xc.upload(I,tl(gt),ci,R),fe.uniformsNeedUpdate=!1),fe.isSpriteMaterial&&un.setValue(I,"center",ae.center),un.setValue(I,"modelViewMatrix",ae.modelViewMatrix),un.setValue(I,"normalMatrix",ae.normalMatrix),un.setValue(I,"modelMatrix",ae.matrixWorld),fe.isShaderMaterial||fe.isRawShaderMaterial){const kn=fe.uniformsGroups;for(let Us=0,rl=kn.length;Us<rl;Us++)if(ee.isWebGL2){const Ns=kn[Us];St.update(Ns,Di),St.bind(Ns,Di)}else console.warn("THREE.WebGLRenderer: Uniform Buffer Objects can only be used with WebGL 2.")}return Di}function ku(D,K){D.ambientLightColor.needsUpdate=K,D.lightProbe.needsUpdate=K,D.directionalLights.needsUpdate=K,D.directionalLightShadows.needsUpdate=K,D.pointLights.needsUpdate=K,D.pointLightShadows.needsUpdate=K,D.spotLights.needsUpdate=K,D.spotLightShadows.needsUpdate=K,D.rectAreaLights.needsUpdate=K,D.hemisphereLights.needsUpdate=K}function il(D){return D.isMeshLambertMaterial||D.isMeshToonMaterial||D.isMeshPhongMaterial||D.isMeshStandardMaterial||D.isShadowMaterial||D.isShaderMaterial&&D.lights===!0}this.getActiveCubeFace=function(){return O},this.getActiveMipmapLevel=function(){return P},this.getRenderTarget=function(){return U},this.setRenderTargetTextures=function(D,K,le){Re.get(D.texture).__webglTexture=K,Re.get(D.depthTexture).__webglTexture=le;const fe=Re.get(D);fe.__hasExternalTextures=!0,fe.__hasExternalTextures&&(fe.__autoAllocateDepthBuffer=le===void 0,fe.__autoAllocateDepthBuffer||J.has("WEBGL_multisampled_render_to_texture")===!0&&(console.warn("THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided"),fe.__useRenderToTexture=!1))},this.setRenderTargetFramebuffer=function(D,K){const le=Re.get(D);le.__webglFramebuffer=K,le.__useDefaultFramebuffer=K===void 0},this.setRenderTarget=function(D,K=0,le=0){U=D,O=K,P=le;let fe=!0,ae=null,We=!1,Je=!1;if(D){const nt=Re.get(D);nt.__useDefaultFramebuffer!==void 0?(j.bindFramebuffer(I.FRAMEBUFFER,null),fe=!1):nt.__webglFramebuffer===void 0?R.setupRenderTarget(D):nt.__hasExternalTextures&&R.rebindTextures(D,Re.get(D.texture).__webglTexture,Re.get(D.depthTexture).__webglTexture);const ft=D.texture;(ft.isData3DTexture||ft.isDataArrayTexture||ft.isCompressedArrayTexture)&&(Je=!0);const ot=Re.get(D).__webglFramebuffer;D.isWebGLCubeRenderTarget?(Array.isArray(ot[K])?ae=ot[K][le]:ae=ot[K],We=!0):ee.isWebGL2&&D.samples>0&&R.useMultisampledRTT(D)===!1?ae=Re.get(D).__webglMultisampledFramebuffer:Array.isArray(ot)?ae=ot[le]:ae=ot,T.copy(D.viewport),N.copy(D.scissor),ne=D.scissorTest}else T.copy(Ie).multiplyScalar(Me).floor(),N.copy(Se).multiplyScalar(Me).floor(),ne=Ve;if(j.bindFramebuffer(I.FRAMEBUFFER,ae)&&ee.drawBuffers&&fe&&j.drawBuffers(D,ae),j.viewport(T),j.scissor(N),j.setScissorTest(ne),We){const nt=Re.get(D.texture);I.framebufferTexture2D(I.FRAMEBUFFER,I.COLOR_ATTACHMENT0,I.TEXTURE_CUBE_MAP_POSITIVE_X+K,nt.__webglTexture,le)}else if(Je){const nt=Re.get(D.texture),ft=K||0;I.framebufferTextureLayer(I.FRAMEBUFFER,I.COLOR_ATTACHMENT0,nt.__webglTexture,le||0,ft)}V=-1},this.readRenderTargetPixels=function(D,K,le,fe,ae,We,Je){if(!(D&&D.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let tt=Re.get(D).__webglFramebuffer;if(D.isWebGLCubeRenderTarget&&Je!==void 0&&(tt=tt[Je]),tt){j.bindFramebuffer(I.FRAMEBUFFER,tt);try{const nt=D.texture,ft=nt.format,ot=nt.type;if(ft!==Yn&&ke.convert(ft)!==I.getParameter(I.IMPLEMENTATION_COLOR_READ_FORMAT)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}const ct=ot===Ea&&(J.has("EXT_color_buffer_half_float")||ee.isWebGL2&&J.has("EXT_color_buffer_float"));if(ot!==hr&&ke.convert(ot)!==I.getParameter(I.IMPLEMENTATION_COLOR_READ_TYPE)&&!(ot===xi&&(ee.isWebGL2||J.has("OES_texture_float")||J.has("WEBGL_color_buffer_float")))&&!ct){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}K>=0&&K<=D.width-fe&&le>=0&&le<=D.height-ae&&I.readPixels(K,le,fe,ae,ke.convert(ft),ke.convert(ot),We)}finally{const nt=U!==null?Re.get(U).__webglFramebuffer:null;j.bindFramebuffer(I.FRAMEBUFFER,nt)}}},this.copyFramebufferToTexture=function(D,K,le=0){const fe=Math.pow(2,-le),ae=Math.floor(K.image.width*fe),We=Math.floor(K.image.height*fe);R.setTexture2D(K,0),I.copyTexSubImage2D(I.TEXTURE_2D,le,0,0,D.x,D.y,ae,We),j.unbindTexture()},this.copyTextureToTexture=function(D,K,le,fe=0){const ae=K.image.width,We=K.image.height,Je=ke.convert(le.format),tt=ke.convert(le.type);R.setTexture2D(le,0),I.pixelStorei(I.UNPACK_FLIP_Y_WEBGL,le.flipY),I.pixelStorei(I.UNPACK_PREMULTIPLY_ALPHA_WEBGL,le.premultiplyAlpha),I.pixelStorei(I.UNPACK_ALIGNMENT,le.unpackAlignment),K.isDataTexture?I.texSubImage2D(I.TEXTURE_2D,fe,D.x,D.y,ae,We,Je,tt,K.image.data):K.isCompressedTexture?I.compressedTexSubImage2D(I.TEXTURE_2D,fe,D.x,D.y,K.mipmaps[0].width,K.mipmaps[0].height,Je,K.mipmaps[0].data):I.texSubImage2D(I.TEXTURE_2D,fe,D.x,D.y,Je,tt,K.image),fe===0&&le.generateMipmaps&&I.generateMipmap(I.TEXTURE_2D),j.unbindTexture()},this.copyTextureToTexture3D=function(D,K,le,fe,ae=0){if(M.isWebGL1Renderer){console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");return}const We=D.max.x-D.min.x+1,Je=D.max.y-D.min.y+1,tt=D.max.z-D.min.z+1,nt=ke.convert(fe.format),ft=ke.convert(fe.type);let ot;if(fe.isData3DTexture)R.setTexture3D(fe,0),ot=I.TEXTURE_3D;else if(fe.isDataArrayTexture||fe.isCompressedArrayTexture)R.setTexture2DArray(fe,0),ot=I.TEXTURE_2D_ARRAY;else{console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");return}I.pixelStorei(I.UNPACK_FLIP_Y_WEBGL,fe.flipY),I.pixelStorei(I.UNPACK_PREMULTIPLY_ALPHA_WEBGL,fe.premultiplyAlpha),I.pixelStorei(I.UNPACK_ALIGNMENT,fe.unpackAlignment);const ct=I.getParameter(I.UNPACK_ROW_LENGTH),Xt=I.getParameter(I.UNPACK_IMAGE_HEIGHT),bn=I.getParameter(I.UNPACK_SKIP_PIXELS),en=I.getParameter(I.UNPACK_SKIP_ROWS),yi=I.getParameter(I.UNPACK_SKIP_IMAGES),Ht=le.isCompressedTexture?le.mipmaps[ae]:le.image;I.pixelStorei(I.UNPACK_ROW_LENGTH,Ht.width),I.pixelStorei(I.UNPACK_IMAGE_HEIGHT,Ht.height),I.pixelStorei(I.UNPACK_SKIP_PIXELS,D.min.x),I.pixelStorei(I.UNPACK_SKIP_ROWS,D.min.y),I.pixelStorei(I.UNPACK_SKIP_IMAGES,D.min.z),le.isDataTexture||le.isData3DTexture?I.texSubImage3D(ot,ae,K.x,K.y,K.z,We,Je,tt,nt,ft,Ht.data):le.isCompressedArrayTexture?(console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture."),I.compressedTexSubImage3D(ot,ae,K.x,K.y,K.z,We,Je,tt,nt,Ht.data)):I.texSubImage3D(ot,ae,K.x,K.y,K.z,We,Je,tt,nt,ft,Ht),I.pixelStorei(I.UNPACK_ROW_LENGTH,ct),I.pixelStorei(I.UNPACK_IMAGE_HEIGHT,Xt),I.pixelStorei(I.UNPACK_SKIP_PIXELS,bn),I.pixelStorei(I.UNPACK_SKIP_ROWS,en),I.pixelStorei(I.UNPACK_SKIP_IMAGES,yi),ae===0&&fe.generateMipmaps&&I.generateMipmap(ot),j.unbindTexture()},this.initTexture=function(D){D.isCubeTexture?R.setTextureCube(D,0):D.isData3DTexture?R.setTexture3D(D,0):D.isDataArrayTexture||D.isCompressedArrayTexture?R.setTexture2DArray(D,0):R.setTexture2D(D,0),j.unbindTexture()},this.resetState=function(){O=0,P=0,U=null,j.reset(),st.reset()},typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}get coordinateSystem(){return ki}get outputColorSpace(){return this._outputColorSpace}set outputColorSpace(e){this._outputColorSpace=e;const t=this.getContext();t.drawingBufferColorSpace=e===ou?"display-p3":"srgb",t.unpackColorSpace=Ut.workingColorSpace===Xo?"display-p3":"srgb"}get outputEncoding(){return console.warn("THREE.WebGLRenderer: Property .outputEncoding has been removed. Use .outputColorSpace instead."),this.outputColorSpace===dn?Br:Kd}set outputEncoding(e){console.warn("THREE.WebGLRenderer: Property .outputEncoding has been removed. Use .outputColorSpace instead."),this.outputColorSpace=e===Br?dn:Hi}get useLegacyLights(){return console.warn("THREE.WebGLRenderer: The property .useLegacyLights has been deprecated. Migrate your lighting according to the following guide: https://discourse.threejs.org/t/updates-to-lighting-in-three-js-r155/53733."),this._useLegacyLights}set useLegacyLights(e){console.warn("THREE.WebGLRenderer: The property .useLegacyLights has been deprecated. Migrate your lighting according to the following guide: https://discourse.threejs.org/t/updates-to-lighting-in-three-js-r155/53733."),this._useLegacyLights=e}}class Ex extends wx{}Ex.prototype.isWebGL1Renderer=!0;class du{constructor(e,t=25e-5){this.isFogExp2=!0,this.name="",this.color=new qe(e),this.density=t}clone(){return new du(this.color,this.density)}toJSON(){return{type:"FogExp2",name:this.name,color:this.color.getHex(),density:this.density}}}class pu{constructor(e,t=1,n=1e3){this.isFog=!0,this.name="",this.color=new qe(e),this.near=t,this.far=n}clone(){return new pu(this.color,this.near,this.far)}toJSON(){return{type:"Fog",name:this.name,color:this.color.getHex(),near:this.near,far:this.far}}}class Ax extends Ct{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.backgroundBlurriness=0,this.backgroundIntensity=1,this.overrideMaterial=null,typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,t){return super.copy(e,t),e.background!==null&&(this.background=e.background.clone()),e.environment!==null&&(this.environment=e.environment.clone()),e.fog!==null&&(this.fog=e.fog.clone()),this.backgroundBlurriness=e.backgroundBlurriness,this.backgroundIntensity=e.backgroundIntensity,e.overrideMaterial!==null&&(this.overrideMaterial=e.overrideMaterial.clone()),this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){const t=super.toJSON(e);return this.fog!==null&&(t.object.fog=this.fog.toJSON()),this.backgroundBlurriness>0&&(t.object.backgroundBlurriness=this.backgroundBlurriness),this.backgroundIntensity!==1&&(t.object.backgroundIntensity=this.backgroundIntensity),t}}class mu{constructor(e,t){this.isInterleavedBuffer=!0,this.array=e,this.stride=t,this.count=e!==void 0?e.length/t:0,this.usage=Do,this._updateRange={offset:0,count:-1},this.updateRanges=[],this.version=0,this.uuid=oi()}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}get updateRange(){return bs("THREE.InterleavedBuffer: updateRange() is deprecated and will be removed in r169. Use addUpdateRange() instead."),this._updateRange}setUsage(e){return this.usage=e,this}addUpdateRange(e,t){this.updateRanges.push({start:e,count:t})}clearUpdateRanges(){this.updateRanges.length=0}copy(e){return this.array=new e.array.constructor(e.array),this.count=e.count,this.stride=e.stride,this.usage=e.usage,this}copyAt(e,t,n){e*=this.stride,n*=t.stride;for(let i=0,s=this.stride;i<s;i++)this.array[e+i]=t.array[n+i];return this}set(e,t=0){return this.array.set(e,t),this}clone(e){e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=oi()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const t=new this.array.constructor(e.arrayBuffers[this.array.buffer._uuid]),n=new this.constructor(t,this.stride);return n.setUsage(this.usage),n}onUpload(e){return this.onUploadCallback=e,this}toJSON(e){return e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=oi()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=Array.from(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}const Dn=new F;class Es{constructor(e,t,n,i=!1){this.isInterleavedBufferAttribute=!0,this.name="",this.data=e,this.itemSize=t,this.offset=n,this.normalized=i}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(e){this.data.needsUpdate=e}applyMatrix4(e){for(let t=0,n=this.data.count;t<n;t++)Dn.fromBufferAttribute(this,t),Dn.applyMatrix4(e),this.setXYZ(t,Dn.x,Dn.y,Dn.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)Dn.fromBufferAttribute(this,t),Dn.applyNormalMatrix(e),this.setXYZ(t,Dn.x,Dn.y,Dn.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)Dn.fromBufferAttribute(this,t),Dn.transformDirection(e),this.setXYZ(t,Dn.x,Dn.y,Dn.z);return this}getComponent(e,t){let n=this.array[e*this.data.stride+this.offset+t];return this.normalized&&(n=Nn(n,this.array)),n}setComponent(e,t,n){return this.normalized&&(n=ht(n,this.array)),this.data.array[e*this.data.stride+this.offset+t]=n,this}setX(e,t){return this.normalized&&(t=ht(t,this.array)),this.data.array[e*this.data.stride+this.offset]=t,this}setY(e,t){return this.normalized&&(t=ht(t,this.array)),this.data.array[e*this.data.stride+this.offset+1]=t,this}setZ(e,t){return this.normalized&&(t=ht(t,this.array)),this.data.array[e*this.data.stride+this.offset+2]=t,this}setW(e,t){return this.normalized&&(t=ht(t,this.array)),this.data.array[e*this.data.stride+this.offset+3]=t,this}getX(e){let t=this.data.array[e*this.data.stride+this.offset];return this.normalized&&(t=Nn(t,this.array)),t}getY(e){let t=this.data.array[e*this.data.stride+this.offset+1];return this.normalized&&(t=Nn(t,this.array)),t}getZ(e){let t=this.data.array[e*this.data.stride+this.offset+2];return this.normalized&&(t=Nn(t,this.array)),t}getW(e){let t=this.data.array[e*this.data.stride+this.offset+3];return this.normalized&&(t=Nn(t,this.array)),t}setXY(e,t,n){return e=e*this.data.stride+this.offset,this.normalized&&(t=ht(t,this.array),n=ht(n,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this}setXYZ(e,t,n,i){return e=e*this.data.stride+this.offset,this.normalized&&(t=ht(t,this.array),n=ht(n,this.array),i=ht(i,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=i,this}setXYZW(e,t,n,i,s){return e=e*this.data.stride+this.offset,this.normalized&&(t=ht(t,this.array),n=ht(n,this.array),i=ht(i,this.array),s=ht(s,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=i,this.data.array[e+3]=s,this}clone(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will de-interleave buffer data.");const t=[];for(let n=0;n<this.count;n++){const i=n*this.data.stride+this.offset;for(let s=0;s<this.itemSize;s++)t.push(this.data.array[i+s])}return new Ot(new this.array.constructor(t),this.itemSize,this.normalized)}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.clone(e)),new Es(e.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)}toJSON(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will de-interleave buffer data.");const t=[];for(let n=0;n<this.count;n++){const i=n*this.data.stride+this.offset;for(let s=0;s<this.itemSize;s++)t.push(this.data.array[i+s])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:t,normalized:this.normalized}}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.toJSON(e)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}}class lp extends Rn{constructor(e){super(),this.isSpriteMaterial=!0,this.type="SpriteMaterial",this.color=new qe(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.rotation=e.rotation,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}let ha;const co=new F,fa=new F,da=new F,pa=new Le,uo=new Le,Tx=new at,fc=new F,ho=new F,dc=new F,k_=new Le,xf=new Le,G_=new Le;class Cx extends Ct{constructor(e=new lp){if(super(),this.isSprite=!0,this.type="Sprite",ha===void 0){ha=new xt;const t=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),n=new mu(t,5);ha.setIndex([0,1,2,0,2,3]),ha.setAttribute("position",new Es(n,3,0,!1)),ha.setAttribute("uv",new Es(n,2,3,!1))}this.geometry=ha,this.material=e,this.center=new Le(.5,.5)}raycast(e,t){e.camera===null&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),fa.setFromMatrixScale(this.matrixWorld),Tx.copy(e.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(e.camera.matrixWorldInverse,this.matrixWorld),da.setFromMatrixPosition(this.modelViewMatrix),e.camera.isPerspectiveCamera&&this.material.sizeAttenuation===!1&&fa.multiplyScalar(-da.z);const n=this.material.rotation;let i,s;n!==0&&(s=Math.cos(n),i=Math.sin(n));const o=this.center;pc(fc.set(-.5,-.5,0),da,o,fa,i,s),pc(ho.set(.5,-.5,0),da,o,fa,i,s),pc(dc.set(.5,.5,0),da,o,fa,i,s),k_.set(0,0),xf.set(1,0),G_.set(1,1);let c=e.ray.intersectTriangle(fc,ho,dc,!1,co);if(c===null&&(pc(ho.set(-.5,.5,0),da,o,fa,i,s),xf.set(0,1),c=e.ray.intersectTriangle(fc,dc,ho,!1,co),c===null))return;const u=e.ray.origin.distanceTo(co);u<e.near||u>e.far||t.push({distance:u,point:co.clone(),uv:ai.getInterpolation(co,fc,ho,dc,k_,xf,G_,new Le),face:null,object:this})}copy(e,t){return super.copy(e,t),e.center!==void 0&&this.center.copy(e.center),this.material=e.material,this}}function pc(r,e,t,n,i,s){pa.subVectors(r,t).addScalar(.5).multiply(n),i!==void 0?(uo.x=s*pa.x-i*pa.y,uo.y=i*pa.x+s*pa.y):uo.copy(pa),r.copy(e),r.x+=uo.x,r.y+=uo.y,r.applyMatrix4(Tx)}const mc=new F,H_=new F;class Rx extends Ct{constructor(){super(),this._currentLevel=0,this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]},isLOD:{value:!0}}),this.autoUpdate=!0}copy(e){super.copy(e,!1);const t=e.levels;for(let n=0,i=t.length;n<i;n++){const s=t[n];this.addLevel(s.object.clone(),s.distance,s.hysteresis)}return this.autoUpdate=e.autoUpdate,this}addLevel(e,t=0,n=0){t=Math.abs(t);const i=this.levels;let s;for(s=0;s<i.length&&!(t<i[s].distance);s++);return i.splice(s,0,{distance:t,hysteresis:n,object:e}),this.add(e),this}getCurrentLevel(){return this._currentLevel}getObjectForDistance(e){const t=this.levels;if(t.length>0){let n,i;for(n=1,i=t.length;n<i;n++){let s=t[n].distance;if(t[n].object.visible&&(s-=s*t[n].hysteresis),e<s)break}return t[n-1].object}return null}raycast(e,t){if(this.levels.length>0){mc.setFromMatrixPosition(this.matrixWorld);const i=e.ray.origin.distanceTo(mc);this.getObjectForDistance(i).raycast(e,t)}}update(e){const t=this.levels;if(t.length>1){mc.setFromMatrixPosition(e.matrixWorld),H_.setFromMatrixPosition(this.matrixWorld);const n=mc.distanceTo(H_)/e.zoom;t[0].object.visible=!0;let i,s;for(i=1,s=t.length;i<s;i++){let o=t[i].distance;if(t[i].object.visible&&(o-=o*t[i].hysteresis),n>=o)t[i-1].object.visible=!1,t[i].object.visible=!0;else break}for(this._currentLevel=i-1;i<s;i++)t[i].object.visible=!1}}toJSON(e){const t=super.toJSON(e);this.autoUpdate===!1&&(t.object.autoUpdate=!1),t.object.levels=[];const n=this.levels;for(let i=0,s=n.length;i<s;i++){const o=n[i];t.object.levels.push({object:o.object.uuid,distance:o.distance,hysteresis:o.hysteresis})}return t}}const V_=new F,W_=new Nt,X_=new Nt,NI=new F,q_=new at,gc=new F,yf=new Cn,Y_=new at,bf=new La;class Lx extends on{constructor(e,t){super(e,t),this.isSkinnedMesh=!0,this.type="SkinnedMesh",this.bindMode=Kf,this.bindMatrix=new at,this.bindMatrixInverse=new at,this.boundingBox=null,this.boundingSphere=null}computeBoundingBox(){const e=this.geometry;this.boundingBox===null&&(this.boundingBox=new Fn),this.boundingBox.makeEmpty();const t=e.getAttribute("position");for(let n=0;n<t.count;n++)this.getVertexPosition(n,gc),this.boundingBox.expandByPoint(gc)}computeBoundingSphere(){const e=this.geometry;this.boundingSphere===null&&(this.boundingSphere=new Cn),this.boundingSphere.makeEmpty();const t=e.getAttribute("position");for(let n=0;n<t.count;n++)this.getVertexPosition(n,gc),this.boundingSphere.expandByPoint(gc)}copy(e,t){return super.copy(e,t),this.bindMode=e.bindMode,this.bindMatrix.copy(e.bindMatrix),this.bindMatrixInverse.copy(e.bindMatrixInverse),this.skeleton=e.skeleton,e.boundingBox!==null&&(this.boundingBox=e.boundingBox.clone()),e.boundingSphere!==null&&(this.boundingSphere=e.boundingSphere.clone()),this}raycast(e,t){const n=this.material,i=this.matrixWorld;n!==void 0&&(this.boundingSphere===null&&this.computeBoundingSphere(),yf.copy(this.boundingSphere),yf.applyMatrix4(i),e.ray.intersectsSphere(yf)!==!1&&(Y_.copy(i).invert(),bf.copy(e.ray).applyMatrix4(Y_),!(this.boundingBox!==null&&bf.intersectsBox(this.boundingBox)===!1)&&this._computeIntersections(e,t,bf)))}getVertexPosition(e,t){return super.getVertexPosition(e,t),this.applyBoneTransform(e,t),t}bind(e,t){this.skeleton=e,t===void 0&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),t=this.matrixWorld),this.bindMatrix.copy(t),this.bindMatrixInverse.copy(t).invert()}pose(){this.skeleton.pose()}normalizeSkinWeights(){const e=new Nt,t=this.geometry.attributes.skinWeight;for(let n=0,i=t.count;n<i;n++){e.fromBufferAttribute(t,n);const s=1/e.manhattanLength();s!==1/0?e.multiplyScalar(s):e.set(1,0,0,0),t.setXYZW(n,e.x,e.y,e.z,e.w)}}updateMatrixWorld(e){super.updateMatrixWorld(e),this.bindMode===Kf?this.bindMatrixInverse.copy(this.matrixWorld).invert():this.bindMode===kv?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)}applyBoneTransform(e,t){const n=this.skeleton,i=this.geometry;W_.fromBufferAttribute(i.attributes.skinIndex,e),X_.fromBufferAttribute(i.attributes.skinWeight,e),V_.copy(t).applyMatrix4(this.bindMatrix),t.set(0,0,0);for(let s=0;s<4;s++){const o=X_.getComponent(s);if(o!==0){const c=W_.getComponent(s);q_.multiplyMatrices(n.bones[c].matrixWorld,n.boneInverses[c]),t.addScaledVector(NI.copy(V_).applyMatrix4(q_),o)}}return t.applyMatrix4(this.bindMatrixInverse)}}class cp extends Ct{constructor(){super(),this.isBone=!0,this.type="Bone"}}class Ms extends Qt{constructor(e=null,t=1,n=1,i,s,o,c,u,h=sn,p=sn,g,d){super(null,o,c,u,h,p,i,s,g,d),this.isDataTexture=!0,this.image={data:e,width:t,height:n},this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}const $_=new at,OI=new at;class gu{constructor(e=[],t=[]){this.uuid=oi(),this.bones=e.slice(0),this.boneInverses=t,this.boneMatrices=null,this.boneTexture=null,this.init()}init(){const e=this.bones,t=this.boneInverses;if(this.boneMatrices=new Float32Array(e.length*16),t.length===0)this.calculateInverses();else if(e.length!==t.length){console.warn("THREE.Skeleton: Number of inverse bone matrices does not match amount of bones."),this.boneInverses=[];for(let n=0,i=this.bones.length;n<i;n++)this.boneInverses.push(new at)}}calculateInverses(){this.boneInverses.length=0;for(let e=0,t=this.bones.length;e<t;e++){const n=new at;this.bones[e]&&n.copy(this.bones[e].matrixWorld).invert(),this.boneInverses.push(n)}}pose(){for(let e=0,t=this.bones.length;e<t;e++){const n=this.bones[e];n&&n.matrixWorld.copy(this.boneInverses[e]).invert()}for(let e=0,t=this.bones.length;e<t;e++){const n=this.bones[e];n&&(n.parent&&n.parent.isBone?(n.matrix.copy(n.parent.matrixWorld).invert(),n.matrix.multiply(n.matrixWorld)):n.matrix.copy(n.matrixWorld),n.matrix.decompose(n.position,n.quaternion,n.scale))}}update(){const e=this.bones,t=this.boneInverses,n=this.boneMatrices,i=this.boneTexture;for(let s=0,o=e.length;s<o;s++){const c=e[s]?e[s].matrixWorld:OI;$_.multiplyMatrices(c,t[s]),$_.toArray(n,s*16)}i!==null&&(i.needsUpdate=!0)}clone(){return new gu(this.bones,this.boneInverses)}computeBoneTexture(){let e=Math.sqrt(this.bones.length*4);e=Math.ceil(e/4)*4,e=Math.max(e,4);const t=new Float32Array(e*e*4);t.set(this.boneMatrices);const n=new Ms(t,e,e,Yn,xi);return n.needsUpdate=!0,this.boneMatrices=t,this.boneTexture=n,this}getBoneByName(e){for(let t=0,n=this.bones.length;t<n;t++){const i=this.bones[t];if(i.name===e)return i}}dispose(){this.boneTexture!==null&&(this.boneTexture.dispose(),this.boneTexture=null)}fromJSON(e,t){this.uuid=e.uuid;for(let n=0,i=e.bones.length;n<i;n++){const s=e.bones[n];let o=t[s];o===void 0&&(console.warn("THREE.Skeleton: No bone found with UUID:",s),o=new cp),this.bones.push(o),this.boneInverses.push(new at().fromArray(e.boneInverses[n]))}return this.init(),this}toJSON(){const e={metadata:{version:4.6,type:"Skeleton",generator:"Skeleton.toJSON"},bones:[],boneInverses:[]};e.uuid=this.uuid;const t=this.bones,n=this.boneInverses;for(let i=0,s=t.length;i<s;i++){const o=t[i];e.bones.push(o.uuid);const c=n[i];e.boneInverses.push(c.toArray())}return e}}class Ca extends Ot{constructor(e,t,n,i=1){super(e,t,n),this.isInstancedBufferAttribute=!0,this.meshPerAttribute=i}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}toJSON(){const e=super.toJSON();return e.meshPerAttribute=this.meshPerAttribute,e.isInstancedBufferAttribute=!0,e}}const ma=new at,Z_=new at,_c=[],J_=new Fn,FI=new at,fo=new on,po=new Cn;class Px extends on{constructor(e,t,n){super(e,t),this.isInstancedMesh=!0,this.instanceMatrix=new Ca(new Float32Array(n*16),16),this.instanceColor=null,this.count=n,this.boundingBox=null,this.boundingSphere=null;for(let i=0;i<n;i++)this.setMatrixAt(i,FI)}computeBoundingBox(){const e=this.geometry,t=this.count;this.boundingBox===null&&(this.boundingBox=new Fn),e.boundingBox===null&&e.computeBoundingBox(),this.boundingBox.makeEmpty();for(let n=0;n<t;n++)this.getMatrixAt(n,ma),J_.copy(e.boundingBox).applyMatrix4(ma),this.boundingBox.union(J_)}computeBoundingSphere(){const e=this.geometry,t=this.count;this.boundingSphere===null&&(this.boundingSphere=new Cn),e.boundingSphere===null&&e.computeBoundingSphere(),this.boundingSphere.makeEmpty();for(let n=0;n<t;n++)this.getMatrixAt(n,ma),po.copy(e.boundingSphere).applyMatrix4(ma),this.boundingSphere.union(po)}copy(e,t){return super.copy(e,t),this.instanceMatrix.copy(e.instanceMatrix),e.instanceColor!==null&&(this.instanceColor=e.instanceColor.clone()),this.count=e.count,e.boundingBox!==null&&(this.boundingBox=e.boundingBox.clone()),e.boundingSphere!==null&&(this.boundingSphere=e.boundingSphere.clone()),this}getColorAt(e,t){t.fromArray(this.instanceColor.array,e*3)}getMatrixAt(e,t){t.fromArray(this.instanceMatrix.array,e*16)}raycast(e,t){const n=this.matrixWorld,i=this.count;if(fo.geometry=this.geometry,fo.material=this.material,fo.material!==void 0&&(this.boundingSphere===null&&this.computeBoundingSphere(),po.copy(this.boundingSphere),po.applyMatrix4(n),e.ray.intersectsSphere(po)!==!1))for(let s=0;s<i;s++){this.getMatrixAt(s,ma),Z_.multiplyMatrices(n,ma),fo.matrixWorld=Z_,fo.raycast(e,_c);for(let o=0,c=_c.length;o<c;o++){const u=_c[o];u.instanceId=s,u.object=this,t.push(u)}_c.length=0}}setColorAt(e,t){this.instanceColor===null&&(this.instanceColor=new Ca(new Float32Array(this.instanceMatrix.count*3),3)),t.toArray(this.instanceColor.array,e*3)}setMatrixAt(e,t){t.toArray(this.instanceMatrix.array,e*16)}updateMorphTargets(){}dispose(){this.dispatchEvent({type:"dispose"})}}function BI(r,e){return r.z-e.z}function zI(r,e){return e.z-r.z}class kI{constructor(){this.index=0,this.pool=[],this.list=[]}push(e,t){const n=this.pool,i=this.list;this.index>=n.length&&n.push({start:-1,count:-1,z:-1});const s=n[this.index];i.push(s),this.index++,s.start=e.start,s.count=e.count,s.z=t}reset(){this.list.length=0,this.index=0}}const ga="batchId",Ir=new at,K_=new at,GI=new at,j_=new at,Mf=new $o,vc=new Fn,rs=new Cn,mo=new F,Sf=new kI,An=new on,xc=[];function HI(r,e,t=0){const n=e.itemSize;if(r.isInterleavedBufferAttribute||r.array.constructor!==e.array.constructor){const i=r.count;for(let s=0;s<i;s++)for(let o=0;o<n;o++)e.setComponent(s+t,o,r.getComponent(s,o))}else e.array.set(r.array,t*n);e.needsUpdate=!0}class Ix extends on{get maxGeometryCount(){return this._maxGeometryCount}constructor(e,t,n=t*2,i){super(new xt,i),this.isBatchedMesh=!0,this.perObjectFrustumCulled=!0,this.sortObjects=!0,this.boundingBox=null,this.boundingSphere=null,this.customSort=null,this._drawRanges=[],this._reservedRanges=[],this._visibility=[],this._active=[],this._bounds=[],this._maxGeometryCount=e,this._maxVertexCount=t,this._maxIndexCount=n,this._geometryInitialized=!1,this._geometryCount=0,this._multiDrawCounts=new Int32Array(e),this._multiDrawStarts=new Int32Array(e),this._multiDrawCount=0,this._visibilityChanged=!0,this._matricesTexture=null,this._initMatricesTexture()}_initMatricesTexture(){let e=Math.sqrt(this._maxGeometryCount*4);e=Math.ceil(e/4)*4,e=Math.max(e,4);const t=new Float32Array(e*e*4),n=new Ms(t,e,e,Yn,xi);this._matricesTexture=n}_initializeGeometry(e){const t=this.geometry,n=this._maxVertexCount,i=this._maxGeometryCount,s=this._maxIndexCount;if(this._geometryInitialized===!1){for(const c in e.attributes){const u=e.getAttribute(c),{array:h,itemSize:p,normalized:g}=u,d=new h.constructor(n*p),m=new u.constructor(d,p,g);m.setUsage(u.usage),t.setAttribute(c,m)}if(e.getIndex()!==null){const c=n>65536?new Uint32Array(s):new Uint16Array(s);t.setIndex(new Ot(c,1))}const o=i>65536?new Uint32Array(n):new Uint16Array(n);t.setAttribute(ga,new Ot(o,1)),this._geometryInitialized=!0}}_validateGeometry(e){if(e.getAttribute(ga))throw new Error(`BatchedMesh: Geometry cannot use attribute "${ga}"`);const t=this.geometry;if(!!e.getIndex()!=!!t.getIndex())throw new Error('BatchedMesh: All geometries must consistently have "index".');for(const n in t.attributes){if(n===ga)continue;if(!e.hasAttribute(n))throw new Error(`BatchedMesh: Added geometry missing "${n}". All geometries must have consistent attributes.`);const i=e.getAttribute(n),s=t.getAttribute(n);if(i.itemSize!==s.itemSize||i.normalized!==s.normalized)throw new Error("BatchedMesh: All attributes must have a consistent itemSize and normalized value.")}}setCustomSort(e){return this.customSort=e,this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new Fn);const e=this._geometryCount,t=this.boundingBox,n=this._active;t.makeEmpty();for(let i=0;i<e;i++)n[i]!==!1&&(this.getMatrixAt(i,Ir),this.getBoundingBoxAt(i,vc).applyMatrix4(Ir),t.union(vc))}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new Cn);const e=this._geometryCount,t=this.boundingSphere,n=this._active;t.makeEmpty();for(let i=0;i<e;i++)n[i]!==!1&&(this.getMatrixAt(i,Ir),this.getBoundingSphereAt(i,rs).applyMatrix4(Ir),t.union(rs))}addGeometry(e,t=-1,n=-1){if(this._initializeGeometry(e),this._validateGeometry(e),this._geometryCount>=this._maxGeometryCount)throw new Error("BatchedMesh: Maximum geometry count reached.");const i={vertexStart:-1,vertexCount:-1,indexStart:-1,indexCount:-1};let s=null;const o=this._reservedRanges,c=this._drawRanges,u=this._bounds;this._geometryCount!==0&&(s=o[o.length-1]),t===-1?i.vertexCount=e.getAttribute("position").count:i.vertexCount=t,s===null?i.vertexStart=0:i.vertexStart=s.vertexStart+s.vertexCount;const h=e.getIndex(),p=h!==null;if(p&&(n===-1?i.indexCount=h.count:i.indexCount=n,s===null?i.indexStart=0:i.indexStart=s.indexStart+s.indexCount),i.indexStart!==-1&&i.indexStart+i.indexCount>this._maxIndexCount||i.vertexStart+i.vertexCount>this._maxVertexCount)throw new Error("BatchedMesh: Reserved space request exceeds the maximum buffer size.");const g=this._visibility,d=this._active,m=this._matricesTexture,_=this._matricesTexture.image.data;g.push(!0),d.push(!0);const y=this._geometryCount;this._geometryCount++,GI.toArray(_,y*16),m.needsUpdate=!0,o.push(i),c.push({start:p?i.indexStart:i.vertexStart,count:-1}),u.push({boxInitialized:!1,box:new Fn,sphereInitialized:!1,sphere:new Cn});const v=this.geometry.getAttribute(ga);for(let x=0;x<i.vertexCount;x++)v.setX(i.vertexStart+x,y);return v.needsUpdate=!0,this.setGeometryAt(y,e),y}setGeometryAt(e,t){if(e>=this._geometryCount)throw new Error("BatchedMesh: Maximum geometry count reached.");this._validateGeometry(t);const n=this.geometry,i=n.getIndex()!==null,s=n.getIndex(),o=t.getIndex(),c=this._reservedRanges[e];if(i&&o.count>c.indexCount||t.attributes.position.count>c.vertexCount)throw new Error("BatchedMesh: Reserved space not large enough for provided geometry.");const u=c.vertexStart,h=c.vertexCount;for(const m in n.attributes){if(m===ga)continue;const _=t.getAttribute(m),y=n.getAttribute(m);HI(_,y,u);const v=_.itemSize;for(let x=_.count,w=h;x<w;x++){const M=u+x;for(let E=0;E<v;E++)y.setComponent(M,E,0)}y.needsUpdate=!0}if(i){const m=c.indexStart;for(let _=0;_<o.count;_++)s.setX(m+_,u+o.getX(_));for(let _=o.count,y=c.indexCount;_<y;_++)s.setX(m+_,u);s.needsUpdate=!0}const p=this._bounds[e];t.boundingBox!==null?(p.box.copy(t.boundingBox),p.boxInitialized=!0):p.boxInitialized=!1,t.boundingSphere!==null?(p.sphere.copy(t.boundingSphere),p.sphereInitialized=!0):p.sphereInitialized=!1;const g=this._drawRanges[e],d=t.getAttribute("position");return g.count=i?o.count:d.count,this._visibilityChanged=!0,e}deleteGeometry(e){const t=this._active;return e>=t.length||t[e]===!1?this:(t[e]=!1,this._visibilityChanged=!0,this)}getBoundingBoxAt(e,t){if(this._active[e]===!1)return null;const i=this._bounds[e],s=i.box,o=this.geometry;if(i.boxInitialized===!1){s.makeEmpty();const c=o.index,u=o.attributes.position,h=this._drawRanges[e];for(let p=h.start,g=h.start+h.count;p<g;p++){let d=p;c&&(d=c.getX(d)),s.expandByPoint(mo.fromBufferAttribute(u,d))}i.boxInitialized=!0}return t.copy(s),t}getBoundingSphereAt(e,t){if(this._active[e]===!1)return null;const i=this._bounds[e],s=i.sphere,o=this.geometry;if(i.sphereInitialized===!1){s.makeEmpty(),this.getBoundingBoxAt(e,vc),vc.getCenter(s.center);const c=o.index,u=o.attributes.position,h=this._drawRanges[e];let p=0;for(let g=h.start,d=h.start+h.count;g<d;g++){let m=g;c&&(m=c.getX(m)),mo.fromBufferAttribute(u,m),p=Math.max(p,s.center.distanceToSquared(mo))}s.radius=Math.sqrt(p),i.sphereInitialized=!0}return t.copy(s),t}setMatrixAt(e,t){const n=this._active,i=this._matricesTexture,s=this._matricesTexture.image.data,o=this._geometryCount;return e>=o||n[e]===!1?this:(t.toArray(s,e*16),i.needsUpdate=!0,this)}getMatrixAt(e,t){const n=this._active,i=this._matricesTexture.image.data,s=this._geometryCount;return e>=s||n[e]===!1?null:t.fromArray(i,e*16)}setVisibleAt(e,t){const n=this._visibility,i=this._active,s=this._geometryCount;return e>=s||i[e]===!1||n[e]===t?this:(n[e]=t,this._visibilityChanged=!0,this)}getVisibleAt(e){const t=this._visibility,n=this._active,i=this._geometryCount;return e>=i||n[e]===!1?!1:t[e]}raycast(e,t){const n=this._visibility,i=this._active,s=this._drawRanges,o=this._geometryCount,c=this.matrixWorld,u=this.geometry;An.material=this.material,An.geometry.index=u.index,An.geometry.attributes=u.attributes,An.geometry.boundingBox===null&&(An.geometry.boundingBox=new Fn),An.geometry.boundingSphere===null&&(An.geometry.boundingSphere=new Cn);for(let h=0;h<o;h++){if(!n[h]||!i[h])continue;const p=s[h];An.geometry.setDrawRange(p.start,p.count),this.getMatrixAt(h,An.matrixWorld).premultiply(c),this.getBoundingBoxAt(h,An.geometry.boundingBox),this.getBoundingSphereAt(h,An.geometry.boundingSphere),An.raycast(e,xc);for(let g=0,d=xc.length;g<d;g++){const m=xc[g];m.object=this,m.batchId=h,t.push(m)}xc.length=0}An.material=null,An.geometry.index=null,An.geometry.attributes={},An.geometry.setDrawRange(0,1/0)}copy(e){return super.copy(e),this.geometry=e.geometry.clone(),this.perObjectFrustumCulled=e.perObjectFrustumCulled,this.sortObjects=e.sortObjects,this.boundingBox=e.boundingBox!==null?e.boundingBox.clone():null,this.boundingSphere=e.boundingSphere!==null?e.boundingSphere.clone():null,this._drawRanges=e._drawRanges.map(t=>({...t})),this._reservedRanges=e._reservedRanges.map(t=>({...t})),this._visibility=e._visibility.slice(),this._active=e._active.slice(),this._bounds=e._bounds.map(t=>({boxInitialized:t.boxInitialized,box:t.box.clone(),sphereInitialized:t.sphereInitialized,sphere:t.sphere.clone()})),this._maxGeometryCount=e._maxGeometryCount,this._maxVertexCount=e._maxVertexCount,this._maxIndexCount=e._maxIndexCount,this._geometryInitialized=e._geometryInitialized,this._geometryCount=e._geometryCount,this._multiDrawCounts=e._multiDrawCounts.slice(),this._multiDrawStarts=e._multiDrawStarts.slice(),this._matricesTexture=e._matricesTexture.clone(),this._matricesTexture.image.data=this._matricesTexture.image.slice(),this}dispose(){return this.geometry.dispose(),this._matricesTexture.dispose(),this._matricesTexture=null,this}onBeforeRender(e,t,n,i,s){if(!this._visibilityChanged&&!this.perObjectFrustumCulled&&!this.sortObjects)return;const o=i.getIndex(),c=o===null?1:o.array.BYTES_PER_ELEMENT,u=this._active,h=this._visibility,p=this._multiDrawStarts,g=this._multiDrawCounts,d=this._drawRanges,m=this.perObjectFrustumCulled;m&&(j_.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse).multiply(this.matrixWorld),Mf.setFromProjectionMatrix(j_,e.coordinateSystem));let _=0;if(this.sortObjects){K_.copy(this.matrixWorld).invert(),mo.setFromMatrixPosition(n.matrixWorld).applyMatrix4(K_);for(let x=0,w=h.length;x<w;x++)if(h[x]&&u[x]){this.getMatrixAt(x,Ir),this.getBoundingSphereAt(x,rs).applyMatrix4(Ir);let M=!1;if(m&&(M=!Mf.intersectsSphere(rs)),!M){const E=mo.distanceTo(rs.center);Sf.push(d[x],E)}}const y=Sf.list,v=this.customSort;v===null?y.sort(s.transparent?zI:BI):v.call(this,y,n);for(let x=0,w=y.length;x<w;x++){const M=y[x];p[_]=M.start*c,g[_]=M.count,_++}Sf.reset()}else for(let y=0,v=h.length;y<v;y++)if(h[y]&&u[y]){let x=!1;if(m&&(this.getMatrixAt(y,Ir),this.getBoundingSphereAt(y,rs).applyMatrix4(Ir),x=!Mf.intersectsSphere(rs)),!x){const w=d[y];p[_]=w.start*c,g[_]=w.count,_++}}this._multiDrawCount=_,this._visibilityChanged=!1}onBeforeShadow(e,t,n,i,s,o){this.onBeforeRender(e,null,i,s,o)}}class Bn extends Rn{constructor(e){super(),this.isLineBasicMaterial=!0,this.type="LineBasicMaterial",this.color=new qe(16777215),this.map=null,this.linewidth=1,this.linecap="round",this.linejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this.fog=e.fog,this}}const Q_=new F,e0=new F,t0=new at,wf=new La,yc=new Cn;class kr extends Ct{constructor(e=new xt,t=new Bn){super(),this.isLine=!0,this.type="Line",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}computeLineDistances(){const e=this.geometry;if(e.index===null){const t=e.attributes.position,n=[0];for(let i=1,s=t.count;i<s;i++)Q_.fromBufferAttribute(t,i-1),e0.fromBufferAttribute(t,i),n[i]=n[i-1],n[i]+=Q_.distanceTo(e0);e.setAttribute("lineDistance",new $e(n,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}raycast(e,t){const n=this.geometry,i=this.matrixWorld,s=e.params.Line.threshold,o=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),yc.copy(n.boundingSphere),yc.applyMatrix4(i),yc.radius+=s,e.ray.intersectsSphere(yc)===!1)return;t0.copy(i).invert(),wf.copy(e.ray).applyMatrix4(t0);const c=s/((this.scale.x+this.scale.y+this.scale.z)/3),u=c*c,h=new F,p=new F,g=new F,d=new F,m=this.isLineSegments?2:1,_=n.index,v=n.attributes.position;if(_!==null){const x=Math.max(0,o.start),w=Math.min(_.count,o.start+o.count);for(let M=x,E=w-1;M<E;M+=m){const O=_.getX(M),P=_.getX(M+1);if(h.fromBufferAttribute(v,O),p.fromBufferAttribute(v,P),wf.distanceSqToSegment(h,p,d,g)>u)continue;d.applyMatrix4(this.matrixWorld);const V=e.ray.origin.distanceTo(d);V<e.near||V>e.far||t.push({distance:V,point:g.clone().applyMatrix4(this.matrixWorld),index:M,face:null,faceIndex:null,object:this})}}else{const x=Math.max(0,o.start),w=Math.min(v.count,o.start+o.count);for(let M=x,E=w-1;M<E;M+=m){if(h.fromBufferAttribute(v,M),p.fromBufferAttribute(v,M+1),wf.distanceSqToSegment(h,p,d,g)>u)continue;d.applyMatrix4(this.matrixWorld);const P=e.ray.origin.distanceTo(d);P<e.near||P>e.far||t.push({distance:P,point:g.clone().applyMatrix4(this.matrixWorld),index:M,face:null,faceIndex:null,object:this})}}}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,o=i.length;s<o;s++){const c=i[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[c]=s}}}}}const n0=new F,i0=new F;class Vi extends kr{constructor(e,t){super(e,t),this.isLineSegments=!0,this.type="LineSegments"}computeLineDistances(){const e=this.geometry;if(e.index===null){const t=e.attributes.position,n=[];for(let i=0,s=t.count;i<s;i+=2)n0.fromBufferAttribute(t,i),i0.fromBufferAttribute(t,i+1),n[i]=i===0?0:n[i-1],n[i+1]=n[i]+n0.distanceTo(i0);e.setAttribute("lineDistance",new $e(n,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}}class Dx extends kr{constructor(e,t){super(e,t),this.isLineLoop=!0,this.type="LineLoop"}}class up extends Rn{constructor(e){super(),this.isPointsMaterial=!0,this.type="PointsMaterial",this.color=new qe(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.size=e.size,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}const r0=new at,Cd=new La,bc=new Cn,Mc=new F;class Ux extends Ct{constructor(e=new xt,t=new up){super(),this.isPoints=!0,this.type="Points",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}raycast(e,t){const n=this.geometry,i=this.matrixWorld,s=e.params.Points.threshold,o=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),bc.copy(n.boundingSphere),bc.applyMatrix4(i),bc.radius+=s,e.ray.intersectsSphere(bc)===!1)return;r0.copy(i).invert(),Cd.copy(e.ray).applyMatrix4(r0);const c=s/((this.scale.x+this.scale.y+this.scale.z)/3),u=c*c,h=n.index,g=n.attributes.position;if(h!==null){const d=Math.max(0,o.start),m=Math.min(h.count,o.start+o.count);for(let _=d,y=m;_<y;_++){const v=h.getX(_);Mc.fromBufferAttribute(g,v),s0(Mc,v,u,i,e,t,this)}}else{const d=Math.max(0,o.start),m=Math.min(g.count,o.start+o.count);for(let _=d,y=m;_<y;_++)Mc.fromBufferAttribute(g,_),s0(Mc,_,u,i,e,t,this)}}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,o=i.length;s<o;s++){const c=i[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[c]=s}}}}}function s0(r,e,t,n,i,s,o){const c=Cd.distanceSqToPoint(r);if(c<t){const u=new F;Cd.closestPointToPoint(r,u),u.applyMatrix4(n);const h=i.ray.origin.distanceTo(u);if(h<i.near||h>i.far)return;s.push({distance:h,distanceToRay:Math.sqrt(c),point:u,index:e,face:null,object:o})}}class VI extends Qt{constructor(e,t,n,i,s,o,c,u,h){super(e,t,n,i,s,o,c,u,h),this.isVideoTexture=!0,this.minFilter=o!==void 0?o:$t,this.magFilter=s!==void 0?s:$t,this.generateMipmaps=!1;const p=this;function g(){p.needsUpdate=!0,e.requestVideoFrameCallback(g)}"requestVideoFrameCallback"in e&&e.requestVideoFrameCallback(g)}clone(){return new this.constructor(this.image).copy(this)}update(){const e=this.image;"requestVideoFrameCallback"in e===!1&&e.readyState>=e.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}}class WI extends Qt{constructor(e,t){super({width:e,height:t}),this.isFramebufferTexture=!0,this.magFilter=sn,this.minFilter=sn,this.generateMipmaps=!1,this.needsUpdate=!0}}class _u extends Qt{constructor(e,t,n,i,s,o,c,u,h,p,g,d){super(null,o,c,u,h,p,i,s,g,d),this.isCompressedTexture=!0,this.image={width:t,height:n},this.mipmaps=e,this.flipY=!1,this.generateMipmaps=!1}}class XI extends _u{constructor(e,t,n,i,s,o){super(e,t,n,s,o),this.isCompressedArrayTexture=!0,this.image.depth=i,this.wrapR=Tn}}class qI extends _u{constructor(e,t,n){super(void 0,e[0].width,e[0].height,t,n,dr),this.isCompressedCubeTexture=!0,this.isCubeTexture=!0,this.image=e}}class YI extends Qt{constructor(e,t,n,i,s,o,c,u,h){super(e,t,n,i,s,o,c,u,h),this.isCanvasTexture=!0,this.needsUpdate=!0}}class Pi{constructor(){this.type="Curve",this.arcLengthDivisions=200}getPoint(){return console.warn("THREE.Curve: .getPoint() not implemented."),null}getPointAt(e,t){const n=this.getUtoTmapping(e);return this.getPoint(n,t)}getPoints(e=5){const t=[];for(let n=0;n<=e;n++)t.push(this.getPoint(n/e));return t}getSpacedPoints(e=5){const t=[];for(let n=0;n<=e;n++)t.push(this.getPointAt(n/e));return t}getLength(){const e=this.getLengths();return e[e.length-1]}getLengths(e=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===e+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const t=[];let n,i=this.getPoint(0),s=0;t.push(0);for(let o=1;o<=e;o++)n=this.getPoint(o/e),s+=n.distanceTo(i),t.push(s),i=n;return this.cacheArcLengths=t,t}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(e,t){const n=this.getLengths();let i=0;const s=n.length;let o;t?o=t:o=e*n[s-1];let c=0,u=s-1,h;for(;c<=u;)if(i=Math.floor(c+(u-c)/2),h=n[i]-o,h<0)c=i+1;else if(h>0)u=i-1;else{u=i;break}if(i=u,n[i]===o)return i/(s-1);const p=n[i],d=n[i+1]-p,m=(o-p)/d;return(i+m)/(s-1)}getTangent(e,t){let i=e-1e-4,s=e+1e-4;i<0&&(i=0),s>1&&(s=1);const o=this.getPoint(i),c=this.getPoint(s),u=t||(o.isVector2?new Le:new F);return u.copy(c).sub(o).normalize(),u}getTangentAt(e,t){const n=this.getUtoTmapping(e);return this.getTangent(n,t)}computeFrenetFrames(e,t){const n=new F,i=[],s=[],o=[],c=new F,u=new at;for(let m=0;m<=e;m++){const _=m/e;i[m]=this.getTangentAt(_,new F)}s[0]=new F,o[0]=new F;let h=Number.MAX_VALUE;const p=Math.abs(i[0].x),g=Math.abs(i[0].y),d=Math.abs(i[0].z);p<=h&&(h=p,n.set(1,0,0)),g<=h&&(h=g,n.set(0,1,0)),d<=h&&n.set(0,0,1),c.crossVectors(i[0],n).normalize(),s[0].crossVectors(i[0],c),o[0].crossVectors(i[0],s[0]);for(let m=1;m<=e;m++){if(s[m]=s[m-1].clone(),o[m]=o[m-1].clone(),c.crossVectors(i[m-1],i[m]),c.length()>Number.EPSILON){c.normalize();const _=Math.acos(jt(i[m-1].dot(i[m]),-1,1));s[m].applyMatrix4(u.makeRotationAxis(c,_))}o[m].crossVectors(i[m],s[m])}if(t===!0){let m=Math.acos(jt(s[0].dot(s[e]),-1,1));m/=e,i[0].dot(c.crossVectors(s[0],s[e]))>0&&(m=-m);for(let _=1;_<=e;_++)s[_].applyMatrix4(u.makeRotationAxis(i[_],m*_)),o[_].crossVectors(i[_],s[_])}return{tangents:i,normals:s,binormals:o}}clone(){return new this.constructor().copy(this)}copy(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}toJSON(){const e={metadata:{version:4.6,type:"Curve",generator:"Curve.toJSON"}};return e.arcLengthDivisions=this.arcLengthDivisions,e.type=this.type,e}fromJSON(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}}class vu extends Pi{constructor(e=0,t=0,n=1,i=1,s=0,o=Math.PI*2,c=!1,u=0){super(),this.isEllipseCurve=!0,this.type="EllipseCurve",this.aX=e,this.aY=t,this.xRadius=n,this.yRadius=i,this.aStartAngle=s,this.aEndAngle=o,this.aClockwise=c,this.aRotation=u}getPoint(e,t){const n=t||new Le,i=Math.PI*2;let s=this.aEndAngle-this.aStartAngle;const o=Math.abs(s)<Number.EPSILON;for(;s<0;)s+=i;for(;s>i;)s-=i;s<Number.EPSILON&&(o?s=0:s=i),this.aClockwise===!0&&!o&&(s===i?s=-i:s=s-i);const c=this.aStartAngle+e*s;let u=this.aX+this.xRadius*Math.cos(c),h=this.aY+this.yRadius*Math.sin(c);if(this.aRotation!==0){const p=Math.cos(this.aRotation),g=Math.sin(this.aRotation),d=u-this.aX,m=h-this.aY;u=d*p-m*g+this.aX,h=d*g+m*p+this.aY}return n.set(u,h)}copy(e){return super.copy(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}toJSON(){const e=super.toJSON();return e.aX=this.aX,e.aY=this.aY,e.xRadius=this.xRadius,e.yRadius=this.yRadius,e.aStartAngle=this.aStartAngle,e.aEndAngle=this.aEndAngle,e.aClockwise=this.aClockwise,e.aRotation=this.aRotation,e}fromJSON(e){return super.fromJSON(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}}class Nx extends vu{constructor(e,t,n,i,s,o){super(e,t,n,n,i,s,o),this.isArcCurve=!0,this.type="ArcCurve"}}function hp(){let r=0,e=0,t=0,n=0;function i(s,o,c,u){r=s,e=c,t=-3*s+3*o-2*c-u,n=2*s-2*o+c+u}return{initCatmullRom:function(s,o,c,u,h){i(o,c,h*(c-s),h*(u-o))},initNonuniformCatmullRom:function(s,o,c,u,h,p,g){let d=(o-s)/h-(c-s)/(h+p)+(c-o)/p,m=(c-o)/p-(u-o)/(p+g)+(u-c)/g;d*=p,m*=p,i(o,c,d,m)},calc:function(s){const o=s*s,c=o*s;return r+e*s+t*o+n*c}}}const Sc=new F,Ef=new hp,Af=new hp,Tf=new hp;class Ox extends Pi{constructor(e=[],t=!1,n="centripetal",i=.5){super(),this.isCatmullRomCurve3=!0,this.type="CatmullRomCurve3",this.points=e,this.closed=t,this.curveType=n,this.tension=i}getPoint(e,t=new F){const n=t,i=this.points,s=i.length,o=(s-(this.closed?0:1))*e;let c=Math.floor(o),u=o-c;this.closed?c+=c>0?0:(Math.floor(Math.abs(c)/s)+1)*s:u===0&&c===s-1&&(c=s-2,u=1);let h,p;this.closed||c>0?h=i[(c-1)%s]:(Sc.subVectors(i[0],i[1]).add(i[0]),h=Sc);const g=i[c%s],d=i[(c+1)%s];if(this.closed||c+2<s?p=i[(c+2)%s]:(Sc.subVectors(i[s-1],i[s-2]).add(i[s-1]),p=Sc),this.curveType==="centripetal"||this.curveType==="chordal"){const m=this.curveType==="chordal"?.5:.25;let _=Math.pow(h.distanceToSquared(g),m),y=Math.pow(g.distanceToSquared(d),m),v=Math.pow(d.distanceToSquared(p),m);y<1e-4&&(y=1),_<1e-4&&(_=y),v<1e-4&&(v=y),Ef.initNonuniformCatmullRom(h.x,g.x,d.x,p.x,_,y,v),Af.initNonuniformCatmullRom(h.y,g.y,d.y,p.y,_,y,v),Tf.initNonuniformCatmullRom(h.z,g.z,d.z,p.z,_,y,v)}else this.curveType==="catmullrom"&&(Ef.initCatmullRom(h.x,g.x,d.x,p.x,this.tension),Af.initCatmullRom(h.y,g.y,d.y,p.y,this.tension),Tf.initCatmullRom(h.z,g.z,d.z,p.z,this.tension));return n.set(Ef.calc(u),Af.calc(u),Tf.calc(u)),n}copy(e){super.copy(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(i.clone())}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,n=this.points.length;t<n;t++){const i=this.points[t];e.points.push(i.toArray())}return e.closed=this.closed,e.curveType=this.curveType,e.tension=this.tension,e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(new F().fromArray(i))}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}}function a0(r,e,t,n,i){const s=(n-e)*.5,o=(i-t)*.5,c=r*r,u=r*c;return(2*t-2*n+s+o)*u+(-3*t+3*n-2*s-o)*c+s*r+t}function $I(r,e){const t=1-r;return t*t*e}function ZI(r,e){return 2*(1-r)*r*e}function JI(r,e){return r*r*e}function yo(r,e,t,n){return $I(r,e)+ZI(r,t)+JI(r,n)}function KI(r,e){const t=1-r;return t*t*t*e}function jI(r,e){const t=1-r;return 3*t*t*r*e}function QI(r,e){return 3*(1-r)*r*r*e}function e3(r,e){return r*r*r*e}function bo(r,e,t,n,i){return KI(r,e)+jI(r,t)+QI(r,n)+e3(r,i)}class fp extends Pi{constructor(e=new Le,t=new Le,n=new Le,i=new Le){super(),this.isCubicBezierCurve=!0,this.type="CubicBezierCurve",this.v0=e,this.v1=t,this.v2=n,this.v3=i}getPoint(e,t=new Le){const n=t,i=this.v0,s=this.v1,o=this.v2,c=this.v3;return n.set(bo(e,i.x,s.x,o.x,c.x),bo(e,i.y,s.y,o.y,c.y)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}class Fx extends Pi{constructor(e=new F,t=new F,n=new F,i=new F){super(),this.isCubicBezierCurve3=!0,this.type="CubicBezierCurve3",this.v0=e,this.v1=t,this.v2=n,this.v3=i}getPoint(e,t=new F){const n=t,i=this.v0,s=this.v1,o=this.v2,c=this.v3;return n.set(bo(e,i.x,s.x,o.x,c.x),bo(e,i.y,s.y,o.y,c.y),bo(e,i.z,s.z,o.z,c.z)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}class dp extends Pi{constructor(e=new Le,t=new Le){super(),this.isLineCurve=!0,this.type="LineCurve",this.v1=e,this.v2=t}getPoint(e,t=new Le){const n=t;return e===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(e).add(this.v1)),n}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t=new Le){return t.subVectors(this.v2,this.v1).normalize()}getTangentAt(e,t){return this.getTangent(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class Bx extends Pi{constructor(e=new F,t=new F){super(),this.isLineCurve3=!0,this.type="LineCurve3",this.v1=e,this.v2=t}getPoint(e,t=new F){const n=t;return e===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(e).add(this.v1)),n}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t=new F){return t.subVectors(this.v2,this.v1).normalize()}getTangentAt(e,t){return this.getTangent(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class pp extends Pi{constructor(e=new Le,t=new Le,n=new Le){super(),this.isQuadraticBezierCurve=!0,this.type="QuadraticBezierCurve",this.v0=e,this.v1=t,this.v2=n}getPoint(e,t=new Le){const n=t,i=this.v0,s=this.v1,o=this.v2;return n.set(yo(e,i.x,s.x,o.x),yo(e,i.y,s.y,o.y)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class mp extends Pi{constructor(e=new F,t=new F,n=new F){super(),this.isQuadraticBezierCurve3=!0,this.type="QuadraticBezierCurve3",this.v0=e,this.v1=t,this.v2=n}getPoint(e,t=new F){const n=t,i=this.v0,s=this.v1,o=this.v2;return n.set(yo(e,i.x,s.x,o.x),yo(e,i.y,s.y,o.y),yo(e,i.z,s.z,o.z)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class gp extends Pi{constructor(e=[]){super(),this.isSplineCurve=!0,this.type="SplineCurve",this.points=e}getPoint(e,t=new Le){const n=t,i=this.points,s=(i.length-1)*e,o=Math.floor(s),c=s-o,u=i[o===0?o:o-1],h=i[o],p=i[o>i.length-2?i.length-1:o+1],g=i[o>i.length-3?i.length-1:o+2];return n.set(a0(c,u.x,h.x,p.x,g.x),a0(c,u.y,h.y,p.y,g.y)),n}copy(e){super.copy(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(i.clone())}return this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,n=this.points.length;t<n;t++){const i=this.points[t];e.points.push(i.toArray())}return e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(new Le().fromArray(i))}return this}}var eu=Object.freeze({__proto__:null,ArcCurve:Nx,CatmullRomCurve3:Ox,CubicBezierCurve:fp,CubicBezierCurve3:Fx,EllipseCurve:vu,LineCurve:dp,LineCurve3:Bx,QuadraticBezierCurve:pp,QuadraticBezierCurve3:mp,SplineCurve:gp});class zx extends Pi{constructor(){super(),this.type="CurvePath",this.curves=[],this.autoClose=!1}add(e){this.curves.push(e)}closePath(){const e=this.curves[0].getPoint(0),t=this.curves[this.curves.length-1].getPoint(1);if(!e.equals(t)){const n=e.isVector2===!0?"LineCurve":"LineCurve3";this.curves.push(new eu[n](t,e))}return this}getPoint(e,t){const n=e*this.getLength(),i=this.getCurveLengths();let s=0;for(;s<i.length;){if(i[s]>=n){const o=i[s]-n,c=this.curves[s],u=c.getLength(),h=u===0?0:1-o/u;return c.getPointAt(h,t)}s++}return null}getLength(){const e=this.getCurveLengths();return e[e.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const e=[];let t=0;for(let n=0,i=this.curves.length;n<i;n++)t+=this.curves[n].getLength(),e.push(t);return this.cacheLengths=e,e}getSpacedPoints(e=40){const t=[];for(let n=0;n<=e;n++)t.push(this.getPoint(n/e));return this.autoClose&&t.push(t[0]),t}getPoints(e=12){const t=[];let n;for(let i=0,s=this.curves;i<s.length;i++){const o=s[i],c=o.isEllipseCurve?e*2:o.isLineCurve||o.isLineCurve3?1:o.isSplineCurve?e*o.points.length:e,u=o.getPoints(c);for(let h=0;h<u.length;h++){const p=u[h];n&&n.equals(p)||(t.push(p),n=p)}}return this.autoClose&&t.length>1&&!t[t.length-1].equals(t[0])&&t.push(t[0]),t}copy(e){super.copy(e),this.curves=[];for(let t=0,n=e.curves.length;t<n;t++){const i=e.curves[t];this.curves.push(i.clone())}return this.autoClose=e.autoClose,this}toJSON(){const e=super.toJSON();e.autoClose=this.autoClose,e.curves=[];for(let t=0,n=this.curves.length;t<n;t++){const i=this.curves[t];e.curves.push(i.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.autoClose=e.autoClose,this.curves=[];for(let t=0,n=e.curves.length;t<n;t++){const i=e.curves[t];this.curves.push(new eu[i.type]().fromJSON(i))}return this}}class Oo extends zx{constructor(e){super(),this.type="Path",this.currentPoint=new Le,e&&this.setFromPoints(e)}setFromPoints(e){this.moveTo(e[0].x,e[0].y);for(let t=1,n=e.length;t<n;t++)this.lineTo(e[t].x,e[t].y);return this}moveTo(e,t){return this.currentPoint.set(e,t),this}lineTo(e,t){const n=new dp(this.currentPoint.clone(),new Le(e,t));return this.curves.push(n),this.currentPoint.set(e,t),this}quadraticCurveTo(e,t,n,i){const s=new pp(this.currentPoint.clone(),new Le(e,t),new Le(n,i));return this.curves.push(s),this.currentPoint.set(n,i),this}bezierCurveTo(e,t,n,i,s,o){const c=new fp(this.currentPoint.clone(),new Le(e,t),new Le(n,i),new Le(s,o));return this.curves.push(c),this.currentPoint.set(s,o),this}splineThru(e){const t=[this.currentPoint.clone()].concat(e),n=new gp(t);return this.curves.push(n),this.currentPoint.copy(e[e.length-1]),this}arc(e,t,n,i,s,o){const c=this.currentPoint.x,u=this.currentPoint.y;return this.absarc(e+c,t+u,n,i,s,o),this}absarc(e,t,n,i,s,o){return this.absellipse(e,t,n,n,i,s,o),this}ellipse(e,t,n,i,s,o,c,u){const h=this.currentPoint.x,p=this.currentPoint.y;return this.absellipse(e+h,t+p,n,i,s,o,c,u),this}absellipse(e,t,n,i,s,o,c,u){const h=new vu(e,t,n,i,s,o,c,u);if(this.curves.length>0){const g=h.getPoint(0);g.equals(this.currentPoint)||this.lineTo(g.x,g.y)}this.curves.push(h);const p=h.getPoint(1);return this.currentPoint.copy(p),this}copy(e){return super.copy(e),this.currentPoint.copy(e.currentPoint),this}toJSON(){const e=super.toJSON();return e.currentPoint=this.currentPoint.toArray(),e}fromJSON(e){return super.fromJSON(e),this.currentPoint.fromArray(e.currentPoint),this}}class Zo extends xt{constructor(e=[new Le(0,-.5),new Le(.5,0),new Le(0,.5)],t=12,n=0,i=Math.PI*2){super(),this.type="LatheGeometry",this.parameters={points:e,segments:t,phiStart:n,phiLength:i},t=Math.floor(t),i=jt(i,0,Math.PI*2);const s=[],o=[],c=[],u=[],h=[],p=1/t,g=new F,d=new Le,m=new F,_=new F,y=new F;let v=0,x=0;for(let w=0;w<=e.length-1;w++)switch(w){case 0:v=e[w+1].x-e[w].x,x=e[w+1].y-e[w].y,m.x=x*1,m.y=-v,m.z=x*0,y.copy(m),m.normalize(),u.push(m.x,m.y,m.z);break;case e.length-1:u.push(y.x,y.y,y.z);break;default:v=e[w+1].x-e[w].x,x=e[w+1].y-e[w].y,m.x=x*1,m.y=-v,m.z=x*0,_.copy(m),m.x+=y.x,m.y+=y.y,m.z+=y.z,m.normalize(),u.push(m.x,m.y,m.z),y.copy(_)}for(let w=0;w<=t;w++){const M=n+w*p*i,E=Math.sin(M),O=Math.cos(M);for(let P=0;P<=e.length-1;P++){g.x=e[P].x*E,g.y=e[P].y,g.z=e[P].x*O,o.push(g.x,g.y,g.z),d.x=w/t,d.y=P/(e.length-1),c.push(d.x,d.y);const U=u[3*P+0]*E,V=u[3*P+1],se=u[3*P+0]*O;h.push(U,V,se)}}for(let w=0;w<t;w++)for(let M=0;M<e.length-1;M++){const E=M+w*e.length,O=E,P=E+e.length,U=E+e.length+1,V=E+1;s.push(O,P,V),s.push(U,V,P)}this.setIndex(s),this.setAttribute("position",new $e(o,3)),this.setAttribute("uv",new $e(c,2)),this.setAttribute("normal",new $e(h,3))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Zo(e.points,e.segments,e.phiStart,e.phiLength)}}class xu extends Zo{constructor(e=1,t=1,n=4,i=8){const s=new Oo;s.absarc(0,-t/2,e,Math.PI*1.5,0),s.absarc(0,t/2,e,0,Math.PI*.5),super(s.getPoints(n),i),this.type="CapsuleGeometry",this.parameters={radius:e,length:t,capSegments:n,radialSegments:i}}static fromJSON(e){return new xu(e.radius,e.length,e.capSegments,e.radialSegments)}}class yu extends xt{constructor(e=1,t=32,n=0,i=Math.PI*2){super(),this.type="CircleGeometry",this.parameters={radius:e,segments:t,thetaStart:n,thetaLength:i},t=Math.max(3,t);const s=[],o=[],c=[],u=[],h=new F,p=new Le;o.push(0,0,0),c.push(0,0,1),u.push(.5,.5);for(let g=0,d=3;g<=t;g++,d+=3){const m=n+g/t*i;h.x=e*Math.cos(m),h.y=e*Math.sin(m),o.push(h.x,h.y,h.z),c.push(0,0,1),p.x=(o[d]/e+1)/2,p.y=(o[d+1]/e+1)/2,u.push(p.x,p.y)}for(let g=1;g<=t;g++)s.push(g,g+1,0);this.setIndex(s),this.setAttribute("position",new $e(o,3)),this.setAttribute("normal",new $e(c,3)),this.setAttribute("uv",new $e(u,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new yu(e.radius,e.segments,e.thetaStart,e.thetaLength)}}class Da extends xt{constructor(e=1,t=1,n=1,i=32,s=1,o=!1,c=0,u=Math.PI*2){super(),this.type="CylinderGeometry",this.parameters={radiusTop:e,radiusBottom:t,height:n,radialSegments:i,heightSegments:s,openEnded:o,thetaStart:c,thetaLength:u};const h=this;i=Math.floor(i),s=Math.floor(s);const p=[],g=[],d=[],m=[];let _=0;const y=[],v=n/2;let x=0;w(),o===!1&&(e>0&&M(!0),t>0&&M(!1)),this.setIndex(p),this.setAttribute("position",new $e(g,3)),this.setAttribute("normal",new $e(d,3)),this.setAttribute("uv",new $e(m,2));function w(){const E=new F,O=new F;let P=0;const U=(t-e)/n;for(let V=0;V<=s;V++){const se=[],T=V/s,N=T*(t-e)+e;for(let ne=0;ne<=i;ne++){const Te=ne/i,H=Te*u+c,re=Math.sin(H),Q=Math.cos(H);O.x=N*re,O.y=-T*n+v,O.z=N*Q,g.push(O.x,O.y,O.z),E.set(re,U,Q).normalize(),d.push(E.x,E.y,E.z),m.push(Te,1-T),se.push(_++)}y.push(se)}for(let V=0;V<i;V++)for(let se=0;se<s;se++){const T=y[se][V],N=y[se+1][V],ne=y[se+1][V+1],Te=y[se][V+1];p.push(T,N,Te),p.push(N,ne,Te),P+=6}h.addGroup(x,P,0),x+=P}function M(E){const O=_,P=new Le,U=new F;let V=0;const se=E===!0?e:t,T=E===!0?1:-1;for(let ne=1;ne<=i;ne++)g.push(0,v*T,0),d.push(0,T,0),m.push(.5,.5),_++;const N=_;for(let ne=0;ne<=i;ne++){const H=ne/i*u+c,re=Math.cos(H),Q=Math.sin(H);U.x=se*Q,U.y=v*T,U.z=se*re,g.push(U.x,U.y,U.z),d.push(0,T,0),P.x=re*.5+.5,P.y=Q*.5*T+.5,m.push(P.x,P.y),_++}for(let ne=0;ne<i;ne++){const Te=O+ne,H=N+ne;E===!0?p.push(H,H+1,Te):p.push(H+1,H,Te),V+=3}h.addGroup(x,V,E===!0?1:2),x+=V}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Da(e.radiusTop,e.radiusBottom,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class bu extends Da{constructor(e=1,t=1,n=32,i=1,s=!1,o=0,c=Math.PI*2){super(0,e,t,n,i,s,o,c),this.type="ConeGeometry",this.parameters={radius:e,height:t,radialSegments:n,heightSegments:i,openEnded:s,thetaStart:o,thetaLength:c}}static fromJSON(e){return new bu(e.radius,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class Vr extends xt{constructor(e=[],t=[],n=1,i=0){super(),this.type="PolyhedronGeometry",this.parameters={vertices:e,indices:t,radius:n,detail:i};const s=[],o=[];c(i),h(n),p(),this.setAttribute("position",new $e(s,3)),this.setAttribute("normal",new $e(s.slice(),3)),this.setAttribute("uv",new $e(o,2)),i===0?this.computeVertexNormals():this.normalizeNormals();function c(w){const M=new F,E=new F,O=new F;for(let P=0;P<t.length;P+=3)m(t[P+0],M),m(t[P+1],E),m(t[P+2],O),u(M,E,O,w)}function u(w,M,E,O){const P=O+1,U=[];for(let V=0;V<=P;V++){U[V]=[];const se=w.clone().lerp(E,V/P),T=M.clone().lerp(E,V/P),N=P-V;for(let ne=0;ne<=N;ne++)ne===0&&V===P?U[V][ne]=se:U[V][ne]=se.clone().lerp(T,ne/N)}for(let V=0;V<P;V++)for(let se=0;se<2*(P-V)-1;se++){const T=Math.floor(se/2);se%2===0?(d(U[V][T+1]),d(U[V+1][T]),d(U[V][T])):(d(U[V][T+1]),d(U[V+1][T+1]),d(U[V+1][T]))}}function h(w){const M=new F;for(let E=0;E<s.length;E+=3)M.x=s[E+0],M.y=s[E+1],M.z=s[E+2],M.normalize().multiplyScalar(w),s[E+0]=M.x,s[E+1]=M.y,s[E+2]=M.z}function p(){const w=new F;for(let M=0;M<s.length;M+=3){w.x=s[M+0],w.y=s[M+1],w.z=s[M+2];const E=v(w)/2/Math.PI+.5,O=x(w)/Math.PI+.5;o.push(E,1-O)}_(),g()}function g(){for(let w=0;w<o.length;w+=6){const M=o[w+0],E=o[w+2],O=o[w+4],P=Math.max(M,E,O),U=Math.min(M,E,O);P>.9&&U<.1&&(M<.2&&(o[w+0]+=1),E<.2&&(o[w+2]+=1),O<.2&&(o[w+4]+=1))}}function d(w){s.push(w.x,w.y,w.z)}function m(w,M){const E=w*3;M.x=e[E+0],M.y=e[E+1],M.z=e[E+2]}function _(){const w=new F,M=new F,E=new F,O=new F,P=new Le,U=new Le,V=new Le;for(let se=0,T=0;se<s.length;se+=9,T+=6){w.set(s[se+0],s[se+1],s[se+2]),M.set(s[se+3],s[se+4],s[se+5]),E.set(s[se+6],s[se+7],s[se+8]),P.set(o[T+0],o[T+1]),U.set(o[T+2],o[T+3]),V.set(o[T+4],o[T+5]),O.copy(w).add(M).add(E).divideScalar(3);const N=v(O);y(P,T+0,w,N),y(U,T+2,M,N),y(V,T+4,E,N)}}function y(w,M,E,O){O<0&&w.x===1&&(o[M]=w.x-1),E.x===0&&E.z===0&&(o[M]=O/2/Math.PI+.5)}function v(w){return Math.atan2(w.z,-w.x)}function x(w){return Math.atan2(-w.y,Math.sqrt(w.x*w.x+w.z*w.z))}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Vr(e.vertices,e.indices,e.radius,e.details)}}class Mu extends Vr{constructor(e=1,t=0){const n=(1+Math.sqrt(5))/2,i=1/n,s=[-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-i,-n,0,-i,n,0,i,-n,0,i,n,-i,-n,0,-i,n,0,i,-n,0,i,n,0,-n,0,-i,n,0,-i,-n,0,i,n,0,i],o=[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9];super(s,o,e,t),this.type="DodecahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new Mu(e.radius,e.detail)}}const wc=new F,Ec=new F,Cf=new F,Ac=new ai;class kx extends xt{constructor(e=null,t=1){if(super(),this.type="EdgesGeometry",this.parameters={geometry:e,thresholdAngle:t},e!==null){const i=Math.pow(10,4),s=Math.cos(ys*t),o=e.getIndex(),c=e.getAttribute("position"),u=o?o.count:c.count,h=[0,0,0],p=["a","b","c"],g=new Array(3),d={},m=[];for(let _=0;_<u;_+=3){o?(h[0]=o.getX(_),h[1]=o.getX(_+1),h[2]=o.getX(_+2)):(h[0]=_,h[1]=_+1,h[2]=_+2);const{a:y,b:v,c:x}=Ac;if(y.fromBufferAttribute(c,h[0]),v.fromBufferAttribute(c,h[1]),x.fromBufferAttribute(c,h[2]),Ac.getNormal(Cf),g[0]=`${Math.round(y.x*i)},${Math.round(y.y*i)},${Math.round(y.z*i)}`,g[1]=`${Math.round(v.x*i)},${Math.round(v.y*i)},${Math.round(v.z*i)}`,g[2]=`${Math.round(x.x*i)},${Math.round(x.y*i)},${Math.round(x.z*i)}`,!(g[0]===g[1]||g[1]===g[2]||g[2]===g[0]))for(let w=0;w<3;w++){const M=(w+1)%3,E=g[w],O=g[M],P=Ac[p[w]],U=Ac[p[M]],V=`${E}_${O}`,se=`${O}_${E}`;se in d&&d[se]?(Cf.dot(d[se].normal)<=s&&(m.push(P.x,P.y,P.z),m.push(U.x,U.y,U.z)),d[se]=null):V in d||(d[V]={index0:h[w],index1:h[M],normal:Cf.clone()})}}for(const _ in d)if(d[_]){const{index0:y,index1:v}=d[_];wc.fromBufferAttribute(c,y),Ec.fromBufferAttribute(c,v),m.push(wc.x,wc.y,wc.z),m.push(Ec.x,Ec.y,Ec.z)}this.setAttribute("position",new $e(m,3))}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}}class Ss extends Oo{constructor(e){super(e),this.uuid=oi(),this.type="Shape",this.holes=[]}getPointsHoles(e){const t=[];for(let n=0,i=this.holes.length;n<i;n++)t[n]=this.holes[n].getPoints(e);return t}extractPoints(e){return{shape:this.getPoints(e),holes:this.getPointsHoles(e)}}copy(e){super.copy(e),this.holes=[];for(let t=0,n=e.holes.length;t<n;t++){const i=e.holes[t];this.holes.push(i.clone())}return this}toJSON(){const e=super.toJSON();e.uuid=this.uuid,e.holes=[];for(let t=0,n=this.holes.length;t<n;t++){const i=this.holes[t];e.holes.push(i.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.uuid=e.uuid,this.holes=[];for(let t=0,n=e.holes.length;t<n;t++){const i=e.holes[t];this.holes.push(new Oo().fromJSON(i))}return this}}const t3={triangulate:function(r,e,t=2){const n=e&&e.length,i=n?e[0]*t:r.length;let s=Gx(r,0,i,t,!0);const o=[];if(!s||s.next===s.prev)return o;let c,u,h,p,g,d,m;if(n&&(s=a3(r,e,s,t)),r.length>80*t){c=h=r[0],u=p=r[1];for(let _=t;_<i;_+=t)g=r[_],d=r[_+1],g<c&&(c=g),d<u&&(u=d),g>h&&(h=g),d>p&&(p=d);m=Math.max(h-c,p-u),m=m!==0?32767/m:0}return Fo(s,o,t,c,u,m,0),o}};function Gx(r,e,t,n,i){let s,o;if(i===_3(r,e,t,n)>0)for(s=e;s<t;s+=n)o=o0(s,r[s],r[s+1],o);else for(s=t-n;s>=e;s-=n)o=o0(s,r[s],r[s+1],o);return o&&Su(o,o.next)&&(zo(o),o=o.next),o}function As(r,e){if(!r)return r;e||(e=r);let t=r,n;do if(n=!1,!t.steiner&&(Su(t,t.next)||Zt(t.prev,t,t.next)===0)){if(zo(t),t=e=t.prev,t===t.next)break;n=!0}else t=t.next;while(n||t!==e);return e}function Fo(r,e,t,n,i,s,o){if(!r)return;!o&&s&&h3(r,n,i,s);let c=r,u,h;for(;r.prev!==r.next;){if(u=r.prev,h=r.next,s?i3(r,n,i,s):n3(r)){e.push(u.i/t|0),e.push(r.i/t|0),e.push(h.i/t|0),zo(r),r=h.next,c=h.next;continue}if(r=h,r===c){o?o===1?(r=r3(As(r),e,t),Fo(r,e,t,n,i,s,2)):o===2&&s3(r,e,t,n,i,s):Fo(As(r),e,t,n,i,s,1);break}}}function n3(r){const e=r.prev,t=r,n=r.next;if(Zt(e,t,n)>=0)return!1;const i=e.x,s=t.x,o=n.x,c=e.y,u=t.y,h=n.y,p=i<s?i<o?i:o:s<o?s:o,g=c<u?c<h?c:h:u<h?u:h,d=i>s?i>o?i:o:s>o?s:o,m=c>u?c>h?c:h:u>h?u:h;let _=n.next;for(;_!==e;){if(_.x>=p&&_.x<=d&&_.y>=g&&_.y<=m&&Ma(i,c,s,u,o,h,_.x,_.y)&&Zt(_.prev,_,_.next)>=0)return!1;_=_.next}return!0}function i3(r,e,t,n){const i=r.prev,s=r,o=r.next;if(Zt(i,s,o)>=0)return!1;const c=i.x,u=s.x,h=o.x,p=i.y,g=s.y,d=o.y,m=c<u?c<h?c:h:u<h?u:h,_=p<g?p<d?p:d:g<d?g:d,y=c>u?c>h?c:h:u>h?u:h,v=p>g?p>d?p:d:g>d?g:d,x=Rd(m,_,e,t,n),w=Rd(y,v,e,t,n);let M=r.prevZ,E=r.nextZ;for(;M&&M.z>=x&&E&&E.z<=w;){if(M.x>=m&&M.x<=y&&M.y>=_&&M.y<=v&&M!==i&&M!==o&&Ma(c,p,u,g,h,d,M.x,M.y)&&Zt(M.prev,M,M.next)>=0||(M=M.prevZ,E.x>=m&&E.x<=y&&E.y>=_&&E.y<=v&&E!==i&&E!==o&&Ma(c,p,u,g,h,d,E.x,E.y)&&Zt(E.prev,E,E.next)>=0))return!1;E=E.nextZ}for(;M&&M.z>=x;){if(M.x>=m&&M.x<=y&&M.y>=_&&M.y<=v&&M!==i&&M!==o&&Ma(c,p,u,g,h,d,M.x,M.y)&&Zt(M.prev,M,M.next)>=0)return!1;M=M.prevZ}for(;E&&E.z<=w;){if(E.x>=m&&E.x<=y&&E.y>=_&&E.y<=v&&E!==i&&E!==o&&Ma(c,p,u,g,h,d,E.x,E.y)&&Zt(E.prev,E,E.next)>=0)return!1;E=E.nextZ}return!0}function r3(r,e,t){let n=r;do{const i=n.prev,s=n.next.next;!Su(i,s)&&Hx(i,n,n.next,s)&&Bo(i,s)&&Bo(s,i)&&(e.push(i.i/t|0),e.push(n.i/t|0),e.push(s.i/t|0),zo(n),zo(n.next),n=r=s),n=n.next}while(n!==r);return As(n)}function s3(r,e,t,n,i,s){let o=r;do{let c=o.next.next;for(;c!==o.prev;){if(o.i!==c.i&&p3(o,c)){let u=Vx(o,c);o=As(o,o.next),u=As(u,u.next),Fo(o,e,t,n,i,s,0),Fo(u,e,t,n,i,s,0);return}c=c.next}o=o.next}while(o!==r)}function a3(r,e,t,n){const i=[];let s,o,c,u,h;for(s=0,o=e.length;s<o;s++)c=e[s]*n,u=s<o-1?e[s+1]*n:r.length,h=Gx(r,c,u,n,!1),h===h.next&&(h.steiner=!0),i.push(d3(h));for(i.sort(o3),s=0;s<i.length;s++)t=l3(i[s],t);return t}function o3(r,e){return r.x-e.x}function l3(r,e){const t=c3(r,e);if(!t)return e;const n=Vx(t,r);return As(n,n.next),As(t,t.next)}function c3(r,e){let t=e,n=-1/0,i;const s=r.x,o=r.y;do{if(o<=t.y&&o>=t.next.y&&t.next.y!==t.y){const d=t.x+(o-t.y)*(t.next.x-t.x)/(t.next.y-t.y);if(d<=s&&d>n&&(n=d,i=t.x<t.next.x?t:t.next,d===s))return i}t=t.next}while(t!==e);if(!i)return null;const c=i,u=i.x,h=i.y;let p=1/0,g;t=i;do s>=t.x&&t.x>=u&&s!==t.x&&Ma(o<h?s:n,o,u,h,o<h?n:s,o,t.x,t.y)&&(g=Math.abs(o-t.y)/(s-t.x),Bo(t,r)&&(g<p||g===p&&(t.x>i.x||t.x===i.x&&u3(i,t)))&&(i=t,p=g)),t=t.next;while(t!==c);return i}function u3(r,e){return Zt(r.prev,r,e.prev)<0&&Zt(e.next,r,r.next)<0}function h3(r,e,t,n){let i=r;do i.z===0&&(i.z=Rd(i.x,i.y,e,t,n)),i.prevZ=i.prev,i.nextZ=i.next,i=i.next;while(i!==r);i.prevZ.nextZ=null,i.prevZ=null,f3(i)}function f3(r){let e,t,n,i,s,o,c,u,h=1;do{for(t=r,r=null,s=null,o=0;t;){for(o++,n=t,c=0,e=0;e<h&&(c++,n=n.nextZ,!!n);e++);for(u=h;c>0||u>0&&n;)c!==0&&(u===0||!n||t.z<=n.z)?(i=t,t=t.nextZ,c--):(i=n,n=n.nextZ,u--),s?s.nextZ=i:r=i,i.prevZ=s,s=i;t=n}s.nextZ=null,h*=2}while(o>1);return r}function Rd(r,e,t,n,i){return r=(r-t)*i|0,e=(e-n)*i|0,r=(r|r<<8)&16711935,r=(r|r<<4)&252645135,r=(r|r<<2)&858993459,r=(r|r<<1)&1431655765,e=(e|e<<8)&16711935,e=(e|e<<4)&252645135,e=(e|e<<2)&858993459,e=(e|e<<1)&1431655765,r|e<<1}function d3(r){let e=r,t=r;do(e.x<t.x||e.x===t.x&&e.y<t.y)&&(t=e),e=e.next;while(e!==r);return t}function Ma(r,e,t,n,i,s,o,c){return(i-o)*(e-c)>=(r-o)*(s-c)&&(r-o)*(n-c)>=(t-o)*(e-c)&&(t-o)*(s-c)>=(i-o)*(n-c)}function p3(r,e){return r.next.i!==e.i&&r.prev.i!==e.i&&!m3(r,e)&&(Bo(r,e)&&Bo(e,r)&&g3(r,e)&&(Zt(r.prev,r,e.prev)||Zt(r,e.prev,e))||Su(r,e)&&Zt(r.prev,r,r.next)>0&&Zt(e.prev,e,e.next)>0)}function Zt(r,e,t){return(e.y-r.y)*(t.x-e.x)-(e.x-r.x)*(t.y-e.y)}function Su(r,e){return r.x===e.x&&r.y===e.y}function Hx(r,e,t,n){const i=Cc(Zt(r,e,t)),s=Cc(Zt(r,e,n)),o=Cc(Zt(t,n,r)),c=Cc(Zt(t,n,e));return!!(i!==s&&o!==c||i===0&&Tc(r,t,e)||s===0&&Tc(r,n,e)||o===0&&Tc(t,r,n)||c===0&&Tc(t,e,n))}function Tc(r,e,t){return e.x<=Math.max(r.x,t.x)&&e.x>=Math.min(r.x,t.x)&&e.y<=Math.max(r.y,t.y)&&e.y>=Math.min(r.y,t.y)}function Cc(r){return r>0?1:r<0?-1:0}function m3(r,e){let t=r;do{if(t.i!==r.i&&t.next.i!==r.i&&t.i!==e.i&&t.next.i!==e.i&&Hx(t,t.next,r,e))return!0;t=t.next}while(t!==r);return!1}function Bo(r,e){return Zt(r.prev,r,r.next)<0?Zt(r,e,r.next)>=0&&Zt(r,r.prev,e)>=0:Zt(r,e,r.prev)<0||Zt(r,r.next,e)<0}function g3(r,e){let t=r,n=!1;const i=(r.x+e.x)/2,s=(r.y+e.y)/2;do t.y>s!=t.next.y>s&&t.next.y!==t.y&&i<(t.next.x-t.x)*(s-t.y)/(t.next.y-t.y)+t.x&&(n=!n),t=t.next;while(t!==r);return n}function Vx(r,e){const t=new Ld(r.i,r.x,r.y),n=new Ld(e.i,e.x,e.y),i=r.next,s=e.prev;return r.next=e,e.prev=r,t.next=i,i.prev=t,n.next=t,t.prev=n,s.next=n,n.prev=s,n}function o0(r,e,t,n){const i=new Ld(r,e,t);return n?(i.next=n.next,i.prev=n,n.next.prev=i,n.next=i):(i.prev=i,i.next=i),i}function zo(r){r.next.prev=r.prev,r.prev.next=r.next,r.prevZ&&(r.prevZ.nextZ=r.nextZ),r.nextZ&&(r.nextZ.prevZ=r.prevZ)}function Ld(r,e,t){this.i=r,this.x=e,this.y=t,this.prev=null,this.next=null,this.z=0,this.prevZ=null,this.nextZ=null,this.steiner=!1}function _3(r,e,t,n){let i=0;for(let s=e,o=t-n;s<t;s+=n)i+=(r[o]-r[s])*(r[s+1]+r[o+1]),o=s;return i}class Gi{static area(e){const t=e.length;let n=0;for(let i=t-1,s=0;s<t;i=s++)n+=e[i].x*e[s].y-e[s].x*e[i].y;return n*.5}static isClockWise(e){return Gi.area(e)<0}static triangulateShape(e,t){const n=[],i=[],s=[];l0(e),c0(n,e);let o=e.length;t.forEach(l0);for(let u=0;u<t.length;u++)i.push(o),o+=t[u].length,c0(n,t[u]);const c=t3.triangulate(n,i);for(let u=0;u<c.length;u+=3)s.push(c.slice(u,u+3));return s}}function l0(r){const e=r.length;e>2&&r[e-1].equals(r[0])&&r.pop()}function c0(r,e){for(let t=0;t<e.length;t++)r.push(e[t].x),r.push(e[t].y)}class wu extends xt{constructor(e=new Ss([new Le(.5,.5),new Le(-.5,.5),new Le(-.5,-.5),new Le(.5,-.5)]),t={}){super(),this.type="ExtrudeGeometry",this.parameters={shapes:e,options:t},e=Array.isArray(e)?e:[e];const n=this,i=[],s=[];for(let c=0,u=e.length;c<u;c++){const h=e[c];o(h)}this.setAttribute("position",new $e(i,3)),this.setAttribute("uv",new $e(s,2)),this.computeVertexNormals();function o(c){const u=[],h=t.curveSegments!==void 0?t.curveSegments:12,p=t.steps!==void 0?t.steps:1,g=t.depth!==void 0?t.depth:1;let d=t.bevelEnabled!==void 0?t.bevelEnabled:!0,m=t.bevelThickness!==void 0?t.bevelThickness:.2,_=t.bevelSize!==void 0?t.bevelSize:m-.1,y=t.bevelOffset!==void 0?t.bevelOffset:0,v=t.bevelSegments!==void 0?t.bevelSegments:3;const x=t.extrudePath,w=t.UVGenerator!==void 0?t.UVGenerator:v3;let M,E=!1,O,P,U,V;x&&(M=x.getSpacedPoints(p),E=!0,d=!1,O=x.computeFrenetFrames(p,!1),P=new F,U=new F,V=new F),d||(v=0,m=0,_=0,y=0);const se=c.extractPoints(h);let T=se.shape;const N=se.holes;if(!Gi.isClockWise(T)){T=T.reverse();for(let I=0,ge=N.length;I<ge;I++){const J=N[I];Gi.isClockWise(J)&&(N[I]=J.reverse())}}const Te=Gi.triangulateShape(T,N),H=T;for(let I=0,ge=N.length;I<ge;I++){const J=N[I];T=T.concat(J)}function re(I,ge,J){return ge||console.error("THREE.ExtrudeGeometry: vec does not exist"),I.clone().addScaledVector(ge,J)}const Q=T.length,Me=Te.length;function ve(I,ge,J){let ee,j,Ce;const Re=I.x-ge.x,R=I.y-ge.y,A=J.x-I.x,k=J.y-I.y,ie=Re*Re+R*R,te=Re*k-R*A;if(Math.abs(te)>Number.EPSILON){const de=Math.sqrt(ie),oe=Math.sqrt(A*A+k*k),xe=ge.x-R/de,pe=ge.y+Re/de,_e=J.x-k/oe,Fe=J.y+A/oe,q=((_e-xe)*k-(Fe-pe)*A)/(Re*k-R*A);ee=xe+Re*q-I.x,j=pe+R*q-I.y;const Ue=ee*ee+j*j;if(Ue<=2)return new Le(ee,j);Ce=Math.sqrt(Ue/2)}else{let de=!1;Re>Number.EPSILON?A>Number.EPSILON&&(de=!0):Re<-Number.EPSILON?A<-Number.EPSILON&&(de=!0):Math.sign(R)===Math.sign(k)&&(de=!0),de?(ee=-R,j=Re,Ce=Math.sqrt(ie)):(ee=Re,j=R,Ce=Math.sqrt(ie/2))}return new Le(ee/Ce,j/Ce)}const be=[];for(let I=0,ge=H.length,J=ge-1,ee=I+1;I<ge;I++,J++,ee++)J===ge&&(J=0),ee===ge&&(ee=0),be[I]=ve(H[I],H[J],H[ee]);const Ie=[];let Se,Ve=be.concat();for(let I=0,ge=N.length;I<ge;I++){const J=N[I];Se=[];for(let ee=0,j=J.length,Ce=j-1,Re=ee+1;ee<j;ee++,Ce++,Re++)Ce===j&&(Ce=0),Re===j&&(Re=0),Se[ee]=ve(J[ee],J[Ce],J[Re]);Ie.push(Se),Ve=Ve.concat(Se)}for(let I=0;I<v;I++){const ge=I/v,J=m*Math.cos(ge*Math.PI/2),ee=_*Math.sin(ge*Math.PI/2)+y;for(let j=0,Ce=H.length;j<Ce;j++){const Re=re(H[j],be[j],ee);X(Re.x,Re.y,-J)}for(let j=0,Ce=N.length;j<Ce;j++){const Re=N[j];Se=Ie[j];for(let R=0,A=Re.length;R<A;R++){const k=re(Re[R],Se[R],ee);X(k.x,k.y,-J)}}}const je=_+y;for(let I=0;I<Q;I++){const ge=d?re(T[I],Ve[I],je):T[I];E?(U.copy(O.normals[0]).multiplyScalar(ge.x),P.copy(O.binormals[0]).multiplyScalar(ge.y),V.copy(M[0]).add(U).add(P),X(V.x,V.y,V.z)):X(ge.x,ge.y,0)}for(let I=1;I<=p;I++)for(let ge=0;ge<Q;ge++){const J=d?re(T[ge],Ve[ge],je):T[ge];E?(U.copy(O.normals[I]).multiplyScalar(J.x),P.copy(O.binormals[I]).multiplyScalar(J.y),V.copy(M[I]).add(U).add(P),X(V.x,V.y,V.z)):X(J.x,J.y,g/p*I)}for(let I=v-1;I>=0;I--){const ge=I/v,J=m*Math.cos(ge*Math.PI/2),ee=_*Math.sin(ge*Math.PI/2)+y;for(let j=0,Ce=H.length;j<Ce;j++){const Re=re(H[j],be[j],ee);X(Re.x,Re.y,g+J)}for(let j=0,Ce=N.length;j<Ce;j++){const Re=N[j];Se=Ie[j];for(let R=0,A=Re.length;R<A;R++){const k=re(Re[R],Se[R],ee);E?X(k.x,k.y+M[p-1].y,M[p-1].x+J):X(k.x,k.y,g+J)}}}he(),Pe();function he(){const I=i.length/3;if(d){let ge=0,J=Q*ge;for(let ee=0;ee<Me;ee++){const j=Te[ee];Z(j[2]+J,j[1]+J,j[0]+J)}ge=p+v*2,J=Q*ge;for(let ee=0;ee<Me;ee++){const j=Te[ee];Z(j[0]+J,j[1]+J,j[2]+J)}}else{for(let ge=0;ge<Me;ge++){const J=Te[ge];Z(J[2],J[1],J[0])}for(let ge=0;ge<Me;ge++){const J=Te[ge];Z(J[0]+Q*p,J[1]+Q*p,J[2]+Q*p)}}n.addGroup(I,i.length/3-I,0)}function Pe(){const I=i.length/3;let ge=0;Ge(H,ge),ge+=H.length;for(let J=0,ee=N.length;J<ee;J++){const j=N[J];Ge(j,ge),ge+=j.length}n.addGroup(I,i.length/3-I,1)}function Ge(I,ge){let J=I.length;for(;--J>=0;){const ee=J;let j=J-1;j<0&&(j=I.length-1);for(let Ce=0,Re=p+v*2;Ce<Re;Ce++){const R=Q*Ce,A=Q*(Ce+1),k=ge+ee+R,ie=ge+j+R,te=ge+j+A,de=ge+ee+A;$(k,ie,te,de)}}}function X(I,ge,J){u.push(I),u.push(ge),u.push(J)}function Z(I,ge,J){ue(I),ue(ge),ue(J);const ee=i.length/3,j=w.generateTopUV(n,i,ee-3,ee-2,ee-1);me(j[0]),me(j[1]),me(j[2])}function $(I,ge,J,ee){ue(I),ue(ge),ue(ee),ue(ge),ue(J),ue(ee);const j=i.length/3,Ce=w.generateSideWallUV(n,i,j-6,j-3,j-2,j-1);me(Ce[0]),me(Ce[1]),me(Ce[3]),me(Ce[1]),me(Ce[2]),me(Ce[3])}function ue(I){i.push(u[I*3+0]),i.push(u[I*3+1]),i.push(u[I*3+2])}function me(I){s.push(I.x),s.push(I.y)}}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){const e=super.toJSON(),t=this.parameters.shapes,n=this.parameters.options;return x3(t,n,e)}static fromJSON(e,t){const n=[];for(let s=0,o=e.shapes.length;s<o;s++){const c=t[e.shapes[s]];n.push(c)}const i=e.options.extrudePath;return i!==void 0&&(e.options.extrudePath=new eu[i.type]().fromJSON(i)),new wu(n,e.options)}}const v3={generateTopUV:function(r,e,t,n,i){const s=e[t*3],o=e[t*3+1],c=e[n*3],u=e[n*3+1],h=e[i*3],p=e[i*3+1];return[new Le(s,o),new Le(c,u),new Le(h,p)]},generateSideWallUV:function(r,e,t,n,i,s){const o=e[t*3],c=e[t*3+1],u=e[t*3+2],h=e[n*3],p=e[n*3+1],g=e[n*3+2],d=e[i*3],m=e[i*3+1],_=e[i*3+2],y=e[s*3],v=e[s*3+1],x=e[s*3+2];return Math.abs(c-p)<Math.abs(o-h)?[new Le(o,1-u),new Le(h,1-g),new Le(d,1-_),new Le(y,1-x)]:[new Le(c,1-u),new Le(p,1-g),new Le(m,1-_),new Le(v,1-x)]}};function x3(r,e,t){if(t.shapes=[],Array.isArray(r))for(let n=0,i=r.length;n<i;n++){const s=r[n];t.shapes.push(s.uuid)}else t.shapes.push(r.uuid);return t.options=Object.assign({},e),e.extrudePath!==void 0&&(t.options.extrudePath=e.extrudePath.toJSON()),t}class Eu extends Vr{constructor(e=1,t=0){const n=(1+Math.sqrt(5))/2,i=[-1,n,0,1,n,0,-1,-n,0,1,-n,0,0,-1,n,0,1,n,0,-1,-n,0,1,-n,n,0,-1,n,0,1,-n,0,-1,-n,0,1],s=[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1];super(i,s,e,t),this.type="IcosahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new Eu(e.radius,e.detail)}}class Jo extends Vr{constructor(e=1,t=0){const n=[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],i=[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2];super(n,i,e,t),this.type="OctahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new Jo(e.radius,e.detail)}}class Au extends xt{constructor(e=.5,t=1,n=32,i=1,s=0,o=Math.PI*2){super(),this.type="RingGeometry",this.parameters={innerRadius:e,outerRadius:t,thetaSegments:n,phiSegments:i,thetaStart:s,thetaLength:o},n=Math.max(3,n),i=Math.max(1,i);const c=[],u=[],h=[],p=[];let g=e;const d=(t-e)/i,m=new F,_=new Le;for(let y=0;y<=i;y++){for(let v=0;v<=n;v++){const x=s+v/n*o;m.x=g*Math.cos(x),m.y=g*Math.sin(x),u.push(m.x,m.y,m.z),h.push(0,0,1),_.x=(m.x/t+1)/2,_.y=(m.y/t+1)/2,p.push(_.x,_.y)}g+=d}for(let y=0;y<i;y++){const v=y*(n+1);for(let x=0;x<n;x++){const w=x+v,M=w,E=w+n+1,O=w+n+2,P=w+1;c.push(M,E,P),c.push(E,O,P)}}this.setIndex(c),this.setAttribute("position",new $e(u,3)),this.setAttribute("normal",new $e(h,3)),this.setAttribute("uv",new $e(p,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Au(e.innerRadius,e.outerRadius,e.thetaSegments,e.phiSegments,e.thetaStart,e.thetaLength)}}class Tu extends xt{constructor(e=new Ss([new Le(0,.5),new Le(-.5,-.5),new Le(.5,-.5)]),t=12){super(),this.type="ShapeGeometry",this.parameters={shapes:e,curveSegments:t};const n=[],i=[],s=[],o=[];let c=0,u=0;if(Array.isArray(e)===!1)h(e);else for(let p=0;p<e.length;p++)h(e[p]),this.addGroup(c,u,p),c+=u,u=0;this.setIndex(n),this.setAttribute("position",new $e(i,3)),this.setAttribute("normal",new $e(s,3)),this.setAttribute("uv",new $e(o,2));function h(p){const g=i.length/3,d=p.extractPoints(t);let m=d.shape;const _=d.holes;Gi.isClockWise(m)===!1&&(m=m.reverse());for(let v=0,x=_.length;v<x;v++){const w=_[v];Gi.isClockWise(w)===!0&&(_[v]=w.reverse())}const y=Gi.triangulateShape(m,_);for(let v=0,x=_.length;v<x;v++){const w=_[v];m=m.concat(w)}for(let v=0,x=m.length;v<x;v++){const w=m[v];i.push(w.x,w.y,0),s.push(0,0,1),o.push(w.x,w.y)}for(let v=0,x=y.length;v<x;v++){const w=y[v],M=w[0]+g,E=w[1]+g,O=w[2]+g;n.push(M,E,O),u+=3}}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){const e=super.toJSON(),t=this.parameters.shapes;return y3(t,e)}static fromJSON(e,t){const n=[];for(let i=0,s=e.shapes.length;i<s;i++){const o=t[e.shapes[i]];n.push(o)}return new Tu(n,e.curveSegments)}}function y3(r,e){if(e.shapes=[],Array.isArray(r))for(let t=0,n=r.length;t<n;t++){const i=r[t];e.shapes.push(i.uuid)}else e.shapes.push(r.uuid);return e}class Ko extends xt{constructor(e=1,t=32,n=16,i=0,s=Math.PI*2,o=0,c=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:e,widthSegments:t,heightSegments:n,phiStart:i,phiLength:s,thetaStart:o,thetaLength:c},t=Math.max(3,Math.floor(t)),n=Math.max(2,Math.floor(n));const u=Math.min(o+c,Math.PI);let h=0;const p=[],g=new F,d=new F,m=[],_=[],y=[],v=[];for(let x=0;x<=n;x++){const w=[],M=x/n;let E=0;x===0&&o===0?E=.5/t:x===n&&u===Math.PI&&(E=-.5/t);for(let O=0;O<=t;O++){const P=O/t;g.x=-e*Math.cos(i+P*s)*Math.sin(o+M*c),g.y=e*Math.cos(o+M*c),g.z=e*Math.sin(i+P*s)*Math.sin(o+M*c),_.push(g.x,g.y,g.z),d.copy(g).normalize(),y.push(d.x,d.y,d.z),v.push(P+E,1-M),w.push(h++)}p.push(w)}for(let x=0;x<n;x++)for(let w=0;w<t;w++){const M=p[x][w+1],E=p[x][w],O=p[x+1][w],P=p[x+1][w+1];(x!==0||o>0)&&m.push(M,E,P),(x!==n-1||u<Math.PI)&&m.push(E,O,P)}this.setIndex(m),this.setAttribute("position",new $e(_,3)),this.setAttribute("normal",new $e(y,3)),this.setAttribute("uv",new $e(v,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Ko(e.radius,e.widthSegments,e.heightSegments,e.phiStart,e.phiLength,e.thetaStart,e.thetaLength)}}class Cu extends Vr{constructor(e=1,t=0){const n=[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],i=[2,1,0,0,3,2,1,3,0,2,3,1];super(n,i,e,t),this.type="TetrahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new Cu(e.radius,e.detail)}}class Ru extends xt{constructor(e=1,t=.4,n=12,i=48,s=Math.PI*2){super(),this.type="TorusGeometry",this.parameters={radius:e,tube:t,radialSegments:n,tubularSegments:i,arc:s},n=Math.floor(n),i=Math.floor(i);const o=[],c=[],u=[],h=[],p=new F,g=new F,d=new F;for(let m=0;m<=n;m++)for(let _=0;_<=i;_++){const y=_/i*s,v=m/n*Math.PI*2;g.x=(e+t*Math.cos(v))*Math.cos(y),g.y=(e+t*Math.cos(v))*Math.sin(y),g.z=t*Math.sin(v),c.push(g.x,g.y,g.z),p.x=e*Math.cos(y),p.y=e*Math.sin(y),d.subVectors(g,p).normalize(),u.push(d.x,d.y,d.z),h.push(_/i),h.push(m/n)}for(let m=1;m<=n;m++)for(let _=1;_<=i;_++){const y=(i+1)*m+_-1,v=(i+1)*(m-1)+_-1,x=(i+1)*(m-1)+_,w=(i+1)*m+_;o.push(y,v,w),o.push(v,x,w)}this.setIndex(o),this.setAttribute("position",new $e(c,3)),this.setAttribute("normal",new $e(u,3)),this.setAttribute("uv",new $e(h,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Ru(e.radius,e.tube,e.radialSegments,e.tubularSegments,e.arc)}}class Lu extends xt{constructor(e=1,t=.4,n=64,i=8,s=2,o=3){super(),this.type="TorusKnotGeometry",this.parameters={radius:e,tube:t,tubularSegments:n,radialSegments:i,p:s,q:o},n=Math.floor(n),i=Math.floor(i);const c=[],u=[],h=[],p=[],g=new F,d=new F,m=new F,_=new F,y=new F,v=new F,x=new F;for(let M=0;M<=n;++M){const E=M/n*s*Math.PI*2;w(E,s,o,e,m),w(E+.01,s,o,e,_),v.subVectors(_,m),x.addVectors(_,m),y.crossVectors(v,x),x.crossVectors(y,v),y.normalize(),x.normalize();for(let O=0;O<=i;++O){const P=O/i*Math.PI*2,U=-t*Math.cos(P),V=t*Math.sin(P);g.x=m.x+(U*x.x+V*y.x),g.y=m.y+(U*x.y+V*y.y),g.z=m.z+(U*x.z+V*y.z),u.push(g.x,g.y,g.z),d.subVectors(g,m).normalize(),h.push(d.x,d.y,d.z),p.push(M/n),p.push(O/i)}}for(let M=1;M<=n;M++)for(let E=1;E<=i;E++){const O=(i+1)*(M-1)+(E-1),P=(i+1)*M+(E-1),U=(i+1)*M+E,V=(i+1)*(M-1)+E;c.push(O,P,V),c.push(P,U,V)}this.setIndex(c),this.setAttribute("position",new $e(u,3)),this.setAttribute("normal",new $e(h,3)),this.setAttribute("uv",new $e(p,2));function w(M,E,O,P,U){const V=Math.cos(M),se=Math.sin(M),T=O/E*M,N=Math.cos(T);U.x=P*(2+N)*.5*V,U.y=P*(2+N)*se*.5,U.z=P*Math.sin(T)*.5}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Lu(e.radius,e.tube,e.tubularSegments,e.radialSegments,e.p,e.q)}}class Pu extends xt{constructor(e=new mp(new F(-1,-1,0),new F(-1,1,0),new F(1,1,0)),t=64,n=1,i=8,s=!1){super(),this.type="TubeGeometry",this.parameters={path:e,tubularSegments:t,radius:n,radialSegments:i,closed:s};const o=e.computeFrenetFrames(t,s);this.tangents=o.tangents,this.normals=o.normals,this.binormals=o.binormals;const c=new F,u=new F,h=new Le;let p=new F;const g=[],d=[],m=[],_=[];y(),this.setIndex(_),this.setAttribute("position",new $e(g,3)),this.setAttribute("normal",new $e(d,3)),this.setAttribute("uv",new $e(m,2));function y(){for(let M=0;M<t;M++)v(M);v(s===!1?t:0),w(),x()}function v(M){p=e.getPointAt(M/t,p);const E=o.normals[M],O=o.binormals[M];for(let P=0;P<=i;P++){const U=P/i*Math.PI*2,V=Math.sin(U),se=-Math.cos(U);u.x=se*E.x+V*O.x,u.y=se*E.y+V*O.y,u.z=se*E.z+V*O.z,u.normalize(),d.push(u.x,u.y,u.z),c.x=p.x+n*u.x,c.y=p.y+n*u.y,c.z=p.z+n*u.z,g.push(c.x,c.y,c.z)}}function x(){for(let M=1;M<=t;M++)for(let E=1;E<=i;E++){const O=(i+1)*(M-1)+(E-1),P=(i+1)*M+(E-1),U=(i+1)*M+E,V=(i+1)*(M-1)+E;_.push(O,P,V),_.push(P,U,V)}}function w(){for(let M=0;M<=t;M++)for(let E=0;E<=i;E++)h.x=M/t,h.y=E/i,m.push(h.x,h.y)}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){const e=super.toJSON();return e.path=this.parameters.path.toJSON(),e}static fromJSON(e){return new Pu(new eu[e.path.type]().fromJSON(e.path),e.tubularSegments,e.radius,e.radialSegments,e.closed)}}class Wx extends xt{constructor(e=null){if(super(),this.type="WireframeGeometry",this.parameters={geometry:e},e!==null){const t=[],n=new Set,i=new F,s=new F;if(e.index!==null){const o=e.attributes.position,c=e.index;let u=e.groups;u.length===0&&(u=[{start:0,count:c.count,materialIndex:0}]);for(let h=0,p=u.length;h<p;++h){const g=u[h],d=g.start,m=g.count;for(let _=d,y=d+m;_<y;_+=3)for(let v=0;v<3;v++){const x=c.getX(_+v),w=c.getX(_+(v+1)%3);i.fromBufferAttribute(o,x),s.fromBufferAttribute(o,w),u0(i,s,n)===!0&&(t.push(i.x,i.y,i.z),t.push(s.x,s.y,s.z))}}}else{const o=e.attributes.position;for(let c=0,u=o.count/3;c<u;c++)for(let h=0;h<3;h++){const p=3*c+h,g=3*c+(h+1)%3;i.fromBufferAttribute(o,p),s.fromBufferAttribute(o,g),u0(i,s,n)===!0&&(t.push(i.x,i.y,i.z),t.push(s.x,s.y,s.z))}}this.setAttribute("position",new $e(t,3))}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}}function u0(r,e,t){const n=`${r.x},${r.y},${r.z}-${e.x},${e.y},${e.z}`,i=`${e.x},${e.y},${e.z}-${r.x},${r.y},${r.z}`;return t.has(n)===!0||t.has(i)===!0?!1:(t.add(n),t.add(i),!0)}var h0=Object.freeze({__proto__:null,BoxGeometry:Ts,CapsuleGeometry:xu,CircleGeometry:yu,ConeGeometry:bu,CylinderGeometry:Da,DodecahedronGeometry:Mu,EdgesGeometry:kx,ExtrudeGeometry:wu,IcosahedronGeometry:Eu,LatheGeometry:Zo,OctahedronGeometry:Jo,PlaneGeometry:Pa,PolyhedronGeometry:Vr,RingGeometry:Au,ShapeGeometry:Tu,SphereGeometry:Ko,TetrahedronGeometry:Cu,TorusGeometry:Ru,TorusKnotGeometry:Lu,TubeGeometry:Pu,WireframeGeometry:Wx});class Xx extends Rn{constructor(e){super(),this.isShadowMaterial=!0,this.type="ShadowMaterial",this.color=new qe(0),this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.fog=e.fog,this}}class qx extends Li{constructor(e){super(e),this.isRawShaderMaterial=!0,this.type="RawShaderMaterial"}}class _p extends Rn{constructor(e){super(),this.isMeshStandardMaterial=!0,this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new qe(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new qe(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Gr,this.normalScale=new Le(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={STANDARD:""},this.color.copy(e.color),this.roughness=e.roughness,this.metalness=e.metalness,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.roughnessMap=e.roughnessMap,this.metalnessMap=e.metalnessMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapIntensity=e.envMapIntensity,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class Yx extends _p{constructor(e){super(),this.isMeshPhysicalMaterial=!0,this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.anisotropyRotation=0,this.anisotropyMap=null,this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new Le(1,1),this.clearcoatNormalMap=null,this.ior=1.5,Object.defineProperty(this,"reflectivity",{get:function(){return jt(2.5*(this.ior-1)/(this.ior+1),0,1)},set:function(t){this.ior=(1+.4*t)/(1-.4*t)}}),this.iridescenceMap=null,this.iridescenceIOR=1.3,this.iridescenceThicknessRange=[100,400],this.iridescenceThicknessMap=null,this.sheenColor=new qe(0),this.sheenColorMap=null,this.sheenRoughness=1,this.sheenRoughnessMap=null,this.transmissionMap=null,this.thickness=0,this.thicknessMap=null,this.attenuationDistance=1/0,this.attenuationColor=new qe(1,1,1),this.specularIntensity=1,this.specularIntensityMap=null,this.specularColor=new qe(1,1,1),this.specularColorMap=null,this._anisotropy=0,this._clearcoat=0,this._iridescence=0,this._sheen=0,this._transmission=0,this.setValues(e)}get anisotropy(){return this._anisotropy}set anisotropy(e){this._anisotropy>0!=e>0&&this.version++,this._anisotropy=e}get clearcoat(){return this._clearcoat}set clearcoat(e){this._clearcoat>0!=e>0&&this.version++,this._clearcoat=e}get iridescence(){return this._iridescence}set iridescence(e){this._iridescence>0!=e>0&&this.version++,this._iridescence=e}get sheen(){return this._sheen}set sheen(e){this._sheen>0!=e>0&&this.version++,this._sheen=e}get transmission(){return this._transmission}set transmission(e){this._transmission>0!=e>0&&this.version++,this._transmission=e}copy(e){return super.copy(e),this.defines={STANDARD:"",PHYSICAL:""},this.anisotropy=e.anisotropy,this.anisotropyRotation=e.anisotropyRotation,this.anisotropyMap=e.anisotropyMap,this.clearcoat=e.clearcoat,this.clearcoatMap=e.clearcoatMap,this.clearcoatRoughness=e.clearcoatRoughness,this.clearcoatRoughnessMap=e.clearcoatRoughnessMap,this.clearcoatNormalMap=e.clearcoatNormalMap,this.clearcoatNormalScale.copy(e.clearcoatNormalScale),this.ior=e.ior,this.iridescence=e.iridescence,this.iridescenceMap=e.iridescenceMap,this.iridescenceIOR=e.iridescenceIOR,this.iridescenceThicknessRange=[...e.iridescenceThicknessRange],this.iridescenceThicknessMap=e.iridescenceThicknessMap,this.sheen=e.sheen,this.sheenColor.copy(e.sheenColor),this.sheenColorMap=e.sheenColorMap,this.sheenRoughness=e.sheenRoughness,this.sheenRoughnessMap=e.sheenRoughnessMap,this.transmission=e.transmission,this.transmissionMap=e.transmissionMap,this.thickness=e.thickness,this.thicknessMap=e.thicknessMap,this.attenuationDistance=e.attenuationDistance,this.attenuationColor.copy(e.attenuationColor),this.specularIntensity=e.specularIntensity,this.specularIntensityMap=e.specularIntensityMap,this.specularColor.copy(e.specularColor),this.specularColorMap=e.specularColorMap,this}}class $x extends Rn{constructor(e){super(),this.isMeshPhongMaterial=!0,this.type="MeshPhongMaterial",this.color=new qe(16777215),this.specular=new qe(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new qe(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Gr,this.normalScale=new Le(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=Wo,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.specular.copy(e.specular),this.shininess=e.shininess,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class Zx extends Rn{constructor(e){super(),this.isMeshToonMaterial=!0,this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new qe(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new qe(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Gr,this.normalScale=new Le(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.gradientMap=e.gradientMap,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}class Jx extends Rn{constructor(e){super(),this.isMeshNormalMaterial=!0,this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Gr,this.normalScale=new Le(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.flatShading=e.flatShading,this}}class Kx extends Rn{constructor(e){super(),this.isMeshLambertMaterial=!0,this.type="MeshLambertMaterial",this.color=new qe(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new qe(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Gr,this.normalScale=new Le(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=Wo,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class jx extends Rn{constructor(e){super(),this.isMeshMatcapMaterial=!0,this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new qe(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Gr,this.normalScale=new Le(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={MATCAP:""},this.color.copy(e.color),this.matcap=e.matcap,this.map=e.map,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.flatShading=e.flatShading,this.fog=e.fog,this}}class Qx extends Bn{constructor(e){super(),this.isLineDashedMaterial=!0,this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(e)}copy(e){return super.copy(e),this.scale=e.scale,this.dashSize=e.dashSize,this.gapSize=e.gapSize,this}}function vs(r,e,t){return!r||!t&&r.constructor===e?r:typeof e.BYTES_PER_ELEMENT=="number"?new e(r):Array.prototype.slice.call(r)}function ey(r){return ArrayBuffer.isView(r)&&!(r instanceof DataView)}function ty(r){function e(i,s){return r[i]-r[s]}const t=r.length,n=new Array(t);for(let i=0;i!==t;++i)n[i]=i;return n.sort(e),n}function Pd(r,e,t){const n=r.length,i=new r.constructor(n);for(let s=0,o=0;o!==n;++s){const c=t[s]*e;for(let u=0;u!==e;++u)i[o++]=r[c+u]}return i}function vp(r,e,t,n){let i=1,s=r[0];for(;s!==void 0&&s[n]===void 0;)s=r[i++];if(s===void 0)return;let o=s[n];if(o!==void 0)if(Array.isArray(o))do o=s[n],o!==void 0&&(e.push(s.time),t.push.apply(t,o)),s=r[i++];while(s!==void 0);else if(o.toArray!==void 0)do o=s[n],o!==void 0&&(e.push(s.time),o.toArray(t,t.length)),s=r[i++];while(s!==void 0);else do o=s[n],o!==void 0&&(e.push(s.time),t.push(o)),s=r[i++];while(s!==void 0)}function b3(r,e,t,n,i=30){const s=r.clone();s.name=e;const o=[];for(let u=0;u<s.tracks.length;++u){const h=s.tracks[u],p=h.getValueSize(),g=[],d=[];for(let m=0;m<h.times.length;++m){const _=h.times[m]*i;if(!(_<t||_>=n)){g.push(h.times[m]);for(let y=0;y<p;++y)d.push(h.values[m*p+y])}}g.length!==0&&(h.times=vs(g,h.times.constructor),h.values=vs(d,h.values.constructor),o.push(h))}s.tracks=o;let c=1/0;for(let u=0;u<s.tracks.length;++u)c>s.tracks[u].times[0]&&(c=s.tracks[u].times[0]);for(let u=0;u<s.tracks.length;++u)s.tracks[u].shift(-1*c);return s.resetDuration(),s}function M3(r,e=0,t=r,n=30){n<=0&&(n=30);const i=t.tracks.length,s=e/n;for(let o=0;o<i;++o){const c=t.tracks[o],u=c.ValueTypeName;if(u==="bool"||u==="string")continue;const h=r.tracks.find(function(x){return x.name===c.name&&x.ValueTypeName===u});if(h===void 0)continue;let p=0;const g=c.getValueSize();c.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(p=g/3);let d=0;const m=h.getValueSize();h.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(d=m/3);const _=c.times.length-1;let y;if(s<=c.times[0]){const x=p,w=g-p;y=c.values.slice(x,w)}else if(s>=c.times[_]){const x=_*g+p,w=x+g-p;y=c.values.slice(x,w)}else{const x=c.createInterpolant(),w=p,M=g-p;x.evaluate(s),y=x.resultBuffer.slice(w,M)}u==="quaternion"&&new $n().fromArray(y).normalize().conjugate().toArray(y);const v=h.times.length;for(let x=0;x<v;++x){const w=x*m+d;if(u==="quaternion")$n.multiplyQuaternionsFlat(h.values,w,y,0,h.values,w);else{const M=m-d*2;for(let E=0;E<M;++E)h.values[w+E]-=y[E]}}}return r.blendMode=Jd,r}const S3={convertArray:vs,isTypedArray:ey,getKeyframeOrder:ty,sortedArray:Pd,flattenJSON:vp,subclip:b3,makeClipAdditive:M3};class jo{constructor(e,t,n,i){this.parameterPositions=e,this._cachedIndex=0,this.resultBuffer=i!==void 0?i:new t.constructor(n),this.sampleValues=t,this.valueSize=n,this.settings=null,this.DefaultSettings_={}}evaluate(e){const t=this.parameterPositions;let n=this._cachedIndex,i=t[n],s=t[n-1];e:{t:{let o;n:{i:if(!(e<i)){for(let c=n+2;;){if(i===void 0){if(e<s)break i;return n=t.length,this._cachedIndex=n,this.copySampleValue_(n-1)}if(n===c)break;if(s=i,i=t[++n],e<i)break t}o=t.length;break n}if(!(e>=s)){const c=t[1];e<c&&(n=2,s=c);for(let u=n-2;;){if(s===void 0)return this._cachedIndex=0,this.copySampleValue_(0);if(n===u)break;if(i=s,s=t[--n-1],e>=s)break t}o=n,n=0;break n}break e}for(;n<o;){const c=n+o>>>1;e<t[c]?o=c:n=c+1}if(i=t[n],s=t[n-1],s===void 0)return this._cachedIndex=0,this.copySampleValue_(0);if(i===void 0)return n=t.length,this._cachedIndex=n,this.copySampleValue_(n-1)}this._cachedIndex=n,this.intervalChanged_(n,s,i)}return this.interpolate_(n,s,e,i)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(e){const t=this.resultBuffer,n=this.sampleValues,i=this.valueSize,s=e*i;for(let o=0;o!==i;++o)t[o]=n[s+o];return t}interpolate_(){throw new Error("call to abstract method")}intervalChanged_(){}}class ny extends jo{constructor(e,t,n,i){super(e,t,n,i),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:ms,endingEnd:ms}}intervalChanged_(e,t,n){const i=this.parameterPositions;let s=e-2,o=e+1,c=i[s],u=i[o];if(c===void 0)switch(this.getSettings_().endingStart){case gs:s=e,c=2*t-n;break;case Ro:s=i.length-2,c=t+i[s]-i[s+1];break;default:s=e,c=n}if(u===void 0)switch(this.getSettings_().endingEnd){case gs:o=e,u=2*n-t;break;case Ro:o=1,u=n+i[1]-i[0];break;default:o=e-1,u=t}const h=(n-t)*.5,p=this.valueSize;this._weightPrev=h/(t-c),this._weightNext=h/(u-n),this._offsetPrev=s*p,this._offsetNext=o*p}interpolate_(e,t,n,i){const s=this.resultBuffer,o=this.sampleValues,c=this.valueSize,u=e*c,h=u-c,p=this._offsetPrev,g=this._offsetNext,d=this._weightPrev,m=this._weightNext,_=(n-t)/(i-t),y=_*_,v=y*_,x=-d*v+2*d*y-d*_,w=(1+d)*v+(-1.5-2*d)*y+(-.5+d)*_+1,M=(-1-m)*v+(1.5+m)*y+.5*_,E=m*v-m*y;for(let O=0;O!==c;++O)s[O]=x*o[p+O]+w*o[h+O]+M*o[u+O]+E*o[g+O];return s}}class xp extends jo{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e,t,n,i){const s=this.resultBuffer,o=this.sampleValues,c=this.valueSize,u=e*c,h=u-c,p=(n-t)/(i-t),g=1-p;for(let d=0;d!==c;++d)s[d]=o[h+d]*g+o[u+d]*p;return s}}class iy extends jo{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e){return this.copySampleValue_(e-1)}}class Ii{constructor(e,t,n,i){if(e===void 0)throw new Error("THREE.KeyframeTrack: track name is undefined");if(t===void 0||t.length===0)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+e);this.name=e,this.times=vs(t,this.TimeBufferType),this.values=vs(n,this.ValueBufferType),this.setInterpolation(i||this.DefaultInterpolation)}static toJSON(e){const t=e.constructor;let n;if(t.toJSON!==this.toJSON)n=t.toJSON(e);else{n={name:e.name,times:vs(e.times,Array),values:vs(e.values,Array)};const i=e.getInterpolation();i!==e.DefaultInterpolation&&(n.interpolation=i)}return n.type=e.ValueTypeName,n}InterpolantFactoryMethodDiscrete(e){return new iy(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodLinear(e){return new xp(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodSmooth(e){return new ny(this.times,this.values,this.getValueSize(),e)}setInterpolation(e){let t;switch(e){case To:t=this.InterpolantFactoryMethodDiscrete;break;case Co:t=this.InterpolantFactoryMethodLinear;break;case Wc:t=this.InterpolantFactoryMethodSmooth;break}if(t===void 0){const n="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(this.createInterpolant===void 0)if(e!==this.DefaultInterpolation)this.setInterpolation(this.DefaultInterpolation);else throw new Error(n);return console.warn("THREE.KeyframeTrack:",n),this}return this.createInterpolant=t,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return To;case this.InterpolantFactoryMethodLinear:return Co;case this.InterpolantFactoryMethodSmooth:return Wc}}getValueSize(){return this.values.length/this.times.length}shift(e){if(e!==0){const t=this.times;for(let n=0,i=t.length;n!==i;++n)t[n]+=e}return this}scale(e){if(e!==1){const t=this.times;for(let n=0,i=t.length;n!==i;++n)t[n]*=e}return this}trim(e,t){const n=this.times,i=n.length;let s=0,o=i-1;for(;s!==i&&n[s]<e;)++s;for(;o!==-1&&n[o]>t;)--o;if(++o,s!==0||o!==i){s>=o&&(o=Math.max(o,1),s=o-1);const c=this.getValueSize();this.times=n.slice(s,o),this.values=this.values.slice(s*c,o*c)}return this}validate(){let e=!0;const t=this.getValueSize();t-Math.floor(t)!==0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),e=!1);const n=this.times,i=this.values,s=n.length;s===0&&(console.error("THREE.KeyframeTrack: Track is empty.",this),e=!1);let o=null;for(let c=0;c!==s;c++){const u=n[c];if(typeof u=="number"&&isNaN(u)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,c,u),e=!1;break}if(o!==null&&o>u){console.error("THREE.KeyframeTrack: Out of order keys.",this,c,u,o),e=!1;break}o=u}if(i!==void 0&&ey(i))for(let c=0,u=i.length;c!==u;++c){const h=i[c];if(isNaN(h)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,c,h),e=!1;break}}return e}optimize(){const e=this.times.slice(),t=this.values.slice(),n=this.getValueSize(),i=this.getInterpolation()===Wc,s=e.length-1;let o=1;for(let c=1;c<s;++c){let u=!1;const h=e[c],p=e[c+1];if(h!==p&&(c!==1||h!==e[0]))if(i)u=!0;else{const g=c*n,d=g-n,m=g+n;for(let _=0;_!==n;++_){const y=t[g+_];if(y!==t[d+_]||y!==t[m+_]){u=!0;break}}}if(u){if(c!==o){e[o]=e[c];const g=c*n,d=o*n;for(let m=0;m!==n;++m)t[d+m]=t[g+m]}++o}}if(s>0){e[o]=e[s];for(let c=s*n,u=o*n,h=0;h!==n;++h)t[u+h]=t[c+h];++o}return o!==e.length?(this.times=e.slice(0,o),this.values=t.slice(0,o*n)):(this.times=e,this.values=t),this}clone(){const e=this.times.slice(),t=this.values.slice(),n=this.constructor,i=new n(this.name,e,t);return i.createInterpolant=this.createInterpolant,i}}Ii.prototype.TimeBufferType=Float32Array;Ii.prototype.ValueBufferType=Float32Array;Ii.prototype.DefaultInterpolation=Co;class Cs extends Ii{}Cs.prototype.ValueTypeName="bool";Cs.prototype.ValueBufferType=Array;Cs.prototype.DefaultInterpolation=To;Cs.prototype.InterpolantFactoryMethodLinear=void 0;Cs.prototype.InterpolantFactoryMethodSmooth=void 0;class yp extends Ii{}yp.prototype.ValueTypeName="color";class ko extends Ii{}ko.prototype.ValueTypeName="number";class ry extends jo{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e,t,n,i){const s=this.resultBuffer,o=this.sampleValues,c=this.valueSize,u=(n-t)/(i-t);let h=e*c;for(let p=h+c;h!==p;h+=4)$n.slerpFlat(s,0,o,h-c,o,h,u);return s}}class Ua extends Ii{InterpolantFactoryMethodLinear(e){return new ry(this.times,this.values,this.getValueSize(),e)}}Ua.prototype.ValueTypeName="quaternion";Ua.prototype.DefaultInterpolation=Co;Ua.prototype.InterpolantFactoryMethodSmooth=void 0;class Rs extends Ii{}Rs.prototype.ValueTypeName="string";Rs.prototype.ValueBufferType=Array;Rs.prototype.DefaultInterpolation=To;Rs.prototype.InterpolantFactoryMethodLinear=void 0;Rs.prototype.InterpolantFactoryMethodSmooth=void 0;class Go extends Ii{}Go.prototype.ValueTypeName="vector";class Ho{constructor(e,t=-1,n,i=au){this.name=e,this.tracks=n,this.duration=t,this.blendMode=i,this.uuid=oi(),this.duration<0&&this.resetDuration()}static parse(e){const t=[],n=e.tracks,i=1/(e.fps||1);for(let o=0,c=n.length;o!==c;++o)t.push(E3(n[o]).scale(i));const s=new this(e.name,e.duration,t,e.blendMode);return s.uuid=e.uuid,s}static toJSON(e){const t=[],n=e.tracks,i={name:e.name,duration:e.duration,tracks:t,uuid:e.uuid,blendMode:e.blendMode};for(let s=0,o=n.length;s!==o;++s)t.push(Ii.toJSON(n[s]));return i}static CreateFromMorphTargetSequence(e,t,n,i){const s=t.length,o=[];for(let c=0;c<s;c++){let u=[],h=[];u.push((c+s-1)%s,c,(c+1)%s),h.push(0,1,0);const p=ty(u);u=Pd(u,1,p),h=Pd(h,1,p),!i&&u[0]===0&&(u.push(s),h.push(h[0])),o.push(new ko(".morphTargetInfluences["+t[c].name+"]",u,h).scale(1/n))}return new this(e,-1,o)}static findByName(e,t){let n=e;if(!Array.isArray(e)){const i=e;n=i.geometry&&i.geometry.animations||i.animations}for(let i=0;i<n.length;i++)if(n[i].name===t)return n[i];return null}static CreateClipsFromMorphTargetSequences(e,t,n){const i={},s=/^([\w-]*?)([\d]+)$/;for(let c=0,u=e.length;c<u;c++){const h=e[c],p=h.name.match(s);if(p&&p.length>1){const g=p[1];let d=i[g];d||(i[g]=d=[]),d.push(h)}}const o=[];for(const c in i)o.push(this.CreateFromMorphTargetSequence(c,i[c],t,n));return o}static parseAnimation(e,t){if(!e)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;const n=function(g,d,m,_,y){if(m.length!==0){const v=[],x=[];vp(m,v,x,_),v.length!==0&&y.push(new g(d,v,x))}},i=[],s=e.name||"default",o=e.fps||30,c=e.blendMode;let u=e.length||-1;const h=e.hierarchy||[];for(let g=0;g<h.length;g++){const d=h[g].keys;if(!(!d||d.length===0))if(d[0].morphTargets){const m={};let _;for(_=0;_<d.length;_++)if(d[_].morphTargets)for(let y=0;y<d[_].morphTargets.length;y++)m[d[_].morphTargets[y]]=-1;for(const y in m){const v=[],x=[];for(let w=0;w!==d[_].morphTargets.length;++w){const M=d[_];v.push(M.time),x.push(M.morphTarget===y?1:0)}i.push(new ko(".morphTargetInfluence["+y+"]",v,x))}u=m.length*o}else{const m=".bones["+t[g].name+"]";n(Go,m+".position",d,"pos",i),n(Ua,m+".quaternion",d,"rot",i),n(Go,m+".scale",d,"scl",i)}}return i.length===0?null:new this(s,u,i,c)}resetDuration(){const e=this.tracks;let t=0;for(let n=0,i=e.length;n!==i;++n){const s=this.tracks[n];t=Math.max(t,s.times[s.times.length-1])}return this.duration=t,this}trim(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].trim(0,this.duration);return this}validate(){let e=!0;for(let t=0;t<this.tracks.length;t++)e=e&&this.tracks[t].validate();return e}optimize(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].optimize();return this}clone(){const e=[];for(let t=0;t<this.tracks.length;t++)e.push(this.tracks[t].clone());return new this.constructor(this.name,this.duration,e,this.blendMode)}toJSON(){return this.constructor.toJSON(this)}}function w3(r){switch(r.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return ko;case"vector":case"vector2":case"vector3":case"vector4":return Go;case"color":return yp;case"quaternion":return Ua;case"bool":case"boolean":return Cs;case"string":return Rs}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+r)}function E3(r){if(r.type===void 0)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");const e=w3(r.type);if(r.times===void 0){const t=[],n=[];vp(r.keys,t,n,"value"),r.times=t,r.values=n}return e.parse!==void 0?e.parse(r):new e(r.name,r.times,r.values,r.interpolation)}const lr={enabled:!1,files:{},add:function(r,e){this.enabled!==!1&&(this.files[r]=e)},get:function(r){if(this.enabled!==!1)return this.files[r]},remove:function(r){delete this.files[r]},clear:function(){this.files={}}};class bp{constructor(e,t,n){const i=this;let s=!1,o=0,c=0,u;const h=[];this.onStart=void 0,this.onLoad=e,this.onProgress=t,this.onError=n,this.itemStart=function(p){c++,s===!1&&i.onStart!==void 0&&i.onStart(p,o,c),s=!0},this.itemEnd=function(p){o++,i.onProgress!==void 0&&i.onProgress(p,o,c),o===c&&(s=!1,i.onLoad!==void 0&&i.onLoad())},this.itemError=function(p){i.onError!==void 0&&i.onError(p)},this.resolveURL=function(p){return u?u(p):p},this.setURLModifier=function(p){return u=p,this},this.addHandler=function(p,g){return h.push(p,g),this},this.removeHandler=function(p){const g=h.indexOf(p);return g!==-1&&h.splice(g,2),this},this.getHandler=function(p){for(let g=0,d=h.length;g<d;g+=2){const m=h[g],_=h[g+1];if(m.global&&(m.lastIndex=0),m.test(p))return _}return null}}}const sy=new bp;class Zn{constructor(e){this.manager=e!==void 0?e:sy,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(e,t){const n=this;return new Promise(function(i,s){n.load(e,i,t,s)})}parse(){}setCrossOrigin(e){return this.crossOrigin=e,this}setWithCredentials(e){return this.withCredentials=e,this}setPath(e){return this.path=e,this}setResourcePath(e){return this.resourcePath=e,this}setRequestHeader(e){return this.requestHeader=e,this}}Zn.DEFAULT_MATERIAL_NAME="__DEFAULT";const sr={};class A3 extends Error{constructor(e,t){super(e),this.response=t}}class pr extends Zn{constructor(e){super(e)}load(e,t,n,i){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const s=lr.get(e);if(s!==void 0)return this.manager.itemStart(e),setTimeout(()=>{t&&t(s),this.manager.itemEnd(e)},0),s;if(sr[e]!==void 0){sr[e].push({onLoad:t,onProgress:n,onError:i});return}sr[e]=[],sr[e].push({onLoad:t,onProgress:n,onError:i});const o=new Request(e,{headers:new Headers(this.requestHeader),credentials:this.withCredentials?"include":"same-origin"}),c=this.mimeType,u=this.responseType;fetch(o).then(h=>{if(h.status===200||h.status===0){if(h.status===0&&console.warn("THREE.FileLoader: HTTP Status 0 received."),typeof ReadableStream>"u"||h.body===void 0||h.body.getReader===void 0)return h;const p=sr[e],g=h.body.getReader(),d=h.headers.get("Content-Length")||h.headers.get("X-File-Size"),m=d?parseInt(d):0,_=m!==0;let y=0;const v=new ReadableStream({start(x){w();function w(){g.read().then(({done:M,value:E})=>{if(M)x.close();else{y+=E.byteLength;const O=new ProgressEvent("progress",{lengthComputable:_,loaded:y,total:m});for(let P=0,U=p.length;P<U;P++){const V=p[P];V.onProgress&&V.onProgress(O)}x.enqueue(E),w()}})}}});return new Response(v)}else throw new A3(`fetch for "${h.url}" responded with ${h.status}: ${h.statusText}`,h)}).then(h=>{switch(u){case"arraybuffer":return h.arrayBuffer();case"blob":return h.blob();case"document":return h.text().then(p=>new DOMParser().parseFromString(p,c));case"json":return h.json();default:if(c===void 0)return h.text();{const g=/charset="?([^;"\s]*)"?/i.exec(c),d=g&&g[1]?g[1].toLowerCase():void 0,m=new TextDecoder(d);return h.arrayBuffer().then(_=>m.decode(_))}}}).then(h=>{lr.add(e,h);const p=sr[e];delete sr[e];for(let g=0,d=p.length;g<d;g++){const m=p[g];m.onLoad&&m.onLoad(h)}}).catch(h=>{const p=sr[e];if(p===void 0)throw this.manager.itemError(e),h;delete sr[e];for(let g=0,d=p.length;g<d;g++){const m=p[g];m.onError&&m.onError(h)}this.manager.itemError(e)}).finally(()=>{this.manager.itemEnd(e)}),this.manager.itemStart(e)}setResponseType(e){return this.responseType=e,this}setMimeType(e){return this.mimeType=e,this}}class T3 extends Zn{constructor(e){super(e)}load(e,t,n,i){const s=this,o=new pr(this.manager);o.setPath(this.path),o.setRequestHeader(this.requestHeader),o.setWithCredentials(this.withCredentials),o.load(e,function(c){try{t(s.parse(JSON.parse(c)))}catch(u){i?i(u):console.error(u),s.manager.itemError(e)}},n,i)}parse(e){const t=[];for(let n=0;n<e.length;n++){const i=Ho.parse(e[n]);t.push(i)}return t}}class C3 extends Zn{constructor(e){super(e)}load(e,t,n,i){const s=this,o=[],c=new _u,u=new pr(this.manager);u.setPath(this.path),u.setResponseType("arraybuffer"),u.setRequestHeader(this.requestHeader),u.setWithCredentials(s.withCredentials);let h=0;function p(g){u.load(e[g],function(d){const m=s.parse(d,!0);o[g]={width:m.width,height:m.height,format:m.format,mipmaps:m.mipmaps},h+=1,h===6&&(m.mipmapCount===1&&(c.minFilter=$t),c.image=o,c.format=m.format,c.needsUpdate=!0,t&&t(c))},n,i)}if(Array.isArray(e))for(let g=0,d=e.length;g<d;++g)p(g);else u.load(e,function(g){const d=s.parse(g,!0);if(d.isCubemap){const m=d.mipmaps.length/d.mipmapCount;for(let _=0;_<m;_++){o[_]={mipmaps:[]};for(let y=0;y<d.mipmapCount;y++)o[_].mipmaps.push(d.mipmaps[_*d.mipmapCount+y]),o[_].format=d.format,o[_].width=d.width,o[_].height=d.height}c.image=o}else c.image.width=d.width,c.image.height=d.height,c.mipmaps=d.mipmaps;d.mipmapCount===1&&(c.minFilter=$t),c.format=d.format,c.needsUpdate=!0,t&&t(c)},n,i);return c}}class Vo extends Zn{constructor(e){super(e)}load(e,t,n,i){this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const s=this,o=lr.get(e);if(o!==void 0)return s.manager.itemStart(e),setTimeout(function(){t&&t(o),s.manager.itemEnd(e)},0),o;const c=No("img");function u(){p(),lr.add(e,this),t&&t(this),s.manager.itemEnd(e)}function h(g){p(),i&&i(g),s.manager.itemError(e),s.manager.itemEnd(e)}function p(){c.removeEventListener("load",u,!1),c.removeEventListener("error",h,!1)}return c.addEventListener("load",u,!1),c.addEventListener("error",h,!1),e.slice(0,5)!=="data:"&&this.crossOrigin!==void 0&&(c.crossOrigin=this.crossOrigin),s.manager.itemStart(e),c.src=e,c}}class R3 extends Zn{constructor(e){super(e)}load(e,t,n,i){const s=new Yo;s.colorSpace=dn;const o=new Vo(this.manager);o.setCrossOrigin(this.crossOrigin),o.setPath(this.path);let c=0;function u(h){o.load(e[h],function(p){s.images[h]=p,c++,c===6&&(s.needsUpdate=!0,t&&t(s))},void 0,i)}for(let h=0;h<e.length;++h)u(h);return s}}class L3 extends Zn{constructor(e){super(e)}load(e,t,n,i){const s=this,o=new Ms,c=new pr(this.manager);return c.setResponseType("arraybuffer"),c.setRequestHeader(this.requestHeader),c.setPath(this.path),c.setWithCredentials(s.withCredentials),c.load(e,function(u){let h;try{h=s.parse(u)}catch(p){if(i!==void 0)i(p);else{console.error(p);return}}h.image!==void 0?o.image=h.image:h.data!==void 0&&(o.image.width=h.width,o.image.height=h.height,o.image.data=h.data),o.wrapS=h.wrapS!==void 0?h.wrapS:Tn,o.wrapT=h.wrapT!==void 0?h.wrapT:Tn,o.magFilter=h.magFilter!==void 0?h.magFilter:$t,o.minFilter=h.minFilter!==void 0?h.minFilter:$t,o.anisotropy=h.anisotropy!==void 0?h.anisotropy:1,h.colorSpace!==void 0?o.colorSpace=h.colorSpace:h.encoding!==void 0&&(o.encoding=h.encoding),h.flipY!==void 0&&(o.flipY=h.flipY),h.format!==void 0&&(o.format=h.format),h.type!==void 0&&(o.type=h.type),h.mipmaps!==void 0&&(o.mipmaps=h.mipmaps,o.minFilter=zi),h.mipmapCount===1&&(o.minFilter=$t),h.generateMipmaps!==void 0&&(o.generateMipmaps=h.generateMipmaps),o.needsUpdate=!0,t&&t(o,h)},n,i),o}}class P3 extends Zn{constructor(e){super(e)}load(e,t,n,i){const s=new Qt,o=new Vo(this.manager);return o.setCrossOrigin(this.crossOrigin),o.setPath(this.path),o.load(e,function(c){s.image=c,s.needsUpdate=!0,t!==void 0&&t(s)},n,i),s}}class Wr extends Ct{constructor(e,t=1){super(),this.isLight=!0,this.type="Light",this.color=new qe(e),this.intensity=t}dispose(){}copy(e,t){return super.copy(e,t),this.color.copy(e.color),this.intensity=e.intensity,this}toJSON(e){const t=super.toJSON(e);return t.object.color=this.color.getHex(),t.object.intensity=this.intensity,this.groundColor!==void 0&&(t.object.groundColor=this.groundColor.getHex()),this.distance!==void 0&&(t.object.distance=this.distance),this.angle!==void 0&&(t.object.angle=this.angle),this.decay!==void 0&&(t.object.decay=this.decay),this.penumbra!==void 0&&(t.object.penumbra=this.penumbra),this.shadow!==void 0&&(t.object.shadow=this.shadow.toJSON()),t}}class ay extends Wr{constructor(e,t,n){super(e,n),this.isHemisphereLight=!0,this.type="HemisphereLight",this.position.copy(Ct.DEFAULT_UP),this.updateMatrix(),this.groundColor=new qe(t)}copy(e,t){return super.copy(e,t),this.groundColor.copy(e.groundColor),this}}const Rf=new at,f0=new F,d0=new F;class Mp{constructor(e){this.camera=e,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new Le(512,512),this.map=null,this.mapPass=null,this.matrix=new at,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new $o,this._frameExtents=new Le(1,1),this._viewportCount=1,this._viewports=[new Nt(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(e){const t=this.camera,n=this.matrix;f0.setFromMatrixPosition(e.matrixWorld),t.position.copy(f0),d0.setFromMatrixPosition(e.target.matrixWorld),t.lookAt(d0),t.updateMatrixWorld(),Rf.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),this._frustum.setFromProjectionMatrix(Rf),n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),n.multiply(Rf)}getViewport(e){return this._viewports[e]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(e){return this.camera=e.camera.clone(),this.bias=e.bias,this.radius=e.radius,this.mapSize.copy(e.mapSize),this}clone(){return new this.constructor().copy(this)}toJSON(){const e={};return this.bias!==0&&(e.bias=this.bias),this.normalBias!==0&&(e.normalBias=this.normalBias),this.radius!==1&&(e.radius=this.radius),(this.mapSize.x!==512||this.mapSize.y!==512)&&(e.mapSize=this.mapSize.toArray()),e.camera=this.camera.toJSON(!1).object,delete e.camera.matrix,e}}class I3 extends Mp{constructor(){super(new yn(50,1,.5,500)),this.isSpotLightShadow=!0,this.focus=1}updateMatrices(e){const t=this.camera,n=Aa*2*e.angle*this.focus,i=this.mapSize.width/this.mapSize.height,s=e.distance||t.far;(n!==t.fov||i!==t.aspect||s!==t.far)&&(t.fov=n,t.aspect=i,t.far=s,t.updateProjectionMatrix()),super.updateMatrices(e)}copy(e){return super.copy(e),this.focus=e.focus,this}}class oy extends Wr{constructor(e,t,n=0,i=Math.PI/3,s=0,o=2){super(e,t),this.isSpotLight=!0,this.type="SpotLight",this.position.copy(Ct.DEFAULT_UP),this.updateMatrix(),this.target=new Ct,this.distance=n,this.angle=i,this.penumbra=s,this.decay=o,this.map=null,this.shadow=new I3}get power(){return this.intensity*Math.PI}set power(e){this.intensity=e/Math.PI}dispose(){this.shadow.dispose()}copy(e,t){return super.copy(e,t),this.distance=e.distance,this.angle=e.angle,this.penumbra=e.penumbra,this.decay=e.decay,this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}const p0=new at,go=new F,Lf=new F;class D3 extends Mp{constructor(){super(new yn(90,1,.5,500)),this.isPointLightShadow=!0,this._frameExtents=new Le(4,2),this._viewportCount=6,this._viewports=[new Nt(2,1,1,1),new Nt(0,1,1,1),new Nt(3,1,1,1),new Nt(1,1,1,1),new Nt(3,0,1,1),new Nt(1,0,1,1)],this._cubeDirections=[new F(1,0,0),new F(-1,0,0),new F(0,0,1),new F(0,0,-1),new F(0,1,0),new F(0,-1,0)],this._cubeUps=[new F(0,1,0),new F(0,1,0),new F(0,1,0),new F(0,1,0),new F(0,0,1),new F(0,0,-1)]}updateMatrices(e,t=0){const n=this.camera,i=this.matrix,s=e.distance||n.far;s!==n.far&&(n.far=s,n.updateProjectionMatrix()),go.setFromMatrixPosition(e.matrixWorld),n.position.copy(go),Lf.copy(n.position),Lf.add(this._cubeDirections[t]),n.up.copy(this._cubeUps[t]),n.lookAt(Lf),n.updateMatrixWorld(),i.makeTranslation(-go.x,-go.y,-go.z),p0.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),this._frustum.setFromProjectionMatrix(p0)}}class ly extends Wr{constructor(e,t,n=0,i=2){super(e,t),this.isPointLight=!0,this.type="PointLight",this.distance=n,this.decay=i,this.shadow=new D3}get power(){return this.intensity*4*Math.PI}set power(e){this.intensity=e/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(e,t){return super.copy(e,t),this.distance=e.distance,this.decay=e.decay,this.shadow=e.shadow.clone(),this}}class U3 extends Mp{constructor(){super(new hu(-5,5,5,-5,.5,500)),this.isDirectionalLightShadow=!0}}class cy extends Wr{constructor(e,t){super(e,t),this.isDirectionalLight=!0,this.type="DirectionalLight",this.position.copy(Ct.DEFAULT_UP),this.updateMatrix(),this.target=new Ct,this.shadow=new U3}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}class uy extends Wr{constructor(e,t){super(e,t),this.isAmbientLight=!0,this.type="AmbientLight"}}class hy extends Wr{constructor(e,t,n=10,i=10){super(e,t),this.isRectAreaLight=!0,this.type="RectAreaLight",this.width=n,this.height=i}get power(){return this.intensity*this.width*this.height*Math.PI}set power(e){this.intensity=e/(this.width*this.height*Math.PI)}copy(e){return super.copy(e),this.width=e.width,this.height=e.height,this}toJSON(e){const t=super.toJSON(e);return t.object.width=this.width,t.object.height=this.height,t}}class fy{constructor(){this.isSphericalHarmonics3=!0,this.coefficients=[];for(let e=0;e<9;e++)this.coefficients.push(new F)}set(e){for(let t=0;t<9;t++)this.coefficients[t].copy(e[t]);return this}zero(){for(let e=0;e<9;e++)this.coefficients[e].set(0,0,0);return this}getAt(e,t){const n=e.x,i=e.y,s=e.z,o=this.coefficients;return t.copy(o[0]).multiplyScalar(.282095),t.addScaledVector(o[1],.488603*i),t.addScaledVector(o[2],.488603*s),t.addScaledVector(o[3],.488603*n),t.addScaledVector(o[4],1.092548*(n*i)),t.addScaledVector(o[5],1.092548*(i*s)),t.addScaledVector(o[6],.315392*(3*s*s-1)),t.addScaledVector(o[7],1.092548*(n*s)),t.addScaledVector(o[8],.546274*(n*n-i*i)),t}getIrradianceAt(e,t){const n=e.x,i=e.y,s=e.z,o=this.coefficients;return t.copy(o[0]).multiplyScalar(.886227),t.addScaledVector(o[1],2*.511664*i),t.addScaledVector(o[2],2*.511664*s),t.addScaledVector(o[3],2*.511664*n),t.addScaledVector(o[4],2*.429043*n*i),t.addScaledVector(o[5],2*.429043*i*s),t.addScaledVector(o[6],.743125*s*s-.247708),t.addScaledVector(o[7],2*.429043*n*s),t.addScaledVector(o[8],.429043*(n*n-i*i)),t}add(e){for(let t=0;t<9;t++)this.coefficients[t].add(e.coefficients[t]);return this}addScaledSH(e,t){for(let n=0;n<9;n++)this.coefficients[n].addScaledVector(e.coefficients[n],t);return this}scale(e){for(let t=0;t<9;t++)this.coefficients[t].multiplyScalar(e);return this}lerp(e,t){for(let n=0;n<9;n++)this.coefficients[n].lerp(e.coefficients[n],t);return this}equals(e){for(let t=0;t<9;t++)if(!this.coefficients[t].equals(e.coefficients[t]))return!1;return!0}copy(e){return this.set(e.coefficients)}clone(){return new this.constructor().copy(this)}fromArray(e,t=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].fromArray(e,t+i*3);return this}toArray(e=[],t=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].toArray(e,t+i*3);return e}static getBasisAt(e,t){const n=e.x,i=e.y,s=e.z;t[0]=.282095,t[1]=.488603*i,t[2]=.488603*s,t[3]=.488603*n,t[4]=1.092548*n*i,t[5]=1.092548*i*s,t[6]=.315392*(3*s*s-1),t[7]=1.092548*n*s,t[8]=.546274*(n*n-i*i)}}class dy extends Wr{constructor(e=new fy,t=1){super(void 0,t),this.isLightProbe=!0,this.sh=e}copy(e){return super.copy(e),this.sh.copy(e.sh),this}fromJSON(e){return this.intensity=e.intensity,this.sh.fromArray(e.sh),this}toJSON(e){const t=super.toJSON(e);return t.object.sh=this.sh.toArray(),t}}class Iu extends Zn{constructor(e){super(e),this.textures={}}load(e,t,n,i){const s=this,o=new pr(s.manager);o.setPath(s.path),o.setRequestHeader(s.requestHeader),o.setWithCredentials(s.withCredentials),o.load(e,function(c){try{t(s.parse(JSON.parse(c)))}catch(u){i?i(u):console.error(u),s.manager.itemError(e)}},n,i)}parse(e){const t=this.textures;function n(s){return t[s]===void 0&&console.warn("THREE.MaterialLoader: Undefined texture",s),t[s]}const i=Iu.createMaterialFromType(e.type);if(e.uuid!==void 0&&(i.uuid=e.uuid),e.name!==void 0&&(i.name=e.name),e.color!==void 0&&i.color!==void 0&&i.color.setHex(e.color),e.roughness!==void 0&&(i.roughness=e.roughness),e.metalness!==void 0&&(i.metalness=e.metalness),e.sheen!==void 0&&(i.sheen=e.sheen),e.sheenColor!==void 0&&(i.sheenColor=new qe().setHex(e.sheenColor)),e.sheenRoughness!==void 0&&(i.sheenRoughness=e.sheenRoughness),e.emissive!==void 0&&i.emissive!==void 0&&i.emissive.setHex(e.emissive),e.specular!==void 0&&i.specular!==void 0&&i.specular.setHex(e.specular),e.specularIntensity!==void 0&&(i.specularIntensity=e.specularIntensity),e.specularColor!==void 0&&i.specularColor!==void 0&&i.specularColor.setHex(e.specularColor),e.shininess!==void 0&&(i.shininess=e.shininess),e.clearcoat!==void 0&&(i.clearcoat=e.clearcoat),e.clearcoatRoughness!==void 0&&(i.clearcoatRoughness=e.clearcoatRoughness),e.iridescence!==void 0&&(i.iridescence=e.iridescence),e.iridescenceIOR!==void 0&&(i.iridescenceIOR=e.iridescenceIOR),e.iridescenceThicknessRange!==void 0&&(i.iridescenceThicknessRange=e.iridescenceThicknessRange),e.transmission!==void 0&&(i.transmission=e.transmission),e.thickness!==void 0&&(i.thickness=e.thickness),e.attenuationDistance!==void 0&&(i.attenuationDistance=e.attenuationDistance),e.attenuationColor!==void 0&&i.attenuationColor!==void 0&&i.attenuationColor.setHex(e.attenuationColor),e.anisotropy!==void 0&&(i.anisotropy=e.anisotropy),e.anisotropyRotation!==void 0&&(i.anisotropyRotation=e.anisotropyRotation),e.fog!==void 0&&(i.fog=e.fog),e.flatShading!==void 0&&(i.flatShading=e.flatShading),e.blending!==void 0&&(i.blending=e.blending),e.combine!==void 0&&(i.combine=e.combine),e.side!==void 0&&(i.side=e.side),e.shadowSide!==void 0&&(i.shadowSide=e.shadowSide),e.opacity!==void 0&&(i.opacity=e.opacity),e.transparent!==void 0&&(i.transparent=e.transparent),e.alphaTest!==void 0&&(i.alphaTest=e.alphaTest),e.alphaHash!==void 0&&(i.alphaHash=e.alphaHash),e.depthFunc!==void 0&&(i.depthFunc=e.depthFunc),e.depthTest!==void 0&&(i.depthTest=e.depthTest),e.depthWrite!==void 0&&(i.depthWrite=e.depthWrite),e.colorWrite!==void 0&&(i.colorWrite=e.colorWrite),e.blendSrc!==void 0&&(i.blendSrc=e.blendSrc),e.blendDst!==void 0&&(i.blendDst=e.blendDst),e.blendEquation!==void 0&&(i.blendEquation=e.blendEquation),e.blendSrcAlpha!==void 0&&(i.blendSrcAlpha=e.blendSrcAlpha),e.blendDstAlpha!==void 0&&(i.blendDstAlpha=e.blendDstAlpha),e.blendEquationAlpha!==void 0&&(i.blendEquationAlpha=e.blendEquationAlpha),e.blendColor!==void 0&&i.blendColor!==void 0&&i.blendColor.setHex(e.blendColor),e.blendAlpha!==void 0&&(i.blendAlpha=e.blendAlpha),e.stencilWriteMask!==void 0&&(i.stencilWriteMask=e.stencilWriteMask),e.stencilFunc!==void 0&&(i.stencilFunc=e.stencilFunc),e.stencilRef!==void 0&&(i.stencilRef=e.stencilRef),e.stencilFuncMask!==void 0&&(i.stencilFuncMask=e.stencilFuncMask),e.stencilFail!==void 0&&(i.stencilFail=e.stencilFail),e.stencilZFail!==void 0&&(i.stencilZFail=e.stencilZFail),e.stencilZPass!==void 0&&(i.stencilZPass=e.stencilZPass),e.stencilWrite!==void 0&&(i.stencilWrite=e.stencilWrite),e.wireframe!==void 0&&(i.wireframe=e.wireframe),e.wireframeLinewidth!==void 0&&(i.wireframeLinewidth=e.wireframeLinewidth),e.wireframeLinecap!==void 0&&(i.wireframeLinecap=e.wireframeLinecap),e.wireframeLinejoin!==void 0&&(i.wireframeLinejoin=e.wireframeLinejoin),e.rotation!==void 0&&(i.rotation=e.rotation),e.linewidth!==void 0&&(i.linewidth=e.linewidth),e.dashSize!==void 0&&(i.dashSize=e.dashSize),e.gapSize!==void 0&&(i.gapSize=e.gapSize),e.scale!==void 0&&(i.scale=e.scale),e.polygonOffset!==void 0&&(i.polygonOffset=e.polygonOffset),e.polygonOffsetFactor!==void 0&&(i.polygonOffsetFactor=e.polygonOffsetFactor),e.polygonOffsetUnits!==void 0&&(i.polygonOffsetUnits=e.polygonOffsetUnits),e.dithering!==void 0&&(i.dithering=e.dithering),e.alphaToCoverage!==void 0&&(i.alphaToCoverage=e.alphaToCoverage),e.premultipliedAlpha!==void 0&&(i.premultipliedAlpha=e.premultipliedAlpha),e.forceSinglePass!==void 0&&(i.forceSinglePass=e.forceSinglePass),e.visible!==void 0&&(i.visible=e.visible),e.toneMapped!==void 0&&(i.toneMapped=e.toneMapped),e.userData!==void 0&&(i.userData=e.userData),e.vertexColors!==void 0&&(typeof e.vertexColors=="number"?i.vertexColors=e.vertexColors>0:i.vertexColors=e.vertexColors),e.uniforms!==void 0)for(const s in e.uniforms){const o=e.uniforms[s];switch(i.uniforms[s]={},o.type){case"t":i.uniforms[s].value=n(o.value);break;case"c":i.uniforms[s].value=new qe().setHex(o.value);break;case"v2":i.uniforms[s].value=new Le().fromArray(o.value);break;case"v3":i.uniforms[s].value=new F().fromArray(o.value);break;case"v4":i.uniforms[s].value=new Nt().fromArray(o.value);break;case"m3":i.uniforms[s].value=new vt().fromArray(o.value);break;case"m4":i.uniforms[s].value=new at().fromArray(o.value);break;default:i.uniforms[s].value=o.value}}if(e.defines!==void 0&&(i.defines=e.defines),e.vertexShader!==void 0&&(i.vertexShader=e.vertexShader),e.fragmentShader!==void 0&&(i.fragmentShader=e.fragmentShader),e.glslVersion!==void 0&&(i.glslVersion=e.glslVersion),e.extensions!==void 0)for(const s in e.extensions)i.extensions[s]=e.extensions[s];if(e.lights!==void 0&&(i.lights=e.lights),e.clipping!==void 0&&(i.clipping=e.clipping),e.size!==void 0&&(i.size=e.size),e.sizeAttenuation!==void 0&&(i.sizeAttenuation=e.sizeAttenuation),e.map!==void 0&&(i.map=n(e.map)),e.matcap!==void 0&&(i.matcap=n(e.matcap)),e.alphaMap!==void 0&&(i.alphaMap=n(e.alphaMap)),e.bumpMap!==void 0&&(i.bumpMap=n(e.bumpMap)),e.bumpScale!==void 0&&(i.bumpScale=e.bumpScale),e.normalMap!==void 0&&(i.normalMap=n(e.normalMap)),e.normalMapType!==void 0&&(i.normalMapType=e.normalMapType),e.normalScale!==void 0){let s=e.normalScale;Array.isArray(s)===!1&&(s=[s,s]),i.normalScale=new Le().fromArray(s)}return e.displacementMap!==void 0&&(i.displacementMap=n(e.displacementMap)),e.displacementScale!==void 0&&(i.displacementScale=e.displacementScale),e.displacementBias!==void 0&&(i.displacementBias=e.displacementBias),e.roughnessMap!==void 0&&(i.roughnessMap=n(e.roughnessMap)),e.metalnessMap!==void 0&&(i.metalnessMap=n(e.metalnessMap)),e.emissiveMap!==void 0&&(i.emissiveMap=n(e.emissiveMap)),e.emissiveIntensity!==void 0&&(i.emissiveIntensity=e.emissiveIntensity),e.specularMap!==void 0&&(i.specularMap=n(e.specularMap)),e.specularIntensityMap!==void 0&&(i.specularIntensityMap=n(e.specularIntensityMap)),e.specularColorMap!==void 0&&(i.specularColorMap=n(e.specularColorMap)),e.envMap!==void 0&&(i.envMap=n(e.envMap)),e.envMapIntensity!==void 0&&(i.envMapIntensity=e.envMapIntensity),e.reflectivity!==void 0&&(i.reflectivity=e.reflectivity),e.refractionRatio!==void 0&&(i.refractionRatio=e.refractionRatio),e.lightMap!==void 0&&(i.lightMap=n(e.lightMap)),e.lightMapIntensity!==void 0&&(i.lightMapIntensity=e.lightMapIntensity),e.aoMap!==void 0&&(i.aoMap=n(e.aoMap)),e.aoMapIntensity!==void 0&&(i.aoMapIntensity=e.aoMapIntensity),e.gradientMap!==void 0&&(i.gradientMap=n(e.gradientMap)),e.clearcoatMap!==void 0&&(i.clearcoatMap=n(e.clearcoatMap)),e.clearcoatRoughnessMap!==void 0&&(i.clearcoatRoughnessMap=n(e.clearcoatRoughnessMap)),e.clearcoatNormalMap!==void 0&&(i.clearcoatNormalMap=n(e.clearcoatNormalMap)),e.clearcoatNormalScale!==void 0&&(i.clearcoatNormalScale=new Le().fromArray(e.clearcoatNormalScale)),e.iridescenceMap!==void 0&&(i.iridescenceMap=n(e.iridescenceMap)),e.iridescenceThicknessMap!==void 0&&(i.iridescenceThicknessMap=n(e.iridescenceThicknessMap)),e.transmissionMap!==void 0&&(i.transmissionMap=n(e.transmissionMap)),e.thicknessMap!==void 0&&(i.thicknessMap=n(e.thicknessMap)),e.anisotropyMap!==void 0&&(i.anisotropyMap=n(e.anisotropyMap)),e.sheenColorMap!==void 0&&(i.sheenColorMap=n(e.sheenColorMap)),e.sheenRoughnessMap!==void 0&&(i.sheenRoughnessMap=n(e.sheenRoughnessMap)),i}setTextures(e){return this.textures=e,this}static createMaterialFromType(e){const t={ShadowMaterial:Xx,SpriteMaterial:lp,RawShaderMaterial:qx,ShaderMaterial:Li,PointsMaterial:up,MeshPhysicalMaterial:Yx,MeshStandardMaterial:_p,MeshPhongMaterial:$x,MeshToonMaterial:Zx,MeshNormalMaterial:Jx,MeshLambertMaterial:Kx,MeshDepthMaterial:ap,MeshDistanceMaterial:op,MeshBasicMaterial:Hr,MeshMatcapMaterial:jx,LineDashedMaterial:Qx,LineBasicMaterial:Bn,Material:Rn};return new t[e]}}class Id{static decodeText(e){if(typeof TextDecoder<"u")return new TextDecoder().decode(e);let t="";for(let n=0,i=e.length;n<i;n++)t+=String.fromCharCode(e[n]);try{return decodeURIComponent(escape(t))}catch{return t}}static extractUrlBase(e){const t=e.lastIndexOf("/");return t===-1?"./":e.slice(0,t+1)}static resolveURL(e,t){return typeof e!="string"||e===""?"":(/^https?:\/\//i.test(t)&&/^\//.test(e)&&(t=t.replace(/(^https?:\/\/[^\/]+).*/i,"$1")),/^(https?:)?\/\//i.test(e)||/^data:.*,.*$/i.test(e)||/^blob:.*$/i.test(e)?e:t+e)}}class py extends xt{constructor(){super(),this.isInstancedBufferGeometry=!0,this.type="InstancedBufferGeometry",this.instanceCount=1/0}copy(e){return super.copy(e),this.instanceCount=e.instanceCount,this}toJSON(){const e=super.toJSON();return e.instanceCount=this.instanceCount,e.isInstancedBufferGeometry=!0,e}}class my extends Zn{constructor(e){super(e)}load(e,t,n,i){const s=this,o=new pr(s.manager);o.setPath(s.path),o.setRequestHeader(s.requestHeader),o.setWithCredentials(s.withCredentials),o.load(e,function(c){try{t(s.parse(JSON.parse(c)))}catch(u){i?i(u):console.error(u),s.manager.itemError(e)}},n,i)}parse(e){const t={},n={};function i(m,_){if(t[_]!==void 0)return t[_];const v=m.interleavedBuffers[_],x=s(m,v.buffer),w=va(v.type,x),M=new mu(w,v.stride);return M.uuid=v.uuid,t[_]=M,M}function s(m,_){if(n[_]!==void 0)return n[_];const v=m.arrayBuffers[_],x=new Uint32Array(v).buffer;return n[_]=x,x}const o=e.isInstancedBufferGeometry?new py:new xt,c=e.data.index;if(c!==void 0){const m=va(c.type,c.array);o.setIndex(new Ot(m,1))}const u=e.data.attributes;for(const m in u){const _=u[m];let y;if(_.isInterleavedBufferAttribute){const v=i(e.data,_.data);y=new Es(v,_.itemSize,_.offset,_.normalized)}else{const v=va(_.type,_.array),x=_.isInstancedBufferAttribute?Ca:Ot;y=new x(v,_.itemSize,_.normalized)}_.name!==void 0&&(y.name=_.name),_.usage!==void 0&&y.setUsage(_.usage),o.setAttribute(m,y)}const h=e.data.morphAttributes;if(h)for(const m in h){const _=h[m],y=[];for(let v=0,x=_.length;v<x;v++){const w=_[v];let M;if(w.isInterleavedBufferAttribute){const E=i(e.data,w.data);M=new Es(E,w.itemSize,w.offset,w.normalized)}else{const E=va(w.type,w.array);M=new Ot(E,w.itemSize,w.normalized)}w.name!==void 0&&(M.name=w.name),y.push(M)}o.morphAttributes[m]=y}e.data.morphTargetsRelative&&(o.morphTargetsRelative=!0);const g=e.data.groups||e.data.drawcalls||e.data.offsets;if(g!==void 0)for(let m=0,_=g.length;m!==_;++m){const y=g[m];o.addGroup(y.start,y.count,y.materialIndex)}const d=e.data.boundingSphere;if(d!==void 0){const m=new F;d.center!==void 0&&m.fromArray(d.center),o.boundingSphere=new Cn(m,d.radius)}return e.name&&(o.name=e.name),e.userData&&(o.userData=e.userData),o}}class N3 extends Zn{constructor(e){super(e)}load(e,t,n,i){const s=this,o=this.path===""?Id.extractUrlBase(e):this.path;this.resourcePath=this.resourcePath||o;const c=new pr(this.manager);c.setPath(this.path),c.setRequestHeader(this.requestHeader),c.setWithCredentials(this.withCredentials),c.load(e,function(u){let h=null;try{h=JSON.parse(u)}catch(g){i!==void 0&&i(g),console.error("THREE:ObjectLoader: Can't parse "+e+".",g.message);return}const p=h.metadata;if(p===void 0||p.type===void 0||p.type.toLowerCase()==="geometry"){i!==void 0&&i(new Error("THREE.ObjectLoader: Can't load "+e)),console.error("THREE.ObjectLoader: Can't load "+e);return}s.parse(h,t)},n,i)}async loadAsync(e,t){const n=this,i=this.path===""?Id.extractUrlBase(e):this.path;this.resourcePath=this.resourcePath||i;const s=new pr(this.manager);s.setPath(this.path),s.setRequestHeader(this.requestHeader),s.setWithCredentials(this.withCredentials);const o=await s.loadAsync(e,t),c=JSON.parse(o),u=c.metadata;if(u===void 0||u.type===void 0||u.type.toLowerCase()==="geometry")throw new Error("THREE.ObjectLoader: Can't load "+e);return await n.parseAsync(c)}parse(e,t){const n=this.parseAnimations(e.animations),i=this.parseShapes(e.shapes),s=this.parseGeometries(e.geometries,i),o=this.parseImages(e.images,function(){t!==void 0&&t(h)}),c=this.parseTextures(e.textures,o),u=this.parseMaterials(e.materials,c),h=this.parseObject(e.object,s,u,c,n),p=this.parseSkeletons(e.skeletons,h);if(this.bindSkeletons(h,p),t!==void 0){let g=!1;for(const d in o)if(o[d].data instanceof HTMLImageElement){g=!0;break}g===!1&&t(h)}return h}async parseAsync(e){const t=this.parseAnimations(e.animations),n=this.parseShapes(e.shapes),i=this.parseGeometries(e.geometries,n),s=await this.parseImagesAsync(e.images),o=this.parseTextures(e.textures,s),c=this.parseMaterials(e.materials,o),u=this.parseObject(e.object,i,c,o,t),h=this.parseSkeletons(e.skeletons,u);return this.bindSkeletons(u,h),u}parseShapes(e){const t={};if(e!==void 0)for(let n=0,i=e.length;n<i;n++){const s=new Ss().fromJSON(e[n]);t[s.uuid]=s}return t}parseSkeletons(e,t){const n={},i={};if(t.traverse(function(s){s.isBone&&(i[s.uuid]=s)}),e!==void 0)for(let s=0,o=e.length;s<o;s++){const c=new gu().fromJSON(e[s],i);n[c.uuid]=c}return n}parseGeometries(e,t){const n={};if(e!==void 0){const i=new my;for(let s=0,o=e.length;s<o;s++){let c;const u=e[s];switch(u.type){case"BufferGeometry":case"InstancedBufferGeometry":c=i.parse(u);break;default:u.type in h0?c=h0[u.type].fromJSON(u,t):console.warn(`THREE.ObjectLoader: Unsupported geometry type "${u.type}"`)}c.uuid=u.uuid,u.name!==void 0&&(c.name=u.name),u.userData!==void 0&&(c.userData=u.userData),n[u.uuid]=c}}return n}parseMaterials(e,t){const n={},i={};if(e!==void 0){const s=new Iu;s.setTextures(t);for(let o=0,c=e.length;o<c;o++){const u=e[o];n[u.uuid]===void 0&&(n[u.uuid]=s.parse(u)),i[u.uuid]=n[u.uuid]}}return i}parseAnimations(e){const t={};if(e!==void 0)for(let n=0;n<e.length;n++){const i=e[n],s=Ho.parse(i);t[s.uuid]=s}return t}parseImages(e,t){const n=this,i={};let s;function o(u){return n.manager.itemStart(u),s.load(u,function(){n.manager.itemEnd(u)},void 0,function(){n.manager.itemError(u),n.manager.itemEnd(u)})}function c(u){if(typeof u=="string"){const h=u,p=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(h)?h:n.resourcePath+h;return o(p)}else return u.data?{data:va(u.type,u.data),width:u.width,height:u.height}:null}if(e!==void 0&&e.length>0){const u=new bp(t);s=new Vo(u),s.setCrossOrigin(this.crossOrigin);for(let h=0,p=e.length;h<p;h++){const g=e[h],d=g.url;if(Array.isArray(d)){const m=[];for(let _=0,y=d.length;_<y;_++){const v=d[_],x=c(v);x!==null&&(x instanceof HTMLImageElement?m.push(x):m.push(new Ms(x.data,x.width,x.height)))}i[g.uuid]=new _s(m)}else{const m=c(g.url);i[g.uuid]=new _s(m)}}}return i}async parseImagesAsync(e){const t=this,n={};let i;async function s(o){if(typeof o=="string"){const c=o,u=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(c)?c:t.resourcePath+c;return await i.loadAsync(u)}else return o.data?{data:va(o.type,o.data),width:o.width,height:o.height}:null}if(e!==void 0&&e.length>0){i=new Vo(this.manager),i.setCrossOrigin(this.crossOrigin);for(let o=0,c=e.length;o<c;o++){const u=e[o],h=u.url;if(Array.isArray(h)){const p=[];for(let g=0,d=h.length;g<d;g++){const m=h[g],_=await s(m);_!==null&&(_ instanceof HTMLImageElement?p.push(_):p.push(new Ms(_.data,_.width,_.height)))}n[u.uuid]=new _s(p)}else{const p=await s(u.url);n[u.uuid]=new _s(p)}}}return n}parseTextures(e,t){function n(s,o){return typeof s=="number"?s:(console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",s),o[s])}const i={};if(e!==void 0)for(let s=0,o=e.length;s<o;s++){const c=e[s];c.image===void 0&&console.warn('THREE.ObjectLoader: No "image" specified for',c.uuid),t[c.image]===void 0&&console.warn("THREE.ObjectLoader: Undefined image",c.image);const u=t[c.image],h=u.data;let p;Array.isArray(h)?(p=new Yo,h.length===6&&(p.needsUpdate=!0)):(h&&h.data?p=new Ms:p=new Qt,h&&(p.needsUpdate=!0)),p.source=u,p.uuid=c.uuid,c.name!==void 0&&(p.name=c.name),c.mapping!==void 0&&(p.mapping=n(c.mapping,O3)),c.channel!==void 0&&(p.channel=c.channel),c.offset!==void 0&&p.offset.fromArray(c.offset),c.repeat!==void 0&&p.repeat.fromArray(c.repeat),c.center!==void 0&&p.center.fromArray(c.center),c.rotation!==void 0&&(p.rotation=c.rotation),c.wrap!==void 0&&(p.wrapS=n(c.wrap[0],m0),p.wrapT=n(c.wrap[1],m0)),c.format!==void 0&&(p.format=c.format),c.internalFormat!==void 0&&(p.internalFormat=c.internalFormat),c.type!==void 0&&(p.type=c.type),c.colorSpace!==void 0&&(p.colorSpace=c.colorSpace),c.encoding!==void 0&&(p.encoding=c.encoding),c.minFilter!==void 0&&(p.minFilter=n(c.minFilter,g0)),c.magFilter!==void 0&&(p.magFilter=n(c.magFilter,g0)),c.anisotropy!==void 0&&(p.anisotropy=c.anisotropy),c.flipY!==void 0&&(p.flipY=c.flipY),c.generateMipmaps!==void 0&&(p.generateMipmaps=c.generateMipmaps),c.premultiplyAlpha!==void 0&&(p.premultiplyAlpha=c.premultiplyAlpha),c.unpackAlignment!==void 0&&(p.unpackAlignment=c.unpackAlignment),c.compareFunction!==void 0&&(p.compareFunction=c.compareFunction),c.userData!==void 0&&(p.userData=c.userData),i[c.uuid]=p}return i}parseObject(e,t,n,i,s){let o;function c(d){return t[d]===void 0&&console.warn("THREE.ObjectLoader: Undefined geometry",d),t[d]}function u(d){if(d!==void 0){if(Array.isArray(d)){const m=[];for(let _=0,y=d.length;_<y;_++){const v=d[_];n[v]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",v),m.push(n[v])}return m}return n[d]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",d),n[d]}}function h(d){return i[d]===void 0&&console.warn("THREE.ObjectLoader: Undefined texture",d),i[d]}let p,g;switch(e.type){case"Scene":o=new Ax,e.background!==void 0&&(Number.isInteger(e.background)?o.background=new qe(e.background):o.background=h(e.background)),e.environment!==void 0&&(o.environment=h(e.environment)),e.fog!==void 0&&(e.fog.type==="Fog"?o.fog=new pu(e.fog.color,e.fog.near,e.fog.far):e.fog.type==="FogExp2"&&(o.fog=new du(e.fog.color,e.fog.density)),e.fog.name!==""&&(o.fog.name=e.fog.name)),e.backgroundBlurriness!==void 0&&(o.backgroundBlurriness=e.backgroundBlurriness),e.backgroundIntensity!==void 0&&(o.backgroundIntensity=e.backgroundIntensity);break;case"PerspectiveCamera":o=new yn(e.fov,e.aspect,e.near,e.far),e.focus!==void 0&&(o.focus=e.focus),e.zoom!==void 0&&(o.zoom=e.zoom),e.filmGauge!==void 0&&(o.filmGauge=e.filmGauge),e.filmOffset!==void 0&&(o.filmOffset=e.filmOffset),e.view!==void 0&&(o.view=Object.assign({},e.view));break;case"OrthographicCamera":o=new hu(e.left,e.right,e.top,e.bottom,e.near,e.far),e.zoom!==void 0&&(o.zoom=e.zoom),e.view!==void 0&&(o.view=Object.assign({},e.view));break;case"AmbientLight":o=new uy(e.color,e.intensity);break;case"DirectionalLight":o=new cy(e.color,e.intensity);break;case"PointLight":o=new ly(e.color,e.intensity,e.distance,e.decay);break;case"RectAreaLight":o=new hy(e.color,e.intensity,e.width,e.height);break;case"SpotLight":o=new oy(e.color,e.intensity,e.distance,e.angle,e.penumbra,e.decay);break;case"HemisphereLight":o=new ay(e.color,e.groundColor,e.intensity);break;case"LightProbe":o=new dy().fromJSON(e);break;case"SkinnedMesh":p=c(e.geometry),g=u(e.material),o=new Lx(p,g),e.bindMode!==void 0&&(o.bindMode=e.bindMode),e.bindMatrix!==void 0&&o.bindMatrix.fromArray(e.bindMatrix),e.skeleton!==void 0&&(o.skeleton=e.skeleton);break;case"Mesh":p=c(e.geometry),g=u(e.material),o=new on(p,g);break;case"InstancedMesh":p=c(e.geometry),g=u(e.material);const d=e.count,m=e.instanceMatrix,_=e.instanceColor;o=new Px(p,g,d),o.instanceMatrix=new Ca(new Float32Array(m.array),16),_!==void 0&&(o.instanceColor=new Ca(new Float32Array(_.array),_.itemSize));break;case"BatchedMesh":p=c(e.geometry),g=u(e.material),o=new Ix(e.maxGeometryCount,e.maxVertexCount,e.maxIndexCount,g),o.geometry=p,o.perObjectFrustumCulled=e.perObjectFrustumCulled,o.sortObjects=e.sortObjects,o._drawRanges=e.drawRanges,o._reservedRanges=e.reservedRanges,o._visibility=e.visibility,o._active=e.active,o._bounds=e.bounds.map(y=>{const v=new Fn;v.min.fromArray(y.boxMin),v.max.fromArray(y.boxMax);const x=new Cn;return x.radius=y.sphereRadius,x.center.fromArray(y.sphereCenter),{boxInitialized:y.boxInitialized,box:v,sphereInitialized:y.sphereInitialized,sphere:x}}),o._maxGeometryCount=e.maxGeometryCount,o._maxVertexCount=e.maxVertexCount,o._maxIndexCount=e.maxIndexCount,o._geometryInitialized=e.geometryInitialized,o._geometryCount=e.geometryCount,o._matricesTexture=h(e.matricesTexture.uuid);break;case"LOD":o=new Rx;break;case"Line":o=new kr(c(e.geometry),u(e.material));break;case"LineLoop":o=new Dx(c(e.geometry),u(e.material));break;case"LineSegments":o=new Vi(c(e.geometry),u(e.material));break;case"PointCloud":case"Points":o=new Ux(c(e.geometry),u(e.material));break;case"Sprite":o=new Cx(u(e.material));break;case"Group":o=new ba;break;case"Bone":o=new cp;break;default:o=new Ct}if(o.uuid=e.uuid,e.name!==void 0&&(o.name=e.name),e.matrix!==void 0?(o.matrix.fromArray(e.matrix),e.matrixAutoUpdate!==void 0&&(o.matrixAutoUpdate=e.matrixAutoUpdate),o.matrixAutoUpdate&&o.matrix.decompose(o.position,o.quaternion,o.scale)):(e.position!==void 0&&o.position.fromArray(e.position),e.rotation!==void 0&&o.rotation.fromArray(e.rotation),e.quaternion!==void 0&&o.quaternion.fromArray(e.quaternion),e.scale!==void 0&&o.scale.fromArray(e.scale)),e.up!==void 0&&o.up.fromArray(e.up),e.castShadow!==void 0&&(o.castShadow=e.castShadow),e.receiveShadow!==void 0&&(o.receiveShadow=e.receiveShadow),e.shadow&&(e.shadow.bias!==void 0&&(o.shadow.bias=e.shadow.bias),e.shadow.normalBias!==void 0&&(o.shadow.normalBias=e.shadow.normalBias),e.shadow.radius!==void 0&&(o.shadow.radius=e.shadow.radius),e.shadow.mapSize!==void 0&&o.shadow.mapSize.fromArray(e.shadow.mapSize),e.shadow.camera!==void 0&&(o.shadow.camera=this.parseObject(e.shadow.camera))),e.visible!==void 0&&(o.visible=e.visible),e.frustumCulled!==void 0&&(o.frustumCulled=e.frustumCulled),e.renderOrder!==void 0&&(o.renderOrder=e.renderOrder),e.userData!==void 0&&(o.userData=e.userData),e.layers!==void 0&&(o.layers.mask=e.layers),e.children!==void 0){const d=e.children;for(let m=0;m<d.length;m++)o.add(this.parseObject(d[m],t,n,i,s))}if(e.animations!==void 0){const d=e.animations;for(let m=0;m<d.length;m++){const _=d[m];o.animations.push(s[_])}}if(e.type==="LOD"){e.autoUpdate!==void 0&&(o.autoUpdate=e.autoUpdate);const d=e.levels;for(let m=0;m<d.length;m++){const _=d[m],y=o.getObjectByProperty("uuid",_.object);y!==void 0&&o.addLevel(y,_.distance,_.hysteresis)}}return o}bindSkeletons(e,t){Object.keys(t).length!==0&&e.traverse(function(n){if(n.isSkinnedMesh===!0&&n.skeleton!==void 0){const i=t[n.skeleton];i===void 0?console.warn("THREE.ObjectLoader: No skeleton found with UUID:",n.skeleton):n.bind(i,n.bindMatrix)}})}}const O3={UVMapping:ru,CubeReflectionMapping:dr,CubeRefractionMapping:zr,EquirectangularReflectionMapping:So,EquirectangularRefractionMapping:wo,CubeUVReflectionMapping:Ra},m0={RepeatWrapping:Eo,ClampToEdgeWrapping:Tn,MirroredRepeatWrapping:Ao},g0={NearestFilter:sn,NearestMipmapNearestFilter:Kc,NearestMipmapLinearFilter:ds,LinearFilter:$t,LinearMipmapNearestFilter:vo,LinearMipmapLinearFilter:zi};class F3 extends Zn{constructor(e){super(e),this.isImageBitmapLoader=!0,typeof createImageBitmap>"u"&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),typeof fetch>"u"&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),this.options={premultiplyAlpha:"none"}}setOptions(e){return this.options=e,this}load(e,t,n,i){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const s=this,o=lr.get(e);if(o!==void 0){if(s.manager.itemStart(e),o.then){o.then(h=>{t&&t(h),s.manager.itemEnd(e)}).catch(h=>{i&&i(h)});return}return setTimeout(function(){t&&t(o),s.manager.itemEnd(e)},0),o}const c={};c.credentials=this.crossOrigin==="anonymous"?"same-origin":"include",c.headers=this.requestHeader;const u=fetch(e,c).then(function(h){return h.blob()}).then(function(h){return createImageBitmap(h,Object.assign(s.options,{colorSpaceConversion:"none"}))}).then(function(h){return lr.add(e,h),t&&t(h),s.manager.itemEnd(e),h}).catch(function(h){i&&i(h),lr.remove(e),s.manager.itemError(e),s.manager.itemEnd(e)});lr.add(e,u),s.manager.itemStart(e)}}let Rc;class Sp{static getContext(){return Rc===void 0&&(Rc=new(window.AudioContext||window.webkitAudioContext)),Rc}static setContext(e){Rc=e}}class B3 extends Zn{constructor(e){super(e)}load(e,t,n,i){const s=this,o=new pr(this.manager);o.setResponseType("arraybuffer"),o.setPath(this.path),o.setRequestHeader(this.requestHeader),o.setWithCredentials(this.withCredentials),o.load(e,function(u){try{const h=u.slice(0);Sp.getContext().decodeAudioData(h,function(g){t(g)}).catch(c)}catch(h){c(h)}},n,i);function c(u){i?i(u):console.error(u),s.manager.itemError(e)}}}const _0=new at,v0=new at,ss=new at;class z3{constructor(){this.type="StereoCamera",this.aspect=1,this.eyeSep=.064,this.cameraL=new yn,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new yn,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1,this._cache={focus:null,fov:null,aspect:null,near:null,far:null,zoom:null,eyeSep:null}}update(e){const t=this._cache;if(t.focus!==e.focus||t.fov!==e.fov||t.aspect!==e.aspect*this.aspect||t.near!==e.near||t.far!==e.far||t.zoom!==e.zoom||t.eyeSep!==this.eyeSep){t.focus=e.focus,t.fov=e.fov,t.aspect=e.aspect*this.aspect,t.near=e.near,t.far=e.far,t.zoom=e.zoom,t.eyeSep=this.eyeSep,ss.copy(e.projectionMatrix);const i=t.eyeSep/2,s=i*t.near/t.focus,o=t.near*Math.tan(ys*t.fov*.5)/t.zoom;let c,u;v0.elements[12]=-i,_0.elements[12]=i,c=-o*t.aspect+s,u=o*t.aspect+s,ss.elements[0]=2*t.near/(u-c),ss.elements[8]=(u+c)/(u-c),this.cameraL.projectionMatrix.copy(ss),c=-o*t.aspect-s,u=o*t.aspect-s,ss.elements[0]=2*t.near/(u-c),ss.elements[8]=(u+c)/(u-c),this.cameraR.projectionMatrix.copy(ss)}this.cameraL.matrixWorld.copy(e.matrixWorld).multiply(v0),this.cameraR.matrixWorld.copy(e.matrixWorld).multiply(_0)}}class gy{constructor(e=!0){this.autoStart=e,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=x0(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let e=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const t=x0();e=(t-this.oldTime)/1e3,this.oldTime=t,this.elapsedTime+=e}return e}}function x0(){return(typeof performance>"u"?Date:performance).now()}const as=new F,y0=new $n,k3=new F,os=new F;class G3 extends Ct{constructor(){super(),this.type="AudioListener",this.context=Sp.getContext(),this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.filter=null,this.timeDelta=0,this._clock=new gy}getInput(){return this.gain}removeFilter(){return this.filter!==null&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null),this}getFilter(){return this.filter}setFilter(e){return this.filter!==null?(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)):this.gain.disconnect(this.context.destination),this.filter=e,this.gain.connect(this.filter),this.filter.connect(this.context.destination),this}getMasterVolume(){return this.gain.gain.value}setMasterVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}updateMatrixWorld(e){super.updateMatrixWorld(e);const t=this.context.listener,n=this.up;if(this.timeDelta=this._clock.getDelta(),this.matrixWorld.decompose(as,y0,k3),os.set(0,0,-1).applyQuaternion(y0),t.positionX){const i=this.context.currentTime+this.timeDelta;t.positionX.linearRampToValueAtTime(as.x,i),t.positionY.linearRampToValueAtTime(as.y,i),t.positionZ.linearRampToValueAtTime(as.z,i),t.forwardX.linearRampToValueAtTime(os.x,i),t.forwardY.linearRampToValueAtTime(os.y,i),t.forwardZ.linearRampToValueAtTime(os.z,i),t.upX.linearRampToValueAtTime(n.x,i),t.upY.linearRampToValueAtTime(n.y,i),t.upZ.linearRampToValueAtTime(n.z,i)}else t.setPosition(as.x,as.y,as.z),t.setOrientation(os.x,os.y,os.z,n.x,n.y,n.z)}}class _y extends Ct{constructor(e){super(),this.type="Audio",this.listener=e,this.context=e.context,this.gain=this.context.createGain(),this.gain.connect(e.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.source=null,this.sourceType="empty",this._startedAt=0,this._progress=0,this._connected=!1,this.filters=[]}getOutput(){return this.gain}setNodeSource(e){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=e,this.connect(),this}setMediaElementSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(e),this.connect(),this}setMediaStreamSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(e),this.connect(),this}setBuffer(e){return this.buffer=e,this.sourceType="buffer",this.autoplay&&this.play(),this}play(e=0){if(this.isPlaying===!0){console.warn("THREE.Audio: Audio is already playing.");return}if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}this._startedAt=this.context.currentTime+e;const t=this.context.createBufferSource();return t.buffer=this.buffer,t.loop=this.loop,t.loopStart=this.loopStart,t.loopEnd=this.loopEnd,t.onended=this.onEnded.bind(this),t.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=t,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}pause(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.isPlaying===!0&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,this.loop===!0&&(this._progress=this._progress%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this}stop(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this._progress=0,this.source!==null&&(this.source.stop(),this.source.onended=null),this.isPlaying=!1,this}connect(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].connect(this.filters[e]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this._connected=!0,this}disconnect(){if(this._connected!==!1){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].disconnect(this.filters[e]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this._connected=!1,this}}getFilters(){return this.filters}setFilters(e){return e||(e=[]),this._connected===!0?(this.disconnect(),this.filters=e.slice(),this.connect()):this.filters=e.slice(),this}setDetune(e){return this.detune=e,this.isPlaying===!0&&this.source.detune!==void 0&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this}getDetune(){return this.detune}getFilter(){return this.getFilters()[0]}setFilter(e){return this.setFilters(e?[e]:[])}setPlaybackRate(e){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.playbackRate=e,this.isPlaying===!0&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this}getPlaybackRate(){return this.playbackRate}onEnded(){this.isPlaying=!1}getLoop(){return this.hasPlaybackControl===!1?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop}setLoop(e){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.loop=e,this.isPlaying===!0&&(this.source.loop=this.loop),this}setLoopStart(e){return this.loopStart=e,this}setLoopEnd(e){return this.loopEnd=e,this}getVolume(){return this.gain.gain.value}setVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}}const ls=new F,b0=new $n,H3=new F,cs=new F;class V3 extends _y{constructor(e){super(e),this.panner=this.context.createPanner(),this.panner.panningModel="HRTF",this.panner.connect(this.gain)}connect(){super.connect(),this.panner.connect(this.gain)}disconnect(){super.disconnect(),this.panner.disconnect(this.gain)}getOutput(){return this.panner}getRefDistance(){return this.panner.refDistance}setRefDistance(e){return this.panner.refDistance=e,this}getRolloffFactor(){return this.panner.rolloffFactor}setRolloffFactor(e){return this.panner.rolloffFactor=e,this}getDistanceModel(){return this.panner.distanceModel}setDistanceModel(e){return this.panner.distanceModel=e,this}getMaxDistance(){return this.panner.maxDistance}setMaxDistance(e){return this.panner.maxDistance=e,this}setDirectionalCone(e,t,n){return this.panner.coneInnerAngle=e,this.panner.coneOuterAngle=t,this.panner.coneOuterGain=n,this}updateMatrixWorld(e){if(super.updateMatrixWorld(e),this.hasPlaybackControl===!0&&this.isPlaying===!1)return;this.matrixWorld.decompose(ls,b0,H3),cs.set(0,0,1).applyQuaternion(b0);const t=this.panner;if(t.positionX){const n=this.context.currentTime+this.listener.timeDelta;t.positionX.linearRampToValueAtTime(ls.x,n),t.positionY.linearRampToValueAtTime(ls.y,n),t.positionZ.linearRampToValueAtTime(ls.z,n),t.orientationX.linearRampToValueAtTime(cs.x,n),t.orientationY.linearRampToValueAtTime(cs.y,n),t.orientationZ.linearRampToValueAtTime(cs.z,n)}else t.setPosition(ls.x,ls.y,ls.z),t.setOrientation(cs.x,cs.y,cs.z)}}class W3{constructor(e,t=2048){this.analyser=e.context.createAnalyser(),this.analyser.fftSize=t,this.data=new Uint8Array(this.analyser.frequencyBinCount),e.getOutput().connect(this.analyser)}getFrequencyData(){return this.analyser.getByteFrequencyData(this.data),this.data}getAverageFrequency(){let e=0;const t=this.getFrequencyData();for(let n=0;n<t.length;n++)e+=t[n];return e/t.length}}class vy{constructor(e,t,n){this.binding=e,this.valueSize=n;let i,s,o;switch(t){case"quaternion":i=this._slerp,s=this._slerpAdditive,o=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(n*6),this._workIndex=5;break;case"string":case"bool":i=this._select,s=this._select,o=this._setAdditiveIdentityOther,this.buffer=new Array(n*5);break;default:i=this._lerp,s=this._lerpAdditive,o=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(n*5)}this._mixBufferRegion=i,this._mixBufferRegionAdditive=s,this._setIdentity=o,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}accumulate(e,t){const n=this.buffer,i=this.valueSize,s=e*i+i;let o=this.cumulativeWeight;if(o===0){for(let c=0;c!==i;++c)n[s+c]=n[c];o=t}else{o+=t;const c=t/o;this._mixBufferRegion(n,s,0,c,i)}this.cumulativeWeight=o}accumulateAdditive(e){const t=this.buffer,n=this.valueSize,i=n*this._addIndex;this.cumulativeWeightAdditive===0&&this._setIdentity(),this._mixBufferRegionAdditive(t,i,0,e,n),this.cumulativeWeightAdditive+=e}apply(e){const t=this.valueSize,n=this.buffer,i=e*t+t,s=this.cumulativeWeight,o=this.cumulativeWeightAdditive,c=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,s<1){const u=t*this._origIndex;this._mixBufferRegion(n,i,u,1-s,t)}o>0&&this._mixBufferRegionAdditive(n,i,this._addIndex*t,1,t);for(let u=t,h=t+t;u!==h;++u)if(n[u]!==n[u+t]){c.setValue(n,i);break}}saveOriginalState(){const e=this.binding,t=this.buffer,n=this.valueSize,i=n*this._origIndex;e.getValue(t,i);for(let s=n,o=i;s!==o;++s)t[s]=t[i+s%n];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0}restoreOriginalState(){const e=this.valueSize*3;this.binding.setValue(this.buffer,e)}_setAdditiveIdentityNumeric(){const e=this._addIndex*this.valueSize,t=e+this.valueSize;for(let n=e;n<t;n++)this.buffer[n]=0}_setAdditiveIdentityQuaternion(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1}_setAdditiveIdentityOther(){const e=this._origIndex*this.valueSize,t=this._addIndex*this.valueSize;for(let n=0;n<this.valueSize;n++)this.buffer[t+n]=this.buffer[e+n]}_select(e,t,n,i,s){if(i>=.5)for(let o=0;o!==s;++o)e[t+o]=e[n+o]}_slerp(e,t,n,i){$n.slerpFlat(e,t,e,t,e,n,i)}_slerpAdditive(e,t,n,i,s){const o=this._workIndex*s;$n.multiplyQuaternionsFlat(e,o,e,t,e,n),$n.slerpFlat(e,t,e,t,e,o,i)}_lerp(e,t,n,i,s){const o=1-i;for(let c=0;c!==s;++c){const u=t+c;e[u]=e[u]*o+e[n+c]*i}}_lerpAdditive(e,t,n,i,s){for(let o=0;o!==s;++o){const c=t+o;e[c]=e[c]+e[n+o]*i}}}const wp="\\[\\]\\.:\\/",X3=new RegExp("["+wp+"]","g"),Ep="[^"+wp+"]",q3="[^"+wp.replace("\\.","")+"]",Y3=/((?:WC+[\/:])*)/.source.replace("WC",Ep),$3=/(WCOD+)?/.source.replace("WCOD",q3),Z3=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",Ep),J3=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",Ep),K3=new RegExp("^"+Y3+$3+Z3+J3+"$"),j3=["material","materials","bones","map"];class Q3{constructor(e,t,n){const i=n||At.parseTrackName(t);this._targetGroup=e,this._bindings=e.subscribe_(t,i)}getValue(e,t){this.bind();const n=this._targetGroup.nCachedObjects_,i=this._bindings[n];i!==void 0&&i.getValue(e,t)}setValue(e,t){const n=this._bindings;for(let i=this._targetGroup.nCachedObjects_,s=n.length;i!==s;++i)n[i].setValue(e,t)}bind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].bind()}unbind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].unbind()}}class At{constructor(e,t,n){this.path=t,this.parsedPath=n||At.parseTrackName(t),this.node=At.findNode(e,this.parsedPath.nodeName),this.rootNode=e,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(e,t,n){return e&&e.isAnimationObjectGroup?new At.Composite(e,t,n):new At(e,t,n)}static sanitizeNodeName(e){return e.replace(/\s/g,"_").replace(X3,"")}static parseTrackName(e){const t=K3.exec(e);if(t===null)throw new Error("PropertyBinding: Cannot parse trackName: "+e);const n={nodeName:t[2],objectName:t[3],objectIndex:t[4],propertyName:t[5],propertyIndex:t[6]},i=n.nodeName&&n.nodeName.lastIndexOf(".");if(i!==void 0&&i!==-1){const s=n.nodeName.substring(i+1);j3.indexOf(s)!==-1&&(n.nodeName=n.nodeName.substring(0,i),n.objectName=s)}if(n.propertyName===null||n.propertyName.length===0)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+e);return n}static findNode(e,t){if(t===void 0||t===""||t==="."||t===-1||t===e.name||t===e.uuid)return e;if(e.skeleton){const n=e.skeleton.getBoneByName(t);if(n!==void 0)return n}if(e.children){const n=function(s){for(let o=0;o<s.length;o++){const c=s[o];if(c.name===t||c.uuid===t)return c;const u=n(c.children);if(u)return u}return null},i=n(e.children);if(i)return i}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(e,t){e[t]=this.targetObject[this.propertyName]}_getValue_array(e,t){const n=this.resolvedProperty;for(let i=0,s=n.length;i!==s;++i)e[t++]=n[i]}_getValue_arrayElement(e,t){e[t]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(e,t){this.resolvedProperty.toArray(e,t)}_setValue_direct(e,t){this.targetObject[this.propertyName]=e[t]}_setValue_direct_setNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(e,t){const n=this.resolvedProperty;for(let i=0,s=n.length;i!==s;++i)n[i]=e[t++]}_setValue_array_setNeedsUpdate(e,t){const n=this.resolvedProperty;for(let i=0,s=n.length;i!==s;++i)n[i]=e[t++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(e,t){const n=this.resolvedProperty;for(let i=0,s=n.length;i!==s;++i)n[i]=e[t++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(e,t){this.resolvedProperty[this.propertyIndex]=e[t]}_setValue_arrayElement_setNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(e,t){this.resolvedProperty.fromArray(e,t)}_setValue_fromArray_setNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(e,t){this.bind(),this.getValue(e,t)}_setValue_unbound(e,t){this.bind(),this.setValue(e,t)}bind(){let e=this.node;const t=this.parsedPath,n=t.objectName,i=t.propertyName;let s=t.propertyIndex;if(e||(e=At.findNode(this.rootNode,t.nodeName),this.node=e),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!e){console.warn("THREE.PropertyBinding: No target node found for track: "+this.path+".");return}if(n){let h=t.objectIndex;switch(n){case"materials":if(!e.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!e.material.materials){console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);return}e=e.material.materials;break;case"bones":if(!e.skeleton){console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);return}e=e.skeleton.bones;for(let p=0;p<e.length;p++)if(e[p].name===h){h=p;break}break;case"map":if("map"in e){e=e.map;break}if(!e.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!e.material.map){console.error("THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.",this);return}e=e.material.map;break;default:if(e[n]===void 0){console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);return}e=e[n]}if(h!==void 0){if(e[h]===void 0){console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,e);return}e=e[h]}}const o=e[i];if(o===void 0){const h=t.nodeName;console.error("THREE.PropertyBinding: Trying to update property for track: "+h+"."+i+" but it wasn't found.",e);return}let c=this.Versioning.None;this.targetObject=e,e.needsUpdate!==void 0?c=this.Versioning.NeedsUpdate:e.matrixWorldNeedsUpdate!==void 0&&(c=this.Versioning.MatrixWorldNeedsUpdate);let u=this.BindingType.Direct;if(s!==void 0){if(i==="morphTargetInfluences"){if(!e.geometry){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);return}if(!e.geometry.morphAttributes){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);return}e.morphTargetDictionary[s]!==void 0&&(s=e.morphTargetDictionary[s])}u=this.BindingType.ArrayElement,this.resolvedProperty=o,this.propertyIndex=s}else o.fromArray!==void 0&&o.toArray!==void 0?(u=this.BindingType.HasFromToArray,this.resolvedProperty=o):Array.isArray(o)?(u=this.BindingType.EntireArray,this.resolvedProperty=o):this.propertyName=i;this.getValue=this.GetterByBindingType[u],this.setValue=this.SetterByBindingTypeAndVersioning[u][c]}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}At.Composite=Q3;At.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3};At.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2};At.prototype.GetterByBindingType=[At.prototype._getValue_direct,At.prototype._getValue_array,At.prototype._getValue_arrayElement,At.prototype._getValue_toArray];At.prototype.SetterByBindingTypeAndVersioning=[[At.prototype._setValue_direct,At.prototype._setValue_direct_setNeedsUpdate,At.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[At.prototype._setValue_array,At.prototype._setValue_array_setNeedsUpdate,At.prototype._setValue_array_setMatrixWorldNeedsUpdate],[At.prototype._setValue_arrayElement,At.prototype._setValue_arrayElement_setNeedsUpdate,At.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[At.prototype._setValue_fromArray,At.prototype._setValue_fromArray_setNeedsUpdate,At.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]];class eD{constructor(){this.isAnimationObjectGroup=!0,this.uuid=oi(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;const e={};this._indicesByUUID=e;for(let n=0,i=arguments.length;n!==i;++n)e[arguments[n].uuid]=n;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={};const t=this;this.stats={objects:{get total(){return t._objects.length},get inUse(){return this.total-t.nCachedObjects_}},get bindingsPerObject(){return t._bindings.length}}}add(){const e=this._objects,t=this._indicesByUUID,n=this._paths,i=this._parsedPaths,s=this._bindings,o=s.length;let c,u=e.length,h=this.nCachedObjects_;for(let p=0,g=arguments.length;p!==g;++p){const d=arguments[p],m=d.uuid;let _=t[m];if(_===void 0){_=u++,t[m]=_,e.push(d);for(let y=0,v=o;y!==v;++y)s[y].push(new At(d,n[y],i[y]))}else if(_<h){c=e[_];const y=--h,v=e[y];t[v.uuid]=_,e[_]=v,t[m]=y,e[y]=d;for(let x=0,w=o;x!==w;++x){const M=s[x],E=M[y];let O=M[_];M[_]=E,O===void 0&&(O=new At(d,n[x],i[x])),M[y]=O}}else e[_]!==c&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")}this.nCachedObjects_=h}remove(){const e=this._objects,t=this._indicesByUUID,n=this._bindings,i=n.length;let s=this.nCachedObjects_;for(let o=0,c=arguments.length;o!==c;++o){const u=arguments[o],h=u.uuid,p=t[h];if(p!==void 0&&p>=s){const g=s++,d=e[g];t[d.uuid]=p,e[p]=d,t[h]=g,e[g]=u;for(let m=0,_=i;m!==_;++m){const y=n[m],v=y[g],x=y[p];y[p]=v,y[g]=x}}}this.nCachedObjects_=s}uncache(){const e=this._objects,t=this._indicesByUUID,n=this._bindings,i=n.length;let s=this.nCachedObjects_,o=e.length;for(let c=0,u=arguments.length;c!==u;++c){const h=arguments[c],p=h.uuid,g=t[p];if(g!==void 0)if(delete t[p],g<s){const d=--s,m=e[d],_=--o,y=e[_];t[m.uuid]=g,e[g]=m,t[y.uuid]=d,e[d]=y,e.pop();for(let v=0,x=i;v!==x;++v){const w=n[v],M=w[d],E=w[_];w[g]=M,w[d]=E,w.pop()}}else{const d=--o,m=e[d];d>0&&(t[m.uuid]=g),e[g]=m,e.pop();for(let _=0,y=i;_!==y;++_){const v=n[_];v[g]=v[d],v.pop()}}}this.nCachedObjects_=s}subscribe_(e,t){const n=this._bindingsIndicesByPath;let i=n[e];const s=this._bindings;if(i!==void 0)return s[i];const o=this._paths,c=this._parsedPaths,u=this._objects,h=u.length,p=this.nCachedObjects_,g=new Array(h);i=s.length,n[e]=i,o.push(e),c.push(t),s.push(g);for(let d=p,m=u.length;d!==m;++d){const _=u[d];g[d]=new At(_,e,t)}return g}unsubscribe_(e){const t=this._bindingsIndicesByPath,n=t[e];if(n!==void 0){const i=this._paths,s=this._parsedPaths,o=this._bindings,c=o.length-1,u=o[c],h=e[c];t[h]=n,o[n]=u,o.pop(),s[n]=s[c],s.pop(),i[n]=i[c],i.pop()}}}class xy{constructor(e,t,n=null,i=t.blendMode){this._mixer=e,this._clip=t,this._localRoot=n,this.blendMode=i;const s=t.tracks,o=s.length,c=new Array(o),u={endingStart:ms,endingEnd:ms};for(let h=0;h!==o;++h){const p=s[h].createInterpolant(null);c[h]=p,p.settings=u}this._interpolantSettings=u,this._interpolants=c,this._propertyBindings=new Array(o),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=Jv,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}play(){return this._mixer._activateAction(this),this}stop(){return this._mixer._deactivateAction(this),this.reset()}reset(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&this.timeScale!==0&&this._startTime===null&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(e){return this._startTime=e,this}setLoop(e,t){return this.loop=e,this.repetitions=t,this}setEffectiveWeight(e){return this.weight=e,this._effectiveWeight=this.enabled?e:0,this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(e){return this._scheduleFading(e,0,1)}fadeOut(e){return this._scheduleFading(e,1,0)}crossFadeFrom(e,t,n){if(e.fadeOut(t),this.fadeIn(t),n){const i=this._clip.duration,s=e._clip.duration,o=s/i,c=i/s;e.warp(1,o,t),this.warp(c,1,t)}return this}crossFadeTo(e,t,n){return e.crossFadeFrom(this,t,n)}stopFading(){const e=this._weightInterpolant;return e!==null&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}setEffectiveTimeScale(e){return this.timeScale=e,this._effectiveTimeScale=this.paused?0:e,this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(e){return this.timeScale=this._clip.duration/e,this.stopWarping()}syncWith(e){return this.time=e.time,this.timeScale=e.timeScale,this.stopWarping()}halt(e){return this.warp(this._effectiveTimeScale,0,e)}warp(e,t,n){const i=this._mixer,s=i.time,o=this.timeScale;let c=this._timeScaleInterpolant;c===null&&(c=i._lendControlInterpolant(),this._timeScaleInterpolant=c);const u=c.parameterPositions,h=c.sampleValues;return u[0]=s,u[1]=s+n,h[0]=e/o,h[1]=t/o,this}stopWarping(){const e=this._timeScaleInterpolant;return e!==null&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(e,t,n,i){if(!this.enabled){this._updateWeight(e);return}const s=this._startTime;if(s!==null){const u=(e-s)*n;u<0||n===0?t=0:(this._startTime=null,t=n*u)}t*=this._updateTimeScale(e);const o=this._updateTime(t),c=this._updateWeight(e);if(c>0){const u=this._interpolants,h=this._propertyBindings;switch(this.blendMode){case Jd:for(let p=0,g=u.length;p!==g;++p)u[p].evaluate(o),h[p].accumulateAdditive(c);break;case au:default:for(let p=0,g=u.length;p!==g;++p)u[p].evaluate(o),h[p].accumulate(i,c)}}}_updateWeight(e){let t=0;if(this.enabled){t=this.weight;const n=this._weightInterpolant;if(n!==null){const i=n.evaluate(e)[0];t*=i,e>n.parameterPositions[1]&&(this.stopFading(),i===0&&(this.enabled=!1))}}return this._effectiveWeight=t,t}_updateTimeScale(e){let t=0;if(!this.paused){t=this.timeScale;const n=this._timeScaleInterpolant;if(n!==null){const i=n.evaluate(e)[0];t*=i,e>n.parameterPositions[1]&&(this.stopWarping(),t===0?this.paused=!0:this.timeScale=t)}}return this._effectiveTimeScale=t,t}_updateTime(e){const t=this._clip.duration,n=this.loop;let i=this.time+e,s=this._loopCount;const o=n===Kv;if(e===0)return s===-1?i:o&&(s&1)===1?t-i:i;if(n===Zv){s===-1&&(this._loopCount=0,this._setEndings(!0,!0,!1));e:{if(i>=t)i=t;else if(i<0)i=0;else{this.time=i;break e}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:e<0?-1:1})}}else{if(s===-1&&(e>=0?(s=0,this._setEndings(!0,this.repetitions===0,o)):this._setEndings(this.repetitions===0,!0,o)),i>=t||i<0){const c=Math.floor(i/t);i-=t*c,s+=Math.abs(c);const u=this.repetitions-s;if(u<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,i=e>0?t:0,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:e>0?1:-1});else{if(u===1){const h=e<0;this._setEndings(h,!h,o)}else this._setEndings(!1,!1,o);this._loopCount=s,this.time=i,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:c})}}else this.time=i;if(o&&(s&1)===1)return t-i}return i}_setEndings(e,t,n){const i=this._interpolantSettings;n?(i.endingStart=gs,i.endingEnd=gs):(e?i.endingStart=this.zeroSlopeAtStart?gs:ms:i.endingStart=Ro,t?i.endingEnd=this.zeroSlopeAtEnd?gs:ms:i.endingEnd=Ro)}_scheduleFading(e,t,n){const i=this._mixer,s=i.time;let o=this._weightInterpolant;o===null&&(o=i._lendControlInterpolant(),this._weightInterpolant=o);const c=o.parameterPositions,u=o.sampleValues;return c[0]=s,u[0]=t,c[1]=s+e,u[1]=n,this}}const tD=new Float32Array(1);class nD extends gr{constructor(e){super(),this._root=e,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}_bindAction(e,t){const n=e._localRoot||this._root,i=e._clip.tracks,s=i.length,o=e._propertyBindings,c=e._interpolants,u=n.uuid,h=this._bindingsByRootAndName;let p=h[u];p===void 0&&(p={},h[u]=p);for(let g=0;g!==s;++g){const d=i[g],m=d.name;let _=p[m];if(_!==void 0)++_.referenceCount,o[g]=_;else{if(_=o[g],_!==void 0){_._cacheIndex===null&&(++_.referenceCount,this._addInactiveBinding(_,u,m));continue}const y=t&&t._propertyBindings[g].binding.parsedPath;_=new vy(At.create(n,m,y),d.ValueTypeName,d.getValueSize()),++_.referenceCount,this._addInactiveBinding(_,u,m),o[g]=_}c[g].resultBuffer=_.buffer}}_activateAction(e){if(!this._isActiveAction(e)){if(e._cacheIndex===null){const n=(e._localRoot||this._root).uuid,i=e._clip.uuid,s=this._actionsByClip[i];this._bindAction(e,s&&s.knownActions[0]),this._addInactiveAction(e,i,n)}const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const s=t[n];s.useCount++===0&&(this._lendBinding(s),s.saveOriginalState())}this._lendAction(e)}}_deactivateAction(e){if(this._isActiveAction(e)){const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const s=t[n];--s.useCount===0&&(s.restoreOriginalState(),this._takeBackBinding(s))}this._takeBackAction(e)}}_initMemoryManager(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;const e=this;this.stats={actions:{get total(){return e._actions.length},get inUse(){return e._nActiveActions}},bindings:{get total(){return e._bindings.length},get inUse(){return e._nActiveBindings}},controlInterpolants:{get total(){return e._controlInterpolants.length},get inUse(){return e._nActiveControlInterpolants}}}}_isActiveAction(e){const t=e._cacheIndex;return t!==null&&t<this._nActiveActions}_addInactiveAction(e,t,n){const i=this._actions,s=this._actionsByClip;let o=s[t];if(o===void 0)o={knownActions:[e],actionByRoot:{}},e._byClipCacheIndex=0,s[t]=o;else{const c=o.knownActions;e._byClipCacheIndex=c.length,c.push(e)}e._cacheIndex=i.length,i.push(e),o.actionByRoot[n]=e}_removeInactiveAction(e){const t=this._actions,n=t[t.length-1],i=e._cacheIndex;n._cacheIndex=i,t[i]=n,t.pop(),e._cacheIndex=null;const s=e._clip.uuid,o=this._actionsByClip,c=o[s],u=c.knownActions,h=u[u.length-1],p=e._byClipCacheIndex;h._byClipCacheIndex=p,u[p]=h,u.pop(),e._byClipCacheIndex=null;const g=c.actionByRoot,d=(e._localRoot||this._root).uuid;delete g[d],u.length===0&&delete o[s],this._removeInactiveBindingsForAction(e)}_removeInactiveBindingsForAction(e){const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const s=t[n];--s.referenceCount===0&&this._removeInactiveBinding(s)}}_lendAction(e){const t=this._actions,n=e._cacheIndex,i=this._nActiveActions++,s=t[i];e._cacheIndex=i,t[i]=e,s._cacheIndex=n,t[n]=s}_takeBackAction(e){const t=this._actions,n=e._cacheIndex,i=--this._nActiveActions,s=t[i];e._cacheIndex=i,t[i]=e,s._cacheIndex=n,t[n]=s}_addInactiveBinding(e,t,n){const i=this._bindingsByRootAndName,s=this._bindings;let o=i[t];o===void 0&&(o={},i[t]=o),o[n]=e,e._cacheIndex=s.length,s.push(e)}_removeInactiveBinding(e){const t=this._bindings,n=e.binding,i=n.rootNode.uuid,s=n.path,o=this._bindingsByRootAndName,c=o[i],u=t[t.length-1],h=e._cacheIndex;u._cacheIndex=h,t[h]=u,t.pop(),delete c[s],Object.keys(c).length===0&&delete o[i]}_lendBinding(e){const t=this._bindings,n=e._cacheIndex,i=this._nActiveBindings++,s=t[i];e._cacheIndex=i,t[i]=e,s._cacheIndex=n,t[n]=s}_takeBackBinding(e){const t=this._bindings,n=e._cacheIndex,i=--this._nActiveBindings,s=t[i];e._cacheIndex=i,t[i]=e,s._cacheIndex=n,t[n]=s}_lendControlInterpolant(){const e=this._controlInterpolants,t=this._nActiveControlInterpolants++;let n=e[t];return n===void 0&&(n=new xp(new Float32Array(2),new Float32Array(2),1,tD),n.__cacheIndex=t,e[t]=n),n}_takeBackControlInterpolant(e){const t=this._controlInterpolants,n=e.__cacheIndex,i=--this._nActiveControlInterpolants,s=t[i];e.__cacheIndex=i,t[i]=e,s.__cacheIndex=n,t[n]=s}clipAction(e,t,n){const i=t||this._root,s=i.uuid;let o=typeof e=="string"?Ho.findByName(i,e):e;const c=o!==null?o.uuid:e,u=this._actionsByClip[c];let h=null;if(n===void 0&&(o!==null?n=o.blendMode:n=au),u!==void 0){const g=u.actionByRoot[s];if(g!==void 0&&g.blendMode===n)return g;h=u.knownActions[0],o===null&&(o=h._clip)}if(o===null)return null;const p=new xy(this,o,t,n);return this._bindAction(p,h),this._addInactiveAction(p,c,s),p}existingAction(e,t){const n=t||this._root,i=n.uuid,s=typeof e=="string"?Ho.findByName(n,e):e,o=s?s.uuid:e,c=this._actionsByClip[o];return c!==void 0&&c.actionByRoot[i]||null}stopAllAction(){const e=this._actions,t=this._nActiveActions;for(let n=t-1;n>=0;--n)e[n].stop();return this}update(e){e*=this.timeScale;const t=this._actions,n=this._nActiveActions,i=this.time+=e,s=Math.sign(e),o=this._accuIndex^=1;for(let h=0;h!==n;++h)t[h]._update(i,e,s,o);const c=this._bindings,u=this._nActiveBindings;for(let h=0;h!==u;++h)c[h].apply(o);return this}setTime(e){this.time=0;for(let t=0;t<this._actions.length;t++)this._actions[t].time=0;return this.update(e)}getRoot(){return this._root}uncacheClip(e){const t=this._actions,n=e.uuid,i=this._actionsByClip,s=i[n];if(s!==void 0){const o=s.knownActions;for(let c=0,u=o.length;c!==u;++c){const h=o[c];this._deactivateAction(h);const p=h._cacheIndex,g=t[t.length-1];h._cacheIndex=null,h._byClipCacheIndex=null,g._cacheIndex=p,t[p]=g,t.pop(),this._removeInactiveBindingsForAction(h)}delete i[n]}}uncacheRoot(e){const t=e.uuid,n=this._actionsByClip;for(const o in n){const c=n[o].actionByRoot,u=c[t];u!==void 0&&(this._deactivateAction(u),this._removeInactiveAction(u))}const i=this._bindingsByRootAndName,s=i[t];if(s!==void 0)for(const o in s){const c=s[o];c.restoreOriginalState(),this._removeInactiveBinding(c)}}uncacheAction(e,t){const n=this.existingAction(e,t);n!==null&&(this._deactivateAction(n),this._removeInactiveAction(n))}}class Ap{constructor(e){this.value=e}clone(){return new Ap(this.value.clone===void 0?this.value:this.value.clone())}}let iD=0;class rD extends gr{constructor(){super(),this.isUniformsGroup=!0,Object.defineProperty(this,"id",{value:iD++}),this.name="",this.usage=Do,this.uniforms=[]}add(e){return this.uniforms.push(e),this}remove(e){const t=this.uniforms.indexOf(e);return t!==-1&&this.uniforms.splice(t,1),this}setName(e){return this.name=e,this}setUsage(e){return this.usage=e,this}dispose(){return this.dispatchEvent({type:"dispose"}),this}copy(e){this.name=e.name,this.usage=e.usage;const t=e.uniforms;this.uniforms.length=0;for(let n=0,i=t.length;n<i;n++){const s=Array.isArray(t[n])?t[n]:[t[n]];for(let o=0;o<s.length;o++)this.uniforms.push(s[o].clone())}return this}clone(){return new this.constructor().copy(this)}}class sD extends mu{constructor(e,t,n=1){super(e,t),this.isInstancedInterleavedBuffer=!0,this.meshPerAttribute=n}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}clone(e){const t=super.clone(e);return t.meshPerAttribute=this.meshPerAttribute,t}toJSON(e){const t=super.toJSON(e);return t.isInstancedInterleavedBuffer=!0,t.meshPerAttribute=this.meshPerAttribute,t}}class aD{constructor(e,t,n,i,s){this.isGLBufferAttribute=!0,this.name="",this.buffer=e,this.type=t,this.itemSize=n,this.elementSize=i,this.count=s,this.version=0}set needsUpdate(e){e===!0&&this.version++}setBuffer(e){return this.buffer=e,this}setType(e,t){return this.type=e,this.elementSize=t,this}setItemSize(e){return this.itemSize=e,this}setCount(e){return this.count=e,this}}class oD{constructor(e,t,n=0,i=1/0){this.ray=new La(e,t),this.near=n,this.far=i,this.camera=null,this.layers=new cu,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(e,t){this.ray.set(e,t)}setFromCamera(e,t){t.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(t.matrixWorld),this.ray.direction.set(e.x,e.y,.5).unproject(t).sub(this.ray.origin).normalize(),this.camera=t):t.isOrthographicCamera?(this.ray.origin.set(e.x,e.y,(t.near+t.far)/(t.near-t.far)).unproject(t),this.ray.direction.set(0,0,-1).transformDirection(t.matrixWorld),this.camera=t):console.error("THREE.Raycaster: Unsupported camera type: "+t.type)}intersectObject(e,t=!0,n=[]){return Dd(e,this,n,t),n.sort(M0),n}intersectObjects(e,t=!0,n=[]){for(let i=0,s=e.length;i<s;i++)Dd(e[i],this,n,t);return n.sort(M0),n}}function M0(r,e){return r.distance-e.distance}function Dd(r,e,t,n){if(r.layers.test(e.layers)&&r.raycast(e,t),n===!0){const i=r.children;for(let s=0,o=i.length;s<o;s++)Dd(i[s],e,t,!0)}}class lD{constructor(e=1,t=0,n=0){return this.radius=e,this.phi=t,this.theta=n,this}set(e,t,n){return this.radius=e,this.phi=t,this.theta=n,this}copy(e){return this.radius=e.radius,this.phi=e.phi,this.theta=e.theta,this}makeSafe(){return this.phi=Math.max(1e-6,Math.min(Math.PI-1e-6,this.phi)),this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,n){return this.radius=Math.sqrt(e*e+t*t+n*n),this.radius===0?(this.theta=0,this.phi=0):(this.theta=Math.atan2(e,n),this.phi=Math.acos(jt(t/this.radius,-1,1))),this}clone(){return new this.constructor().copy(this)}}class cD{constructor(e=1,t=0,n=0){return this.radius=e,this.theta=t,this.y=n,this}set(e,t,n){return this.radius=e,this.theta=t,this.y=n,this}copy(e){return this.radius=e.radius,this.theta=e.theta,this.y=e.y,this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,n){return this.radius=Math.sqrt(e*e+n*n),this.theta=Math.atan2(e,n),this.y=t,this}clone(){return new this.constructor().copy(this)}}const S0=new Le;class uD{constructor(e=new Le(1/0,1/0),t=new Le(-1/0,-1/0)){this.isBox2=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromPoints(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const n=S0.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y}getCenter(e){return this.isEmpty()?e.set(0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y)}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return this.clampPoint(e,S0).distanceTo(e)}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}const w0=new F,Lc=new F;class hD{constructor(e=new F,t=new F){this.start=e,this.end=t}set(e,t){return this.start.copy(e),this.end.copy(t),this}copy(e){return this.start.copy(e.start),this.end.copy(e.end),this}getCenter(e){return e.addVectors(this.start,this.end).multiplyScalar(.5)}delta(e){return e.subVectors(this.end,this.start)}distanceSq(){return this.start.distanceToSquared(this.end)}distance(){return this.start.distanceTo(this.end)}at(e,t){return this.delta(t).multiplyScalar(e).add(this.start)}closestPointToPointParameter(e,t){w0.subVectors(e,this.start),Lc.subVectors(this.end,this.start);const n=Lc.dot(Lc);let s=Lc.dot(w0)/n;return t&&(s=jt(s,0,1)),s}closestPointToPoint(e,t,n){const i=this.closestPointToPointParameter(e,t);return this.delta(n).multiplyScalar(i).add(this.start)}applyMatrix4(e){return this.start.applyMatrix4(e),this.end.applyMatrix4(e),this}equals(e){return e.start.equals(this.start)&&e.end.equals(this.end)}clone(){return new this.constructor().copy(this)}}const E0=new F;class fD extends Ct{constructor(e,t){super(),this.light=e,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=t,this.type="SpotLightHelper";const n=new xt,i=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1];for(let o=0,c=1,u=32;o<u;o++,c++){const h=o/u*Math.PI*2,p=c/u*Math.PI*2;i.push(Math.cos(h),Math.sin(h),1,Math.cos(p),Math.sin(p),1)}n.setAttribute("position",new $e(i,3));const s=new Bn({fog:!1,toneMapped:!1});this.cone=new Vi(n,s),this.add(this.cone),this.update()}dispose(){this.cone.geometry.dispose(),this.cone.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.light.target.updateWorldMatrix(!0,!1);const e=this.light.distance?this.light.distance:1e3,t=e*Math.tan(this.light.angle);this.cone.scale.set(t,t,e),E0.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(E0),this.color!==void 0?this.cone.material.color.set(this.color):this.cone.material.color.copy(this.light.color)}}const Dr=new F,Pc=new at,Pf=new at;class dD extends Vi{constructor(e){const t=yy(e),n=new xt,i=[],s=[],o=new qe(0,0,1),c=new qe(0,1,0);for(let h=0;h<t.length;h++){const p=t[h];p.parent&&p.parent.isBone&&(i.push(0,0,0),i.push(0,0,0),s.push(o.r,o.g,o.b),s.push(c.r,c.g,c.b))}n.setAttribute("position",new $e(i,3)),n.setAttribute("color",new $e(s,3));const u=new Bn({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0});super(n,u),this.isSkeletonHelper=!0,this.type="SkeletonHelper",this.root=e,this.bones=t,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1}updateMatrixWorld(e){const t=this.bones,n=this.geometry,i=n.getAttribute("position");Pf.copy(this.root.matrixWorld).invert();for(let s=0,o=0;s<t.length;s++){const c=t[s];c.parent&&c.parent.isBone&&(Pc.multiplyMatrices(Pf,c.matrixWorld),Dr.setFromMatrixPosition(Pc),i.setXYZ(o,Dr.x,Dr.y,Dr.z),Pc.multiplyMatrices(Pf,c.parent.matrixWorld),Dr.setFromMatrixPosition(Pc),i.setXYZ(o+1,Dr.x,Dr.y,Dr.z),o+=2)}n.getAttribute("position").needsUpdate=!0,super.updateMatrixWorld(e)}dispose(){this.geometry.dispose(),this.material.dispose()}}function yy(r){const e=[];r.isBone===!0&&e.push(r);for(let t=0;t<r.children.length;t++)e.push.apply(e,yy(r.children[t]));return e}class pD extends on{constructor(e,t,n){const i=new Ko(t,4,2),s=new Hr({wireframe:!0,fog:!1,toneMapped:!1});super(i,s),this.light=e,this.color=n,this.type="PointLightHelper",this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1,this.update()}dispose(){this.geometry.dispose(),this.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.color!==void 0?this.material.color.set(this.color):this.material.color.copy(this.light.color)}}const mD=new F,A0=new qe,T0=new qe;class gD extends Ct{constructor(e,t,n){super(),this.light=e,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=n,this.type="HemisphereLightHelper";const i=new Jo(t);i.rotateY(Math.PI*.5),this.material=new Hr({wireframe:!0,fog:!1,toneMapped:!1}),this.color===void 0&&(this.material.vertexColors=!0);const s=i.getAttribute("position"),o=new Float32Array(s.count*3);i.setAttribute("color",new Ot(o,3)),this.add(new on(i,this.material)),this.update()}dispose(){this.children[0].geometry.dispose(),this.children[0].material.dispose()}update(){const e=this.children[0];if(this.color!==void 0)this.material.color.set(this.color);else{const t=e.geometry.getAttribute("color");A0.copy(this.light.color),T0.copy(this.light.groundColor);for(let n=0,i=t.count;n<i;n++){const s=n<i/2?A0:T0;t.setXYZ(n,s.r,s.g,s.b)}t.needsUpdate=!0}this.light.updateWorldMatrix(!0,!1),e.lookAt(mD.setFromMatrixPosition(this.light.matrixWorld).negate())}}class _D extends Vi{constructor(e=10,t=10,n=4473924,i=8947848){n=new qe(n),i=new qe(i);const s=t/2,o=e/t,c=e/2,u=[],h=[];for(let d=0,m=0,_=-c;d<=t;d++,_+=o){u.push(-c,0,_,c,0,_),u.push(_,0,-c,_,0,c);const y=d===s?n:i;y.toArray(h,m),m+=3,y.toArray(h,m),m+=3,y.toArray(h,m),m+=3,y.toArray(h,m),m+=3}const p=new xt;p.setAttribute("position",new $e(u,3)),p.setAttribute("color",new $e(h,3));const g=new Bn({vertexColors:!0,toneMapped:!1});super(p,g),this.type="GridHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}}class vD extends Vi{constructor(e=10,t=16,n=8,i=64,s=4473924,o=8947848){s=new qe(s),o=new qe(o);const c=[],u=[];if(t>1)for(let g=0;g<t;g++){const d=g/t*(Math.PI*2),m=Math.sin(d)*e,_=Math.cos(d)*e;c.push(0,0,0),c.push(m,0,_);const y=g&1?s:o;u.push(y.r,y.g,y.b),u.push(y.r,y.g,y.b)}for(let g=0;g<n;g++){const d=g&1?s:o,m=e-e/n*g;for(let _=0;_<i;_++){let y=_/i*(Math.PI*2),v=Math.sin(y)*m,x=Math.cos(y)*m;c.push(v,0,x),u.push(d.r,d.g,d.b),y=(_+1)/i*(Math.PI*2),v=Math.sin(y)*m,x=Math.cos(y)*m,c.push(v,0,x),u.push(d.r,d.g,d.b)}}const h=new xt;h.setAttribute("position",new $e(c,3)),h.setAttribute("color",new $e(u,3));const p=new Bn({vertexColors:!0,toneMapped:!1});super(h,p),this.type="PolarGridHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}}const C0=new F,Ic=new F,R0=new F;class xD extends Ct{constructor(e,t,n){super(),this.light=e,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=n,this.type="DirectionalLightHelper",t===void 0&&(t=1);let i=new xt;i.setAttribute("position",new $e([-t,t,0,t,t,0,t,-t,0,-t,-t,0,-t,t,0],3));const s=new Bn({fog:!1,toneMapped:!1});this.lightPlane=new kr(i,s),this.add(this.lightPlane),i=new xt,i.setAttribute("position",new $e([0,0,0,0,0,1],3)),this.targetLine=new kr(i,s),this.add(this.targetLine),this.update()}dispose(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.light.target.updateWorldMatrix(!0,!1),C0.setFromMatrixPosition(this.light.matrixWorld),Ic.setFromMatrixPosition(this.light.target.matrixWorld),R0.subVectors(Ic,C0),this.lightPlane.lookAt(Ic),this.color!==void 0?(this.lightPlane.material.color.set(this.color),this.targetLine.material.color.set(this.color)):(this.lightPlane.material.color.copy(this.light.color),this.targetLine.material.color.copy(this.light.color)),this.targetLine.lookAt(Ic),this.targetLine.scale.z=R0.length()}}const Dc=new F,Kt=new uu;class yD extends Vi{constructor(e){const t=new xt,n=new Bn({color:16777215,vertexColors:!0,toneMapped:!1}),i=[],s=[],o={};c("n1","n2"),c("n2","n4"),c("n4","n3"),c("n3","n1"),c("f1","f2"),c("f2","f4"),c("f4","f3"),c("f3","f1"),c("n1","f1"),c("n2","f2"),c("n3","f3"),c("n4","f4"),c("p","n1"),c("p","n2"),c("p","n3"),c("p","n4"),c("u1","u2"),c("u2","u3"),c("u3","u1"),c("c","t"),c("p","c"),c("cn1","cn2"),c("cn3","cn4"),c("cf1","cf2"),c("cf3","cf4");function c(_,y){u(_),u(y)}function u(_){i.push(0,0,0),s.push(0,0,0),o[_]===void 0&&(o[_]=[]),o[_].push(i.length/3-1)}t.setAttribute("position",new $e(i,3)),t.setAttribute("color",new $e(s,3)),super(t,n),this.type="CameraHelper",this.camera=e,this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=o,this.update();const h=new qe(16755200),p=new qe(16711680),g=new qe(43775),d=new qe(16777215),m=new qe(3355443);this.setColors(h,p,g,d,m)}setColors(e,t,n,i,s){const c=this.geometry.getAttribute("color");c.setXYZ(0,e.r,e.g,e.b),c.setXYZ(1,e.r,e.g,e.b),c.setXYZ(2,e.r,e.g,e.b),c.setXYZ(3,e.r,e.g,e.b),c.setXYZ(4,e.r,e.g,e.b),c.setXYZ(5,e.r,e.g,e.b),c.setXYZ(6,e.r,e.g,e.b),c.setXYZ(7,e.r,e.g,e.b),c.setXYZ(8,e.r,e.g,e.b),c.setXYZ(9,e.r,e.g,e.b),c.setXYZ(10,e.r,e.g,e.b),c.setXYZ(11,e.r,e.g,e.b),c.setXYZ(12,e.r,e.g,e.b),c.setXYZ(13,e.r,e.g,e.b),c.setXYZ(14,e.r,e.g,e.b),c.setXYZ(15,e.r,e.g,e.b),c.setXYZ(16,e.r,e.g,e.b),c.setXYZ(17,e.r,e.g,e.b),c.setXYZ(18,e.r,e.g,e.b),c.setXYZ(19,e.r,e.g,e.b),c.setXYZ(20,e.r,e.g,e.b),c.setXYZ(21,e.r,e.g,e.b),c.setXYZ(22,e.r,e.g,e.b),c.setXYZ(23,e.r,e.g,e.b),c.setXYZ(24,t.r,t.g,t.b),c.setXYZ(25,t.r,t.g,t.b),c.setXYZ(26,t.r,t.g,t.b),c.setXYZ(27,t.r,t.g,t.b),c.setXYZ(28,t.r,t.g,t.b),c.setXYZ(29,t.r,t.g,t.b),c.setXYZ(30,t.r,t.g,t.b),c.setXYZ(31,t.r,t.g,t.b),c.setXYZ(32,n.r,n.g,n.b),c.setXYZ(33,n.r,n.g,n.b),c.setXYZ(34,n.r,n.g,n.b),c.setXYZ(35,n.r,n.g,n.b),c.setXYZ(36,n.r,n.g,n.b),c.setXYZ(37,n.r,n.g,n.b),c.setXYZ(38,i.r,i.g,i.b),c.setXYZ(39,i.r,i.g,i.b),c.setXYZ(40,s.r,s.g,s.b),c.setXYZ(41,s.r,s.g,s.b),c.setXYZ(42,s.r,s.g,s.b),c.setXYZ(43,s.r,s.g,s.b),c.setXYZ(44,s.r,s.g,s.b),c.setXYZ(45,s.r,s.g,s.b),c.setXYZ(46,s.r,s.g,s.b),c.setXYZ(47,s.r,s.g,s.b),c.setXYZ(48,s.r,s.g,s.b),c.setXYZ(49,s.r,s.g,s.b),c.needsUpdate=!0}update(){const e=this.geometry,t=this.pointMap,n=1,i=1;Kt.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse),rn("c",t,e,Kt,0,0,-1),rn("t",t,e,Kt,0,0,1),rn("n1",t,e,Kt,-n,-i,-1),rn("n2",t,e,Kt,n,-i,-1),rn("n3",t,e,Kt,-n,i,-1),rn("n4",t,e,Kt,n,i,-1),rn("f1",t,e,Kt,-n,-i,1),rn("f2",t,e,Kt,n,-i,1),rn("f3",t,e,Kt,-n,i,1),rn("f4",t,e,Kt,n,i,1),rn("u1",t,e,Kt,n*.7,i*1.1,-1),rn("u2",t,e,Kt,-n*.7,i*1.1,-1),rn("u3",t,e,Kt,0,i*2,-1),rn("cf1",t,e,Kt,-n,0,1),rn("cf2",t,e,Kt,n,0,1),rn("cf3",t,e,Kt,0,-i,1),rn("cf4",t,e,Kt,0,i,1),rn("cn1",t,e,Kt,-n,0,-1),rn("cn2",t,e,Kt,n,0,-1),rn("cn3",t,e,Kt,0,-i,-1),rn("cn4",t,e,Kt,0,i,-1),e.getAttribute("position").needsUpdate=!0}dispose(){this.geometry.dispose(),this.material.dispose()}}function rn(r,e,t,n,i,s,o){Dc.set(i,s,o).unproject(n);const c=e[r];if(c!==void 0){const u=t.getAttribute("position");for(let h=0,p=c.length;h<p;h++)u.setXYZ(c[h],Dc.x,Dc.y,Dc.z)}}const Uc=new Fn;class bD extends Vi{constructor(e,t=16776960){const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),i=new Float32Array(8*3),s=new xt;s.setIndex(new Ot(n,1)),s.setAttribute("position",new Ot(i,3)),super(s,new Bn({color:t,toneMapped:!1})),this.object=e,this.type="BoxHelper",this.matrixAutoUpdate=!1,this.update()}update(e){if(e!==void 0&&console.warn("THREE.BoxHelper: .update() has no longer arguments."),this.object!==void 0&&Uc.setFromObject(this.object),Uc.isEmpty())return;const t=Uc.min,n=Uc.max,i=this.geometry.attributes.position,s=i.array;s[0]=n.x,s[1]=n.y,s[2]=n.z,s[3]=t.x,s[4]=n.y,s[5]=n.z,s[6]=t.x,s[7]=t.y,s[8]=n.z,s[9]=n.x,s[10]=t.y,s[11]=n.z,s[12]=n.x,s[13]=n.y,s[14]=t.z,s[15]=t.x,s[16]=n.y,s[17]=t.z,s[18]=t.x,s[19]=t.y,s[20]=t.z,s[21]=n.x,s[22]=t.y,s[23]=t.z,i.needsUpdate=!0,this.geometry.computeBoundingSphere()}setFromObject(e){return this.object=e,this.update(),this}copy(e,t){return super.copy(e,t),this.object=e.object,this}dispose(){this.geometry.dispose(),this.material.dispose()}}class MD extends Vi{constructor(e,t=16776960){const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),i=[1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1],s=new xt;s.setIndex(new Ot(n,1)),s.setAttribute("position",new $e(i,3)),super(s,new Bn({color:t,toneMapped:!1})),this.box=e,this.type="Box3Helper",this.geometry.computeBoundingSphere()}updateMatrixWorld(e){const t=this.box;t.isEmpty()||(t.getCenter(this.position),t.getSize(this.scale),this.scale.multiplyScalar(.5),super.updateMatrixWorld(e))}dispose(){this.geometry.dispose(),this.material.dispose()}}class SD extends kr{constructor(e,t=1,n=16776960){const i=n,s=[1,-1,0,-1,1,0,-1,-1,0,1,1,0,-1,1,0,-1,-1,0,1,-1,0,1,1,0],o=new xt;o.setAttribute("position",new $e(s,3)),o.computeBoundingSphere(),super(o,new Bn({color:i,toneMapped:!1})),this.type="PlaneHelper",this.plane=e,this.size=t;const c=[1,1,0,-1,1,0,-1,-1,0,1,1,0,-1,-1,0,1,-1,0],u=new xt;u.setAttribute("position",new $e(c,3)),u.computeBoundingSphere(),this.add(new on(u,new Hr({color:i,opacity:.2,transparent:!0,depthWrite:!1,toneMapped:!1})))}updateMatrixWorld(e){this.position.set(0,0,0),this.scale.set(.5*this.size,.5*this.size,1),this.lookAt(this.plane.normal),this.translateZ(-this.plane.constant),super.updateMatrixWorld(e)}dispose(){this.geometry.dispose(),this.material.dispose(),this.children[0].geometry.dispose(),this.children[0].material.dispose()}}const L0=new F;let Nc,If;class wD extends Ct{constructor(e=new F(0,0,1),t=new F(0,0,0),n=1,i=16776960,s=n*.2,o=s*.2){super(),this.type="ArrowHelper",Nc===void 0&&(Nc=new xt,Nc.setAttribute("position",new $e([0,0,0,0,1,0],3)),If=new Da(0,.5,1,5,1),If.translate(0,-.5,0)),this.position.copy(t),this.line=new kr(Nc,new Bn({color:i,toneMapped:!1})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new on(If,new Hr({color:i,toneMapped:!1})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(e),this.setLength(n,s,o)}setDirection(e){if(e.y>.99999)this.quaternion.set(0,0,0,1);else if(e.y<-.99999)this.quaternion.set(1,0,0,0);else{L0.set(e.z,0,-e.x).normalize();const t=Math.acos(e.y);this.quaternion.setFromAxisAngle(L0,t)}}setLength(e,t=e*.2,n=t*.2){this.line.scale.set(1,Math.max(1e-4,e-t),1),this.line.updateMatrix(),this.cone.scale.set(n,t,n),this.cone.position.y=e,this.cone.updateMatrix()}setColor(e){this.line.material.color.set(e),this.cone.material.color.set(e)}copy(e){return super.copy(e,!1),this.line.copy(e.line),this.cone.copy(e.cone),this}dispose(){this.line.geometry.dispose(),this.line.material.dispose(),this.cone.geometry.dispose(),this.cone.material.dispose()}}class ED extends Vi{constructor(e=1){const t=[0,0,0,e,0,0,0,0,0,0,e,0,0,0,0,0,0,e],n=[1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],i=new xt;i.setAttribute("position",new $e(t,3)),i.setAttribute("color",new $e(n,3));const s=new Bn({vertexColors:!0,toneMapped:!1});super(i,s),this.type="AxesHelper"}setColors(e,t,n){const i=new qe,s=this.geometry.attributes.color.array;return i.set(e),i.toArray(s,0),i.toArray(s,3),i.set(t),i.toArray(s,6),i.toArray(s,9),i.set(n),i.toArray(s,12),i.toArray(s,15),this.geometry.attributes.color.needsUpdate=!0,this}dispose(){this.geometry.dispose(),this.material.dispose()}}class AD{constructor(){this.type="ShapePath",this.color=new qe,this.subPaths=[],this.currentPath=null}moveTo(e,t){return this.currentPath=new Oo,this.subPaths.push(this.currentPath),this.currentPath.moveTo(e,t),this}lineTo(e,t){return this.currentPath.lineTo(e,t),this}quadraticCurveTo(e,t,n,i){return this.currentPath.quadraticCurveTo(e,t,n,i),this}bezierCurveTo(e,t,n,i,s,o){return this.currentPath.bezierCurveTo(e,t,n,i,s,o),this}splineThru(e){return this.currentPath.splineThru(e),this}toShapes(e){function t(x){const w=[];for(let M=0,E=x.length;M<E;M++){const O=x[M],P=new Ss;P.curves=O.curves,w.push(P)}return w}function n(x,w){const M=w.length;let E=!1;for(let O=M-1,P=0;P<M;O=P++){let U=w[O],V=w[P],se=V.x-U.x,T=V.y-U.y;if(Math.abs(T)>Number.EPSILON){if(T<0&&(U=w[P],se=-se,V=w[O],T=-T),x.y<U.y||x.y>V.y)continue;if(x.y===U.y){if(x.x===U.x)return!0}else{const N=T*(x.x-U.x)-se*(x.y-U.y);if(N===0)return!0;if(N<0)continue;E=!E}}else{if(x.y!==U.y)continue;if(V.x<=x.x&&x.x<=U.x||U.x<=x.x&&x.x<=V.x)return!0}}return E}const i=Gi.isClockWise,s=this.subPaths;if(s.length===0)return[];let o,c,u;const h=[];if(s.length===1)return c=s[0],u=new Ss,u.curves=c.curves,h.push(u),h;let p=!i(s[0].getPoints());p=e?!p:p;const g=[],d=[];let m=[],_=0,y;d[_]=void 0,m[_]=[];for(let x=0,w=s.length;x<w;x++)c=s[x],y=c.getPoints(),o=i(y),o=e?!o:o,o?(!p&&d[_]&&_++,d[_]={s:new Ss,p:y},d[_].s.curves=c.curves,p&&_++,m[_]=[]):m[_].push({h:c,p:y[0]});if(!d[0])return t(s);if(d.length>1){let x=!1,w=0;for(let M=0,E=d.length;M<E;M++)g[M]=[];for(let M=0,E=d.length;M<E;M++){const O=m[M];for(let P=0;P<O.length;P++){const U=O[P];let V=!0;for(let se=0;se<d.length;se++)n(U.p,d[se].p)&&(M!==se&&w++,V?(V=!1,g[se].push(U)):x=!0);V&&g[M].push(U)}}w>0&&x===!1&&(m=g)}let v;for(let x=0,w=d.length;x<w;x++){u=d[x].s,h.push(u),v=m[x];for(let M=0,E=v.length;M<E;M++)u.holes.push(v[M].h)}return h}}typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:iu}}));typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=iu);const TD=Object.freeze(Object.defineProperty({__proto__:null,ACESFilmicToneMapping:Fv,AddEquation:Nr,AddOperation:Dv,AdditiveAnimationBlendMode:Jd,AdditiveBlending:qf,AgXToneMapping:zv,AlphaFormat:Vv,AlwaysCompare:ox,AlwaysDepth:Av,AlwaysStencilFunc:Sd,AmbientLight:uy,AnimationAction:xy,AnimationClip:Ho,AnimationLoader:T3,AnimationMixer:nD,AnimationObjectGroup:eD,AnimationUtils:S3,ArcCurve:Nx,ArrayCamera:Sx,ArrowHelper:wD,AttachedBindMode:Kf,Audio:_y,AudioAnalyser:W3,AudioContext:Sp,AudioListener:G3,AudioLoader:B3,AxesHelper:ED,BackSide:On,BasicDepthPacking:jv,BasicShadowMap:IT,BatchedMesh:Ix,Bone:cp,BooleanKeyframeTrack:Cs,Box2:uD,Box3:Fn,Box3Helper:MD,BoxGeometry:Ts,BoxHelper:bD,BufferAttribute:Ot,BufferGeometry:xt,BufferGeometryLoader:my,ByteType:Gv,Cache:lr,Camera:uu,CameraHelper:yD,CanvasTexture:YI,CapsuleGeometry:xu,CatmullRomCurve3:Ox,CineonToneMapping:Ov,CircleGeometry:yu,ClampToEdgeWrapping:Tn,Clock:gy,Color:qe,ColorKeyframeTrack:yp,ColorManagement:Ut,CompressedArrayTexture:XI,CompressedCubeTexture:qI,CompressedTexture:_u,CompressedTextureLoader:C3,ConeGeometry:bu,ConstantAlphaFactor:Sv,ConstantColorFactor:bv,CubeCamera:px,CubeReflectionMapping:dr,CubeRefractionMapping:zr,CubeTexture:Yo,CubeTextureLoader:R3,CubeUVReflectionMapping:Ra,CubicBezierCurve:fp,CubicBezierCurve3:Fx,CubicInterpolant:ny,CullFaceBack:Xf,CullFaceFront:ov,CullFaceFrontBack:PT,CullFaceNone:av,Curve:Pi,CurvePath:zx,CustomBlending:cv,CustomToneMapping:Bv,CylinderGeometry:Da,Cylindrical:cD,Data3DTexture:tp,DataArrayTexture:lu,DataTexture:Ms,DataTextureLoader:L3,DataUtils:GC,DecrementStencilOp:VT,DecrementWrapStencilOp:XT,DefaultLoadingManager:sy,DepthFormat:Fr,DepthStencilFormat:ws,DepthTexture:sp,DetachedBindMode:kv,DirectionalLight:cy,DirectionalLightHelper:xD,DiscreteInterpolant:iy,DisplayP3ColorSpace:ou,DodecahedronGeometry:Mu,DoubleSide:Bi,DstAlphaFactor:gv,DstColorFactor:vv,DynamicCopyUsage:aC,DynamicDrawUsage:eC,DynamicReadUsage:iC,EdgesGeometry:kx,EllipseCurve:vu,EqualCompare:ix,EqualDepth:Cv,EqualStencilFunc:ZT,EquirectangularReflectionMapping:So,EquirectangularRefractionMapping:wo,Euler:qo,EventDispatcher:gr,ExtrudeGeometry:wu,FileLoader:pr,Float16BufferAttribute:YC,Float32BufferAttribute:$e,Float64BufferAttribute:$C,FloatType:xi,Fog:pu,FogExp2:du,FramebufferTexture:WI,FrontSide:fr,Frustum:$o,GLBufferAttribute:aD,GLSL1:lC,GLSL3:wd,GreaterCompare:rx,GreaterDepth:Lv,GreaterEqualCompare:ax,GreaterEqualDepth:Rv,GreaterEqualStencilFunc:QT,GreaterStencilFunc:KT,GridHelper:_D,Group:ba,HalfFloatType:Ea,HemisphereLight:ay,HemisphereLightHelper:gD,IcosahedronGeometry:Eu,ImageBitmapLoader:F3,ImageLoader:Vo,ImageUtils:ep,IncrementStencilOp:HT,IncrementWrapStencilOp:WT,InstancedBufferAttribute:Ca,InstancedBufferGeometry:py,InstancedInterleavedBuffer:sD,InstancedMesh:Px,Int16BufferAttribute:XC,Int32BufferAttribute:qC,Int8BufferAttribute:HC,IntType:Vd,InterleavedBuffer:mu,InterleavedBufferAttribute:Es,Interpolant:jo,InterpolateDiscrete:To,InterpolateLinear:Co,InterpolateSmooth:Wc,InvertStencilOp:qT,KeepStencilOp:us,KeyframeTrack:Ii,LOD:Rx,LatheGeometry:Zo,Layers:cu,LessCompare:nx,LessDepth:Tv,LessEqualCompare:jd,LessEqualDepth:Mo,LessEqualStencilFunc:JT,LessStencilFunc:$T,Light:Wr,LightProbe:dy,Line:kr,Line3:hD,LineBasicMaterial:Bn,LineCurve:dp,LineCurve3:Bx,LineDashedMaterial:Qx,LineLoop:Dx,LineSegments:Vi,LinearDisplayP3ColorSpace:Xo,LinearEncoding:Kd,LinearFilter:$t,LinearInterpolant:xp,LinearMipMapLinearFilter:OT,LinearMipMapNearestFilter:NT,LinearMipmapLinearFilter:zi,LinearMipmapNearestFilter:vo,LinearSRGBColorSpace:Hi,LinearToneMapping:Uv,LinearTransfer:Lo,Loader:Zn,LoaderUtils:Id,LoadingManager:bp,LoopOnce:Zv,LoopPingPong:Kv,LoopRepeat:Jv,LuminanceAlphaFormat:Xv,LuminanceFormat:Wv,MOUSE:RT,Material:Rn,MaterialLoader:Iu,MathUtils:SC,Matrix3:vt,Matrix4:at,MaxEquation:Jf,Mesh:on,MeshBasicMaterial:Hr,MeshDepthMaterial:ap,MeshDistanceMaterial:op,MeshLambertMaterial:Kx,MeshMatcapMaterial:jx,MeshNormalMaterial:Jx,MeshPhongMaterial:$x,MeshPhysicalMaterial:Yx,MeshStandardMaterial:_p,MeshToonMaterial:Zx,MinEquation:Zf,MirroredRepeatWrapping:Ao,MixOperation:Iv,MultiplyBlending:$f,MultiplyOperation:Wo,NearestFilter:sn,NearestMipMapLinearFilter:UT,NearestMipMapNearestFilter:DT,NearestMipmapLinearFilter:ds,NearestMipmapNearestFilter:Kc,NeverCompare:tx,NeverDepth:Ev,NeverStencilFunc:YT,NoBlending:cr,NoColorSpace:si,NoToneMapping:ur,NormalAnimationBlendMode:au,NormalBlending:xs,NotEqualCompare:sx,NotEqualDepth:Pv,NotEqualStencilFunc:jT,NumberKeyframeTrack:ko,Object3D:Ct,ObjectLoader:N3,ObjectSpaceNormalMap:ex,OctahedronGeometry:Jo,OneFactor:dv,OneMinusConstantAlphaFactor:wv,OneMinusConstantColorFactor:Mv,OneMinusDstAlphaFactor:_v,OneMinusDstColorFactor:xv,OneMinusSrcAlphaFactor:Jc,OneMinusSrcColorFactor:mv,OrthographicCamera:hu,P3Primaries:Io,PCFShadowMap:Hd,PCFSoftShadowMap:lv,PMREMGenerator:Ad,Path:Oo,PerspectiveCamera:yn,Plane:Ur,PlaneGeometry:Pa,PlaneHelper:SD,PointLight:ly,PointLightHelper:pD,Points:Ux,PointsMaterial:up,PolarGridHelper:vD,PolyhedronGeometry:Vr,PositionalAudio:V3,PropertyBinding:At,PropertyMixer:vy,QuadraticBezierCurve:pp,QuadraticBezierCurve3:mp,Quaternion:$n,QuaternionKeyframeTrack:Ua,QuaternionLinearInterpolant:ry,RED_GREEN_RGTC2_Format:bd,RED_RGTC1_Format:$v,REVISION:iu,RGBADepthPacking:Qv,RGBAFormat:Yn,RGBAIntegerFormat:$d,RGBA_ASTC_10x10_Format:md,RGBA_ASTC_10x5_Format:fd,RGBA_ASTC_10x6_Format:dd,RGBA_ASTC_10x8_Format:pd,RGBA_ASTC_12x10_Format:gd,RGBA_ASTC_12x12_Format:_d,RGBA_ASTC_4x4_Format:rd,RGBA_ASTC_5x4_Format:sd,RGBA_ASTC_5x5_Format:ad,RGBA_ASTC_6x5_Format:od,RGBA_ASTC_6x6_Format:ld,RGBA_ASTC_8x5_Format:cd,RGBA_ASTC_8x6_Format:ud,RGBA_ASTC_8x8_Format:hd,RGBA_BPTC_Format:Vc,RGBA_ETC2_EAC_Format:id,RGBA_PVRTC_2BPPV1_Format:td,RGBA_PVRTC_4BPPV1_Format:ed,RGBA_S3TC_DXT1_Format:kc,RGBA_S3TC_DXT3_Format:Gc,RGBA_S3TC_DXT5_Format:Hc,RGB_BPTC_SIGNED_Format:vd,RGB_BPTC_UNSIGNED_Format:xd,RGB_ETC1_Format:Zd,RGB_ETC2_Format:nd,RGB_PVRTC_2BPPV1_Format:Qf,RGB_PVRTC_4BPPV1_Format:jf,RGB_S3TC_DXT1_Format:zc,RGFormat:Yv,RGIntegerFormat:Yd,RawShaderMaterial:qx,Ray:La,Raycaster:oD,Rec709Primaries:Po,RectAreaLight:hy,RedFormat:qv,RedIntegerFormat:qd,ReinhardToneMapping:Nv,RenderTarget:ux,RepeatWrapping:Eo,ReplaceStencilOp:GT,ReverseSubtractEquation:hv,RingGeometry:Au,SIGNED_RED_GREEN_RGTC2_Format:Md,SIGNED_RED_RGTC1_Format:yd,SRGBColorSpace:dn,SRGBTransfer:Gt,Scene:Ax,ShaderChunk:pt,ShaderLib:Ci,ShaderMaterial:Li,ShadowMaterial:Xx,Shape:Ss,ShapeGeometry:Tu,ShapePath:AD,ShapeUtils:Gi,ShortType:Hv,Skeleton:gu,SkeletonHelper:dD,SkinnedMesh:Lx,Source:_s,Sphere:Cn,SphereGeometry:Ko,Spherical:lD,SphericalHarmonics3:fy,SplineCurve:gp,SpotLight:oy,SpotLightHelper:fD,Sprite:Cx,SpriteMaterial:lp,SrcAlphaFactor:Zc,SrcAlphaSaturateFactor:yv,SrcColorFactor:pv,StaticCopyUsage:sC,StaticDrawUsage:Do,StaticReadUsage:nC,StereoCamera:z3,StreamCopyUsage:oC,StreamDrawUsage:tC,StreamReadUsage:rC,StringKeyframeTrack:Rs,SubtractEquation:uv,SubtractiveBlending:Yf,TOUCH:LT,TangentSpaceNormalMap:Gr,TetrahedronGeometry:Cu,Texture:Qt,TextureLoader:P3,TorusGeometry:Ru,TorusKnotGeometry:Lu,Triangle:ai,TriangleFanDrawMode:zT,TriangleStripDrawMode:BT,TrianglesDrawMode:FT,TubeGeometry:Pu,UVMapping:ru,Uint16BufferAttribute:np,Uint32BufferAttribute:ip,Uint8BufferAttribute:VC,Uint8ClampedBufferAttribute:WC,Uniform:Ap,UniformsGroup:rD,UniformsLib:Be,UniformsUtils:dx,UnsignedByteType:hr,UnsignedInt248Type:Or,UnsignedIntType:or,UnsignedShort4444Type:Wd,UnsignedShort5551Type:Xd,UnsignedShortType:su,VSMShadowMap:Fi,Vector2:Le,Vector3:F,Vector4:Nt,VectorKeyframeTrack:Go,VideoTexture:VI,WebGL1Renderer:Ex,WebGL3DRenderTarget:RC,WebGLArrayRenderTarget:CC,WebGLCoordinateSystem:ki,WebGLCubeRenderTarget:mx,WebGLMultipleRenderTargets:LC,WebGLRenderTarget:Ri,WebGLRenderer:wx,WebGLUtils:Mx,WebGPUCoordinateSystem:Uo,WireframeGeometry:Wx,WrapAroundEnding:Ro,ZeroCurvatureEnding:ms,ZeroFactor:fv,ZeroSlopeEnding:gs,ZeroStencilOp:kT,_SRGBAFormat:jc,createCanvasElement:cx,sRGBEncoding:Br},Symbol.toStringTag,{value:"Module"}));var by={exports:{}},wa=typeof Reflect=="object"?Reflect:null,P0=wa&&typeof wa.apply=="function"?wa.apply:function(e,t,n){return Function.prototype.apply.call(e,t,n)},qc;wa&&typeof wa.ownKeys=="function"?qc=wa.ownKeys:Object.getOwnPropertySymbols?qc=function(e){return Object.getOwnPropertyNames(e).concat(Object.getOwnPropertySymbols(e))}:qc=function(e){return Object.getOwnPropertyNames(e)};function CD(r){console&&console.warn&&console.warn(r)}var My=Number.isNaN||function(e){return e!==e};function Bt(){Bt.init.call(this)}by.exports=Bt;by.exports.once=ID;Bt.EventEmitter=Bt;Bt.prototype._events=void 0;Bt.prototype._eventsCount=0;Bt.prototype._maxListeners=void 0;var I0=10;function Du(r){if(typeof r!="function")throw new TypeError('The "listener" argument must be of type Function. Received type '+typeof r)}Object.defineProperty(Bt,"defaultMaxListeners",{enumerable:!0,get:function(){return I0},set:function(r){if(typeof r!="number"||r<0||My(r))throw new RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received '+r+".");I0=r}});Bt.init=function(){(this._events===void 0||this._events===Object.getPrototypeOf(this)._events)&&(this._events=Object.create(null),this._eventsCount=0),this._maxListeners=this._maxListeners||void 0};Bt.prototype.setMaxListeners=function(e){if(typeof e!="number"||e<0||My(e))throw new RangeError('The value of "n" is out of range. It must be a non-negative number. Received '+e+".");return this._maxListeners=e,this};function Sy(r){return r._maxListeners===void 0?Bt.defaultMaxListeners:r._maxListeners}Bt.prototype.getMaxListeners=function(){return Sy(this)};Bt.prototype.emit=function(e){for(var t=[],n=1;n<arguments.length;n++)t.push(arguments[n]);var i=e==="error",s=this._events;if(s!==void 0)i=i&&s.error===void 0;else if(!i)return!1;if(i){var o;if(t.length>0&&(o=t[0]),o instanceof Error)throw o;var c=new Error("Unhandled error."+(o?" ("+o.message+")":""));throw c.context=o,c}var u=s[e];if(u===void 0)return!1;if(typeof u=="function")P0(u,this,t);else for(var h=u.length,p=Cy(u,h),n=0;n<h;++n)P0(p[n],this,t);return!0};function wy(r,e,t,n){var i,s,o;if(Du(t),s=r._events,s===void 0?(s=r._events=Object.create(null),r._eventsCount=0):(s.newListener!==void 0&&(r.emit("newListener",e,t.listener?t.listener:t),s=r._events),o=s[e]),o===void 0)o=s[e]=t,++r._eventsCount;else if(typeof o=="function"?o=s[e]=n?[t,o]:[o,t]:n?o.unshift(t):o.push(t),i=Sy(r),i>0&&o.length>i&&!o.warned){o.warned=!0;var c=new Error("Possible EventEmitter memory leak detected. "+o.length+" "+String(e)+" listeners added. Use emitter.setMaxListeners() to increase limit");c.name="MaxListenersExceededWarning",c.emitter=r,c.type=e,c.count=o.length,CD(c)}return r}Bt.prototype.addListener=function(e,t){return wy(this,e,t,!1)};Bt.prototype.on=Bt.prototype.addListener;Bt.prototype.prependListener=function(e,t){return wy(this,e,t,!0)};function RD(){if(!this.fired)return this.target.removeListener(this.type,this.wrapFn),this.fired=!0,arguments.length===0?this.listener.call(this.target):this.listener.apply(this.target,arguments)}function Ey(r,e,t){var n={fired:!1,wrapFn:void 0,target:r,type:e,listener:t},i=RD.bind(n);return i.listener=t,n.wrapFn=i,i}Bt.prototype.once=function(e,t){return Du(t),this.on(e,Ey(this,e,t)),this};Bt.prototype.prependOnceListener=function(e,t){return Du(t),this.prependListener(e,Ey(this,e,t)),this};Bt.prototype.removeListener=function(e,t){var n,i,s,o,c;if(Du(t),i=this._events,i===void 0)return this;if(n=i[e],n===void 0)return this;if(n===t||n.listener===t)--this._eventsCount===0?this._events=Object.create(null):(delete i[e],i.removeListener&&this.emit("removeListener",e,n.listener||t));else if(typeof n!="function"){for(s=-1,o=n.length-1;o>=0;o--)if(n[o]===t||n[o].listener===t){c=n[o].listener,s=o;break}if(s<0)return this;s===0?n.shift():LD(n,s),n.length===1&&(i[e]=n[0]),i.removeListener!==void 0&&this.emit("removeListener",e,c||t)}return this};Bt.prototype.off=Bt.prototype.removeListener;Bt.prototype.removeAllListeners=function(e){var t,n,i;if(n=this._events,n===void 0)return this;if(n.removeListener===void 0)return arguments.length===0?(this._events=Object.create(null),this._eventsCount=0):n[e]!==void 0&&(--this._eventsCount===0?this._events=Object.create(null):delete n[e]),this;if(arguments.length===0){var s=Object.keys(n),o;for(i=0;i<s.length;++i)o=s[i],o!=="removeListener"&&this.removeAllListeners(o);return this.removeAllListeners("removeListener"),this._events=Object.create(null),this._eventsCount=0,this}if(t=n[e],typeof t=="function")this.removeListener(e,t);else if(t!==void 0)for(i=t.length-1;i>=0;i--)this.removeListener(e,t[i]);return this};function Ay(r,e,t){var n=r._events;if(n===void 0)return[];var i=n[e];return i===void 0?[]:typeof i=="function"?t?[i.listener||i]:[i]:t?PD(i):Cy(i,i.length)}Bt.prototype.listeners=function(e){return Ay(this,e,!0)};Bt.prototype.rawListeners=function(e){return Ay(this,e,!1)};Bt.listenerCount=function(r,e){return typeof r.listenerCount=="function"?r.listenerCount(e):Ty.call(r,e)};Bt.prototype.listenerCount=Ty;function Ty(r){var e=this._events;if(e!==void 0){var t=e[r];if(typeof t=="function")return 1;if(t!==void 0)return t.length}return 0}Bt.prototype.eventNames=function(){return this._eventsCount>0?qc(this._events):[]};function Cy(r,e){for(var t=new Array(e),n=0;n<e;++n)t[n]=r[n];return t}function LD(r,e){for(;e+1<r.length;e++)r[e]=r[e+1];r.pop()}function PD(r){for(var e=new Array(r.length),t=0;t<e.length;++t)e[t]=r[t].listener||r[t];return e}function ID(r,e){return new Promise(function(t,n){function i(o){r.removeListener(e,s),n(o)}function s(){typeof r.removeListener=="function"&&r.removeListener("error",i),t([].slice.call(arguments))}Ry(r,e,s,{once:!0}),e!=="error"&&DD(r,i,{once:!0})})}function DD(r,e,t){typeof r.on=="function"&&Ry(r,"error",e,t)}function Ry(r,e,t,n){if(typeof r.on=="function")n.once?r.once(e,t):r.on(e,t);else if(typeof r.addEventListener=="function")r.addEventListener(e,function i(s){n.once&&r.removeEventListener(e,i),t(s)});else throw new TypeError('The "emitter" argument must be of type EventEmitter. Received type '+typeof r)}var tu={exports:{}};/**
 * @license
 * Lodash <https://lodash.com/>
 * Copyright OpenJS Foundation and other contributors <https://openjsf.org/>
 * Released under MIT license <https://lodash.com/license>
 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
 * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 */tu.exports;(function(r,e){(function(){var t,n="4.17.21",i=200,s="Unsupported core-js use. Try https://npms.io/search?q=ponyfill.",o="Expected a function",c="Invalid `variable` option passed into `_.template`",u="__lodash_hash_undefined__",h=500,p="__lodash_placeholder__",g=1,d=2,m=4,_=1,y=2,v=1,x=2,w=4,M=8,E=16,O=32,P=64,U=128,V=256,se=512,T=30,N="...",ne=800,Te=16,H=1,re=2,Q=3,Me=1/0,ve=9007199254740991,be=17976931348623157e292,Ie=NaN,Se=4294967295,Ve=Se-1,je=Se>>>1,he=[["ary",U],["bind",v],["bindKey",x],["curry",M],["curryRight",E],["flip",se],["partial",O],["partialRight",P],["rearg",V]],Pe="[object Arguments]",Ge="[object Array]",X="[object AsyncFunction]",Z="[object Boolean]",$="[object Date]",ue="[object DOMException]",me="[object Error]",I="[object Function]",ge="[object GeneratorFunction]",J="[object Map]",ee="[object Number]",j="[object Null]",Ce="[object Object]",Re="[object Promise]",R="[object Proxy]",A="[object RegExp]",k="[object Set]",ie="[object String]",te="[object Symbol]",de="[object Undefined]",oe="[object WeakMap]",xe="[object WeakSet]",pe="[object ArrayBuffer]",_e="[object DataView]",Fe="[object Float32Array]",q="[object Float64Array]",Ue="[object Int8Array]",Ee="[object Int16Array]",ze="[object Int32Array]",Xe="[object Uint8Array]",ke="[object Uint8ClampedArray]",st="[object Uint16Array]",St="[object Uint32Array]",Tt=/\b__p \+= '';/g,mt=/\b(__p \+=) '' \+/g,bt=/(__e\(.*?\)|\b__t\)) \+\n'';/g,B=/&(?:amp|lt|gt|quot|#39);/g,Ne=/[&<>"']/g,Oe=RegExp(B.source),Ze=RegExp(Ne.source),Qe=/<%-([\s\S]+?)%>/g,Rt=/<%([\s\S]+?)%>/g,It=/<%=([\s\S]+?)%>/g,ln=/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,zn=/^\w*$/,Ft=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,cn=/[\\^$.*+?()[\]{}|]/g,li=RegExp(cn.source),Ls=/^\s+/,Bu=/\s/,Ps=/\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/,el=/\{\n\/\* \[wrapped with (.+)\] \*/,Is=/,? & /,tl=/[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g,nl=/[()=,{}\[\]\/\s]/,zu=/\\(\\)?/g,ku=/\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g,il=/\w*$/,D=/^[-+]0x[0-9a-f]+$/i,K=/^0b[01]+$/i,le=/^\[object .+?Constructor\]$/,fe=/^0o[0-7]+$/i,ae=/^(?:0|[1-9]\d*)$/,We=/[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g,Je=/($^)/,tt=/['\n\r\u2028\u2029\\]/g,nt="\\ud800-\\udfff",ft="\\u0300-\\u036f",ot="\\ufe20-\\ufe2f",ct="\\u20d0-\\u20ff",Xt=ft+ot+ct,bn="\\u2700-\\u27bf",en="a-z\\xdf-\\xf6\\xf8-\\xff",yi="\\xac\\xb1\\xd7\\xf7",Ht="\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf",gt="\\u2000-\\u206f",ka=" \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000",Vt="A-Z\\xc0-\\xd6\\xd8-\\xde",Di="\\ufe0e\\ufe0f",Ga=yi+Ht+gt+ka,Wi="['’]",Ha="["+nt+"]",un="["+Ga+"]",ci="["+Xt+"]",Ds="\\d+",kn="["+bn+"]",Us="["+en+"]",rl="[^"+nt+Ga+Ds+bn+en+Vt+"]",Ns="\\ud83c[\\udffb-\\udfff]",Ny="(?:"+ci+"|"+Ns+")",Lp="[^"+nt+"]",Gu="(?:\\ud83c[\\udde6-\\uddff]){2}",Hu="[\\ud800-\\udbff][\\udc00-\\udfff]",Os="["+Vt+"]",Pp="\\u200d",Ip="(?:"+Us+"|"+rl+")",Oy="(?:"+Os+"|"+rl+")",Dp="(?:"+Wi+"(?:d|ll|m|re|s|t|ve))?",Up="(?:"+Wi+"(?:D|LL|M|RE|S|T|VE))?",Np=Ny+"?",Op="["+Di+"]?",Fy="(?:"+Pp+"(?:"+[Lp,Gu,Hu].join("|")+")"+Op+Np+")*",By="\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])",zy="\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])",Fp=Op+Np+Fy,ky="(?:"+[kn,Gu,Hu].join("|")+")"+Fp,Gy="(?:"+[Lp+ci+"?",ci,Gu,Hu,Ha].join("|")+")",Hy=RegExp(Wi,"g"),Vy=RegExp(ci,"g"),Vu=RegExp(Ns+"(?="+Ns+")|"+Gy+Fp,"g"),Wy=RegExp([Os+"?"+Us+"+"+Dp+"(?="+[un,Os,"$"].join("|")+")",Oy+"+"+Up+"(?="+[un,Os+Ip,"$"].join("|")+")",Os+"?"+Ip+"+"+Dp,Os+"+"+Up,zy,By,Ds,ky].join("|"),"g"),Xy=RegExp("["+Pp+nt+Xt+Di+"]"),qy=/[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/,Yy=["Array","Buffer","DataView","Date","Error","Float32Array","Float64Array","Function","Int8Array","Int16Array","Int32Array","Map","Math","Object","Promise","RegExp","Set","String","Symbol","TypeError","Uint8Array","Uint8ClampedArray","Uint16Array","Uint32Array","WeakMap","_","clearTimeout","isFinite","parseInt","setTimeout"],$y=-1,Wt={};Wt[Fe]=Wt[q]=Wt[Ue]=Wt[Ee]=Wt[ze]=Wt[Xe]=Wt[ke]=Wt[st]=Wt[St]=!0,Wt[Pe]=Wt[Ge]=Wt[pe]=Wt[Z]=Wt[_e]=Wt[$]=Wt[me]=Wt[I]=Wt[J]=Wt[ee]=Wt[Ce]=Wt[A]=Wt[k]=Wt[ie]=Wt[oe]=!1;var kt={};kt[Pe]=kt[Ge]=kt[pe]=kt[_e]=kt[Z]=kt[$]=kt[Fe]=kt[q]=kt[Ue]=kt[Ee]=kt[ze]=kt[J]=kt[ee]=kt[Ce]=kt[A]=kt[k]=kt[ie]=kt[te]=kt[Xe]=kt[ke]=kt[st]=kt[St]=!0,kt[me]=kt[I]=kt[oe]=!1;var Zy={À:"A",Á:"A",Â:"A",Ã:"A",Ä:"A",Å:"A",à:"a",á:"a",â:"a",ã:"a",ä:"a",å:"a",Ç:"C",ç:"c",Ð:"D",ð:"d",È:"E",É:"E",Ê:"E",Ë:"E",è:"e",é:"e",ê:"e",ë:"e",Ì:"I",Í:"I",Î:"I",Ï:"I",ì:"i",í:"i",î:"i",ï:"i",Ñ:"N",ñ:"n",Ò:"O",Ó:"O",Ô:"O",Õ:"O",Ö:"O",Ø:"O",ò:"o",ó:"o",ô:"o",õ:"o",ö:"o",ø:"o",Ù:"U",Ú:"U",Û:"U",Ü:"U",ù:"u",ú:"u",û:"u",ü:"u",Ý:"Y",ý:"y",ÿ:"y",Æ:"Ae",æ:"ae",Þ:"Th",þ:"th",ß:"ss",Ā:"A",Ă:"A",Ą:"A",ā:"a",ă:"a",ą:"a",Ć:"C",Ĉ:"C",Ċ:"C",Č:"C",ć:"c",ĉ:"c",ċ:"c",č:"c",Ď:"D",Đ:"D",ď:"d",đ:"d",Ē:"E",Ĕ:"E",Ė:"E",Ę:"E",Ě:"E",ē:"e",ĕ:"e",ė:"e",ę:"e",ě:"e",Ĝ:"G",Ğ:"G",Ġ:"G",Ģ:"G",ĝ:"g",ğ:"g",ġ:"g",ģ:"g",Ĥ:"H",Ħ:"H",ĥ:"h",ħ:"h",Ĩ:"I",Ī:"I",Ĭ:"I",Į:"I",İ:"I",ĩ:"i",ī:"i",ĭ:"i",į:"i",ı:"i",Ĵ:"J",ĵ:"j",Ķ:"K",ķ:"k",ĸ:"k",Ĺ:"L",Ļ:"L",Ľ:"L",Ŀ:"L",Ł:"L",ĺ:"l",ļ:"l",ľ:"l",ŀ:"l",ł:"l",Ń:"N",Ņ:"N",Ň:"N",Ŋ:"N",ń:"n",ņ:"n",ň:"n",ŋ:"n",Ō:"O",Ŏ:"O",Ő:"O",ō:"o",ŏ:"o",ő:"o",Ŕ:"R",Ŗ:"R",Ř:"R",ŕ:"r",ŗ:"r",ř:"r",Ś:"S",Ŝ:"S",Ş:"S",Š:"S",ś:"s",ŝ:"s",ş:"s",š:"s",Ţ:"T",Ť:"T",Ŧ:"T",ţ:"t",ť:"t",ŧ:"t",Ũ:"U",Ū:"U",Ŭ:"U",Ů:"U",Ű:"U",Ų:"U",ũ:"u",ū:"u",ŭ:"u",ů:"u",ű:"u",ų:"u",Ŵ:"W",ŵ:"w",Ŷ:"Y",ŷ:"y",Ÿ:"Y",Ź:"Z",Ż:"Z",Ž:"Z",ź:"z",ż:"z",ž:"z",Ĳ:"IJ",ĳ:"ij",Œ:"Oe",œ:"oe",ŉ:"'n",ſ:"s"},Jy={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#39;"},Ky={"&amp;":"&","&lt;":"<","&gt;":">","&quot;":'"',"&#39;":"'"},jy={"\\":"\\","'":"'","\n":"n","\r":"r","\u2028":"u2028","\u2029":"u2029"},Qy=parseFloat,eb=parseInt,Bp=typeof ri=="object"&&ri&&ri.Object===Object&&ri,tb=typeof self=="object"&&self&&self.Object===Object&&self,vn=Bp||tb||Function("return this")(),Wu=e&&!e.nodeType&&e,Xr=Wu&&!0&&r&&!r.nodeType&&r,zp=Xr&&Xr.exports===Wu,Xu=zp&&Bp.process,ui=function(){try{var W=Xr&&Xr.require&&Xr.require("util").types;return W||Xu&&Xu.binding&&Xu.binding("util")}catch{}}(),kp=ui&&ui.isArrayBuffer,Gp=ui&&ui.isDate,Hp=ui&&ui.isMap,Vp=ui&&ui.isRegExp,Wp=ui&&ui.isSet,Xp=ui&&ui.isTypedArray;function Jn(W,ye,ce){switch(ce.length){case 0:return W.call(ye);case 1:return W.call(ye,ce[0]);case 2:return W.call(ye,ce[0],ce[1]);case 3:return W.call(ye,ce[0],ce[1],ce[2])}return W.apply(ye,ce)}function nb(W,ye,ce,Ye){for(var lt=-1,Lt=W==null?0:W.length;++lt<Lt;){var hn=W[lt];ye(Ye,hn,ce(hn),W)}return Ye}function hi(W,ye){for(var ce=-1,Ye=W==null?0:W.length;++ce<Ye&&ye(W[ce],ce,W)!==!1;);return W}function ib(W,ye){for(var ce=W==null?0:W.length;ce--&&ye(W[ce],ce,W)!==!1;);return W}function qp(W,ye){for(var ce=-1,Ye=W==null?0:W.length;++ce<Ye;)if(!ye(W[ce],ce,W))return!1;return!0}function _r(W,ye){for(var ce=-1,Ye=W==null?0:W.length,lt=0,Lt=[];++ce<Ye;){var hn=W[ce];ye(hn,ce,W)&&(Lt[lt++]=hn)}return Lt}function sl(W,ye){var ce=W==null?0:W.length;return!!ce&&Fs(W,ye,0)>-1}function qu(W,ye,ce){for(var Ye=-1,lt=W==null?0:W.length;++Ye<lt;)if(ce(ye,W[Ye]))return!0;return!1}function qt(W,ye){for(var ce=-1,Ye=W==null?0:W.length,lt=Array(Ye);++ce<Ye;)lt[ce]=ye(W[ce],ce,W);return lt}function vr(W,ye){for(var ce=-1,Ye=ye.length,lt=W.length;++ce<Ye;)W[lt+ce]=ye[ce];return W}function Yu(W,ye,ce,Ye){var lt=-1,Lt=W==null?0:W.length;for(Ye&&Lt&&(ce=W[++lt]);++lt<Lt;)ce=ye(ce,W[lt],lt,W);return ce}function rb(W,ye,ce,Ye){var lt=W==null?0:W.length;for(Ye&&lt&&(ce=W[--lt]);lt--;)ce=ye(ce,W[lt],lt,W);return ce}function $u(W,ye){for(var ce=-1,Ye=W==null?0:W.length;++ce<Ye;)if(ye(W[ce],ce,W))return!0;return!1}var sb=Zu("length");function ab(W){return W.split("")}function ob(W){return W.match(tl)||[]}function Yp(W,ye,ce){var Ye;return ce(W,function(lt,Lt,hn){if(ye(lt,Lt,hn))return Ye=Lt,!1}),Ye}function al(W,ye,ce,Ye){for(var lt=W.length,Lt=ce+(Ye?1:-1);Ye?Lt--:++Lt<lt;)if(ye(W[Lt],Lt,W))return Lt;return-1}function Fs(W,ye,ce){return ye===ye?xb(W,ye,ce):al(W,$p,ce)}function lb(W,ye,ce,Ye){for(var lt=ce-1,Lt=W.length;++lt<Lt;)if(Ye(W[lt],ye))return lt;return-1}function $p(W){return W!==W}function Zp(W,ye){var ce=W==null?0:W.length;return ce?Ku(W,ye)/ce:Ie}function Zu(W){return function(ye){return ye==null?t:ye[W]}}function Ju(W){return function(ye){return W==null?t:W[ye]}}function Jp(W,ye,ce,Ye,lt){return lt(W,function(Lt,hn,zt){ce=Ye?(Ye=!1,Lt):ye(ce,Lt,hn,zt)}),ce}function cb(W,ye){var ce=W.length;for(W.sort(ye);ce--;)W[ce]=W[ce].value;return W}function Ku(W,ye){for(var ce,Ye=-1,lt=W.length;++Ye<lt;){var Lt=ye(W[Ye]);Lt!==t&&(ce=ce===t?Lt:ce+Lt)}return ce}function ju(W,ye){for(var ce=-1,Ye=Array(W);++ce<W;)Ye[ce]=ye(ce);return Ye}function ub(W,ye){return qt(ye,function(ce){return[ce,W[ce]]})}function Kp(W){return W&&W.slice(0,tm(W)+1).replace(Ls,"")}function Kn(W){return function(ye){return W(ye)}}function Qu(W,ye){return qt(ye,function(ce){return W[ce]})}function Va(W,ye){return W.has(ye)}function jp(W,ye){for(var ce=-1,Ye=W.length;++ce<Ye&&Fs(ye,W[ce],0)>-1;);return ce}function Qp(W,ye){for(var ce=W.length;ce--&&Fs(ye,W[ce],0)>-1;);return ce}function hb(W,ye){for(var ce=W.length,Ye=0;ce--;)W[ce]===ye&&++Ye;return Ye}var fb=Ju(Zy),db=Ju(Jy);function pb(W){return"\\"+jy[W]}function mb(W,ye){return W==null?t:W[ye]}function Bs(W){return Xy.test(W)}function gb(W){return qy.test(W)}function _b(W){for(var ye,ce=[];!(ye=W.next()).done;)ce.push(ye.value);return ce}function eh(W){var ye=-1,ce=Array(W.size);return W.forEach(function(Ye,lt){ce[++ye]=[lt,Ye]}),ce}function em(W,ye){return function(ce){return W(ye(ce))}}function xr(W,ye){for(var ce=-1,Ye=W.length,lt=0,Lt=[];++ce<Ye;){var hn=W[ce];(hn===ye||hn===p)&&(W[ce]=p,Lt[lt++]=ce)}return Lt}function ol(W){var ye=-1,ce=Array(W.size);return W.forEach(function(Ye){ce[++ye]=Ye}),ce}function vb(W){var ye=-1,ce=Array(W.size);return W.forEach(function(Ye){ce[++ye]=[Ye,Ye]}),ce}function xb(W,ye,ce){for(var Ye=ce-1,lt=W.length;++Ye<lt;)if(W[Ye]===ye)return Ye;return-1}function yb(W,ye,ce){for(var Ye=ce+1;Ye--;)if(W[Ye]===ye)return Ye;return Ye}function zs(W){return Bs(W)?Mb(W):sb(W)}function bi(W){return Bs(W)?Sb(W):ab(W)}function tm(W){for(var ye=W.length;ye--&&Bu.test(W.charAt(ye)););return ye}var bb=Ju(Ky);function Mb(W){for(var ye=Vu.lastIndex=0;Vu.test(W);)++ye;return ye}function Sb(W){return W.match(Vu)||[]}function wb(W){return W.match(Wy)||[]}var Eb=function W(ye){ye=ye==null?vn:ks.defaults(vn.Object(),ye,ks.pick(vn,Yy));var ce=ye.Array,Ye=ye.Date,lt=ye.Error,Lt=ye.Function,hn=ye.Math,zt=ye.Object,th=ye.RegExp,Ab=ye.String,fi=ye.TypeError,ll=ce.prototype,Tb=Lt.prototype,Gs=zt.prototype,cl=ye["__core-js_shared__"],ul=Tb.toString,Dt=Gs.hasOwnProperty,Cb=0,nm=function(){var a=/[^.]+$/.exec(cl&&cl.keys&&cl.keys.IE_PROTO||"");return a?"Symbol(src)_1."+a:""}(),hl=Gs.toString,Rb=ul.call(zt),Lb=vn._,Pb=th("^"+ul.call(Dt).replace(cn,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$"),fl=zp?ye.Buffer:t,yr=ye.Symbol,dl=ye.Uint8Array,im=fl?fl.allocUnsafe:t,pl=em(zt.getPrototypeOf,zt),rm=zt.create,sm=Gs.propertyIsEnumerable,ml=ll.splice,am=yr?yr.isConcatSpreadable:t,Wa=yr?yr.iterator:t,qr=yr?yr.toStringTag:t,gl=function(){try{var a=Kr(zt,"defineProperty");return a({},"",{}),a}catch{}}(),Ib=ye.clearTimeout!==vn.clearTimeout&&ye.clearTimeout,Db=Ye&&Ye.now!==vn.Date.now&&Ye.now,Ub=ye.setTimeout!==vn.setTimeout&&ye.setTimeout,_l=hn.ceil,vl=hn.floor,nh=zt.getOwnPropertySymbols,Nb=fl?fl.isBuffer:t,om=ye.isFinite,Ob=ll.join,Fb=em(zt.keys,zt),fn=hn.max,Mn=hn.min,Bb=Ye.now,zb=ye.parseInt,lm=hn.random,kb=ll.reverse,ih=Kr(ye,"DataView"),Xa=Kr(ye,"Map"),rh=Kr(ye,"Promise"),Hs=Kr(ye,"Set"),qa=Kr(ye,"WeakMap"),Ya=Kr(zt,"create"),xl=qa&&new qa,Vs={},Gb=jr(ih),Hb=jr(Xa),Vb=jr(rh),Wb=jr(Hs),Xb=jr(qa),yl=yr?yr.prototype:t,$a=yl?yl.valueOf:t,cm=yl?yl.toString:t;function C(a){if(Jt(a)&&!ut(a)&&!(a instanceof wt)){if(a instanceof di)return a;if(Dt.call(a,"__wrapped__"))return ug(a)}return new di(a)}var Ws=function(){function a(){}return function(l){if(!Yt(l))return{};if(rm)return rm(l);a.prototype=l;var f=new a;return a.prototype=t,f}}();function bl(){}function di(a,l){this.__wrapped__=a,this.__actions__=[],this.__chain__=!!l,this.__index__=0,this.__values__=t}C.templateSettings={escape:Qe,evaluate:Rt,interpolate:It,variable:"",imports:{_:C}},C.prototype=bl.prototype,C.prototype.constructor=C,di.prototype=Ws(bl.prototype),di.prototype.constructor=di;function wt(a){this.__wrapped__=a,this.__actions__=[],this.__dir__=1,this.__filtered__=!1,this.__iteratees__=[],this.__takeCount__=Se,this.__views__=[]}function qb(){var a=new wt(this.__wrapped__);return a.__actions__=Gn(this.__actions__),a.__dir__=this.__dir__,a.__filtered__=this.__filtered__,a.__iteratees__=Gn(this.__iteratees__),a.__takeCount__=this.__takeCount__,a.__views__=Gn(this.__views__),a}function Yb(){if(this.__filtered__){var a=new wt(this);a.__dir__=-1,a.__filtered__=!0}else a=this.clone(),a.__dir__*=-1;return a}function $b(){var a=this.__wrapped__.value(),l=this.__dir__,f=ut(a),b=l<0,S=f?a.length:0,L=aS(0,S,this.__views__),z=L.start,G=L.end,Y=G-z,we=b?G:z-1,Ae=this.__iteratees__,De=Ae.length,He=0,Ke=Mn(Y,this.__takeCount__);if(!f||!b&&S==Y&&Ke==Y)return Dm(a,this.__actions__);var it=[];e:for(;Y--&&He<Ke;){we+=l;for(var _t=-1,rt=a[we];++_t<De;){var Mt=Ae[_t],Et=Mt.iteratee,ei=Mt.type,In=Et(rt);if(ei==re)rt=In;else if(!In){if(ei==H)continue e;break e}}it[He++]=rt}return it}wt.prototype=Ws(bl.prototype),wt.prototype.constructor=wt;function Yr(a){var l=-1,f=a==null?0:a.length;for(this.clear();++l<f;){var b=a[l];this.set(b[0],b[1])}}function Zb(){this.__data__=Ya?Ya(null):{},this.size=0}function Jb(a){var l=this.has(a)&&delete this.__data__[a];return this.size-=l?1:0,l}function Kb(a){var l=this.__data__;if(Ya){var f=l[a];return f===u?t:f}return Dt.call(l,a)?l[a]:t}function jb(a){var l=this.__data__;return Ya?l[a]!==t:Dt.call(l,a)}function Qb(a,l){var f=this.__data__;return this.size+=this.has(a)?0:1,f[a]=Ya&&l===t?u:l,this}Yr.prototype.clear=Zb,Yr.prototype.delete=Jb,Yr.prototype.get=Kb,Yr.prototype.has=jb,Yr.prototype.set=Qb;function Xi(a){var l=-1,f=a==null?0:a.length;for(this.clear();++l<f;){var b=a[l];this.set(b[0],b[1])}}function eM(){this.__data__=[],this.size=0}function tM(a){var l=this.__data__,f=Ml(l,a);if(f<0)return!1;var b=l.length-1;return f==b?l.pop():ml.call(l,f,1),--this.size,!0}function nM(a){var l=this.__data__,f=Ml(l,a);return f<0?t:l[f][1]}function iM(a){return Ml(this.__data__,a)>-1}function rM(a,l){var f=this.__data__,b=Ml(f,a);return b<0?(++this.size,f.push([a,l])):f[b][1]=l,this}Xi.prototype.clear=eM,Xi.prototype.delete=tM,Xi.prototype.get=nM,Xi.prototype.has=iM,Xi.prototype.set=rM;function qi(a){var l=-1,f=a==null?0:a.length;for(this.clear();++l<f;){var b=a[l];this.set(b[0],b[1])}}function sM(){this.size=0,this.__data__={hash:new Yr,map:new(Xa||Xi),string:new Yr}}function aM(a){var l=Ul(this,a).delete(a);return this.size-=l?1:0,l}function oM(a){return Ul(this,a).get(a)}function lM(a){return Ul(this,a).has(a)}function cM(a,l){var f=Ul(this,a),b=f.size;return f.set(a,l),this.size+=f.size==b?0:1,this}qi.prototype.clear=sM,qi.prototype.delete=aM,qi.prototype.get=oM,qi.prototype.has=lM,qi.prototype.set=cM;function $r(a){var l=-1,f=a==null?0:a.length;for(this.__data__=new qi;++l<f;)this.add(a[l])}function uM(a){return this.__data__.set(a,u),this}function hM(a){return this.__data__.has(a)}$r.prototype.add=$r.prototype.push=uM,$r.prototype.has=hM;function Mi(a){var l=this.__data__=new Xi(a);this.size=l.size}function fM(){this.__data__=new Xi,this.size=0}function dM(a){var l=this.__data__,f=l.delete(a);return this.size=l.size,f}function pM(a){return this.__data__.get(a)}function mM(a){return this.__data__.has(a)}function gM(a,l){var f=this.__data__;if(f instanceof Xi){var b=f.__data__;if(!Xa||b.length<i-1)return b.push([a,l]),this.size=++f.size,this;f=this.__data__=new qi(b)}return f.set(a,l),this.size=f.size,this}Mi.prototype.clear=fM,Mi.prototype.delete=dM,Mi.prototype.get=pM,Mi.prototype.has=mM,Mi.prototype.set=gM;function um(a,l){var f=ut(a),b=!f&&Qr(a),S=!f&&!b&&Er(a),L=!f&&!b&&!S&&$s(a),z=f||b||S||L,G=z?ju(a.length,Ab):[],Y=G.length;for(var we in a)(l||Dt.call(a,we))&&!(z&&(we=="length"||S&&(we=="offset"||we=="parent")||L&&(we=="buffer"||we=="byteLength"||we=="byteOffset")||Ji(we,Y)))&&G.push(we);return G}function hm(a){var l=a.length;return l?a[mh(0,l-1)]:t}function _M(a,l){return Nl(Gn(a),Zr(l,0,a.length))}function vM(a){return Nl(Gn(a))}function sh(a,l,f){(f!==t&&!Si(a[l],f)||f===t&&!(l in a))&&Yi(a,l,f)}function Za(a,l,f){var b=a[l];(!(Dt.call(a,l)&&Si(b,f))||f===t&&!(l in a))&&Yi(a,l,f)}function Ml(a,l){for(var f=a.length;f--;)if(Si(a[f][0],l))return f;return-1}function xM(a,l,f,b){return br(a,function(S,L,z){l(b,S,f(S),z)}),b}function fm(a,l){return a&&Ni(l,gn(l),a)}function yM(a,l){return a&&Ni(l,Vn(l),a)}function Yi(a,l,f){l=="__proto__"&&gl?gl(a,l,{configurable:!0,enumerable:!0,value:f,writable:!0}):a[l]=f}function ah(a,l){for(var f=-1,b=l.length,S=ce(b),L=a==null;++f<b;)S[f]=L?t:kh(a,l[f]);return S}function Zr(a,l,f){return a===a&&(f!==t&&(a=a<=f?a:f),l!==t&&(a=a>=l?a:l)),a}function pi(a,l,f,b,S,L){var z,G=l&g,Y=l&d,we=l&m;if(f&&(z=S?f(a,b,S,L):f(a)),z!==t)return z;if(!Yt(a))return a;var Ae=ut(a);if(Ae){if(z=lS(a),!G)return Gn(a,z)}else{var De=Sn(a),He=De==I||De==ge;if(Er(a))return Om(a,G);if(De==Ce||De==Pe||He&&!S){if(z=Y||He?{}:tg(a),!G)return Y?KM(a,yM(z,a)):JM(a,fm(z,a))}else{if(!kt[De])return S?a:{};z=cS(a,De,G)}}L||(L=new Mi);var Ke=L.get(a);if(Ke)return Ke;L.set(a,z),Lg(a)?a.forEach(function(rt){z.add(pi(rt,l,f,rt,a,L))}):Cg(a)&&a.forEach(function(rt,Mt){z.set(Mt,pi(rt,l,f,Mt,a,L))});var it=we?Y?Ah:Eh:Y?Vn:gn,_t=Ae?t:it(a);return hi(_t||a,function(rt,Mt){_t&&(Mt=rt,rt=a[Mt]),Za(z,Mt,pi(rt,l,f,Mt,a,L))}),z}function bM(a){var l=gn(a);return function(f){return dm(f,a,l)}}function dm(a,l,f){var b=f.length;if(a==null)return!b;for(a=zt(a);b--;){var S=f[b],L=l[S],z=a[S];if(z===t&&!(S in a)||!L(z))return!1}return!0}function pm(a,l,f){if(typeof a!="function")throw new fi(o);return no(function(){a.apply(t,f)},l)}function Ja(a,l,f,b){var S=-1,L=sl,z=!0,G=a.length,Y=[],we=l.length;if(!G)return Y;f&&(l=qt(l,Kn(f))),b?(L=qu,z=!1):l.length>=i&&(L=Va,z=!1,l=new $r(l));e:for(;++S<G;){var Ae=a[S],De=f==null?Ae:f(Ae);if(Ae=b||Ae!==0?Ae:0,z&&De===De){for(var He=we;He--;)if(l[He]===De)continue e;Y.push(Ae)}else L(l,De,b)||Y.push(Ae)}return Y}var br=Gm(Ui),mm=Gm(lh,!0);function MM(a,l){var f=!0;return br(a,function(b,S,L){return f=!!l(b,S,L),f}),f}function Sl(a,l,f){for(var b=-1,S=a.length;++b<S;){var L=a[b],z=l(L);if(z!=null&&(G===t?z===z&&!Qn(z):f(z,G)))var G=z,Y=L}return Y}function SM(a,l,f,b){var S=a.length;for(f=dt(f),f<0&&(f=-f>S?0:S+f),b=b===t||b>S?S:dt(b),b<0&&(b+=S),b=f>b?0:Ig(b);f<b;)a[f++]=l;return a}function gm(a,l){var f=[];return br(a,function(b,S,L){l(b,S,L)&&f.push(b)}),f}function xn(a,l,f,b,S){var L=-1,z=a.length;for(f||(f=hS),S||(S=[]);++L<z;){var G=a[L];l>0&&f(G)?l>1?xn(G,l-1,f,b,S):vr(S,G):b||(S[S.length]=G)}return S}var oh=Hm(),_m=Hm(!0);function Ui(a,l){return a&&oh(a,l,gn)}function lh(a,l){return a&&_m(a,l,gn)}function wl(a,l){return _r(l,function(f){return Ki(a[f])})}function Jr(a,l){l=Sr(l,a);for(var f=0,b=l.length;a!=null&&f<b;)a=a[Oi(l[f++])];return f&&f==b?a:t}function vm(a,l,f){var b=l(a);return ut(a)?b:vr(b,f(a))}function Ln(a){return a==null?a===t?de:j:qr&&qr in zt(a)?sS(a):vS(a)}function ch(a,l){return a>l}function wM(a,l){return a!=null&&Dt.call(a,l)}function EM(a,l){return a!=null&&l in zt(a)}function AM(a,l,f){return a>=Mn(l,f)&&a<fn(l,f)}function uh(a,l,f){for(var b=f?qu:sl,S=a[0].length,L=a.length,z=L,G=ce(L),Y=1/0,we=[];z--;){var Ae=a[z];z&&l&&(Ae=qt(Ae,Kn(l))),Y=Mn(Ae.length,Y),G[z]=!f&&(l||S>=120&&Ae.length>=120)?new $r(z&&Ae):t}Ae=a[0];var De=-1,He=G[0];e:for(;++De<S&&we.length<Y;){var Ke=Ae[De],it=l?l(Ke):Ke;if(Ke=f||Ke!==0?Ke:0,!(He?Va(He,it):b(we,it,f))){for(z=L;--z;){var _t=G[z];if(!(_t?Va(_t,it):b(a[z],it,f)))continue e}He&&He.push(it),we.push(Ke)}}return we}function TM(a,l,f,b){return Ui(a,function(S,L,z){l(b,f(S),L,z)}),b}function Ka(a,l,f){l=Sr(l,a),a=sg(a,l);var b=a==null?a:a[Oi(gi(l))];return b==null?t:Jn(b,a,f)}function xm(a){return Jt(a)&&Ln(a)==Pe}function CM(a){return Jt(a)&&Ln(a)==pe}function RM(a){return Jt(a)&&Ln(a)==$}function ja(a,l,f,b,S){return a===l?!0:a==null||l==null||!Jt(a)&&!Jt(l)?a!==a&&l!==l:LM(a,l,f,b,ja,S)}function LM(a,l,f,b,S,L){var z=ut(a),G=ut(l),Y=z?Ge:Sn(a),we=G?Ge:Sn(l);Y=Y==Pe?Ce:Y,we=we==Pe?Ce:we;var Ae=Y==Ce,De=we==Ce,He=Y==we;if(He&&Er(a)){if(!Er(l))return!1;z=!0,Ae=!1}if(He&&!Ae)return L||(L=new Mi),z||$s(a)?jm(a,l,f,b,S,L):iS(a,l,Y,f,b,S,L);if(!(f&_)){var Ke=Ae&&Dt.call(a,"__wrapped__"),it=De&&Dt.call(l,"__wrapped__");if(Ke||it){var _t=Ke?a.value():a,rt=it?l.value():l;return L||(L=new Mi),S(_t,rt,f,b,L)}}return He?(L||(L=new Mi),rS(a,l,f,b,S,L)):!1}function PM(a){return Jt(a)&&Sn(a)==J}function hh(a,l,f,b){var S=f.length,L=S,z=!b;if(a==null)return!L;for(a=zt(a);S--;){var G=f[S];if(z&&G[2]?G[1]!==a[G[0]]:!(G[0]in a))return!1}for(;++S<L;){G=f[S];var Y=G[0],we=a[Y],Ae=G[1];if(z&&G[2]){if(we===t&&!(Y in a))return!1}else{var De=new Mi;if(b)var He=b(we,Ae,Y,a,l,De);if(!(He===t?ja(Ae,we,_|y,b,De):He))return!1}}return!0}function ym(a){if(!Yt(a)||dS(a))return!1;var l=Ki(a)?Pb:le;return l.test(jr(a))}function IM(a){return Jt(a)&&Ln(a)==A}function DM(a){return Jt(a)&&Sn(a)==k}function UM(a){return Jt(a)&&Gl(a.length)&&!!Wt[Ln(a)]}function bm(a){return typeof a=="function"?a:a==null?Wn:typeof a=="object"?ut(a)?wm(a[0],a[1]):Sm(a):Vg(a)}function fh(a){if(!to(a))return Fb(a);var l=[];for(var f in zt(a))Dt.call(a,f)&&f!="constructor"&&l.push(f);return l}function NM(a){if(!Yt(a))return _S(a);var l=to(a),f=[];for(var b in a)b=="constructor"&&(l||!Dt.call(a,b))||f.push(b);return f}function dh(a,l){return a<l}function Mm(a,l){var f=-1,b=Hn(a)?ce(a.length):[];return br(a,function(S,L,z){b[++f]=l(S,L,z)}),b}function Sm(a){var l=Ch(a);return l.length==1&&l[0][2]?ig(l[0][0],l[0][1]):function(f){return f===a||hh(f,a,l)}}function wm(a,l){return Lh(a)&&ng(l)?ig(Oi(a),l):function(f){var b=kh(f,a);return b===t&&b===l?Gh(f,a):ja(l,b,_|y)}}function El(a,l,f,b,S){a!==l&&oh(l,function(L,z){if(S||(S=new Mi),Yt(L))OM(a,l,z,f,El,b,S);else{var G=b?b(Ih(a,z),L,z+"",a,l,S):t;G===t&&(G=L),sh(a,z,G)}},Vn)}function OM(a,l,f,b,S,L,z){var G=Ih(a,f),Y=Ih(l,f),we=z.get(Y);if(we){sh(a,f,we);return}var Ae=L?L(G,Y,f+"",a,l,z):t,De=Ae===t;if(De){var He=ut(Y),Ke=!He&&Er(Y),it=!He&&!Ke&&$s(Y);Ae=Y,He||Ke||it?ut(G)?Ae=G:tn(G)?Ae=Gn(G):Ke?(De=!1,Ae=Om(Y,!0)):it?(De=!1,Ae=Fm(Y,!0)):Ae=[]:io(Y)||Qr(Y)?(Ae=G,Qr(G)?Ae=Dg(G):(!Yt(G)||Ki(G))&&(Ae=tg(Y))):De=!1}De&&(z.set(Y,Ae),S(Ae,Y,b,L,z),z.delete(Y)),sh(a,f,Ae)}function Em(a,l){var f=a.length;if(f)return l+=l<0?f:0,Ji(l,f)?a[l]:t}function Am(a,l,f){l.length?l=qt(l,function(L){return ut(L)?function(z){return Jr(z,L.length===1?L[0]:L)}:L}):l=[Wn];var b=-1;l=qt(l,Kn(et()));var S=Mm(a,function(L,z,G){var Y=qt(l,function(we){return we(L)});return{criteria:Y,index:++b,value:L}});return cb(S,function(L,z){return ZM(L,z,f)})}function FM(a,l){return Tm(a,l,function(f,b){return Gh(a,b)})}function Tm(a,l,f){for(var b=-1,S=l.length,L={};++b<S;){var z=l[b],G=Jr(a,z);f(G,z)&&Qa(L,Sr(z,a),G)}return L}function BM(a){return function(l){return Jr(l,a)}}function ph(a,l,f,b){var S=b?lb:Fs,L=-1,z=l.length,G=a;for(a===l&&(l=Gn(l)),f&&(G=qt(a,Kn(f)));++L<z;)for(var Y=0,we=l[L],Ae=f?f(we):we;(Y=S(G,Ae,Y,b))>-1;)G!==a&&ml.call(G,Y,1),ml.call(a,Y,1);return a}function Cm(a,l){for(var f=a?l.length:0,b=f-1;f--;){var S=l[f];if(f==b||S!==L){var L=S;Ji(S)?ml.call(a,S,1):vh(a,S)}}return a}function mh(a,l){return a+vl(lm()*(l-a+1))}function zM(a,l,f,b){for(var S=-1,L=fn(_l((l-a)/(f||1)),0),z=ce(L);L--;)z[b?L:++S]=a,a+=f;return z}function gh(a,l){var f="";if(!a||l<1||l>ve)return f;do l%2&&(f+=a),l=vl(l/2),l&&(a+=a);while(l);return f}function yt(a,l){return Dh(rg(a,l,Wn),a+"")}function kM(a){return hm(Zs(a))}function GM(a,l){var f=Zs(a);return Nl(f,Zr(l,0,f.length))}function Qa(a,l,f,b){if(!Yt(a))return a;l=Sr(l,a);for(var S=-1,L=l.length,z=L-1,G=a;G!=null&&++S<L;){var Y=Oi(l[S]),we=f;if(Y==="__proto__"||Y==="constructor"||Y==="prototype")return a;if(S!=z){var Ae=G[Y];we=b?b(Ae,Y,G):t,we===t&&(we=Yt(Ae)?Ae:Ji(l[S+1])?[]:{})}Za(G,Y,we),G=G[Y]}return a}var Rm=xl?function(a,l){return xl.set(a,l),a}:Wn,HM=gl?function(a,l){return gl(a,"toString",{configurable:!0,enumerable:!1,value:Vh(l),writable:!0})}:Wn;function VM(a){return Nl(Zs(a))}function mi(a,l,f){var b=-1,S=a.length;l<0&&(l=-l>S?0:S+l),f=f>S?S:f,f<0&&(f+=S),S=l>f?0:f-l>>>0,l>>>=0;for(var L=ce(S);++b<S;)L[b]=a[b+l];return L}function WM(a,l){var f;return br(a,function(b,S,L){return f=l(b,S,L),!f}),!!f}function Al(a,l,f){var b=0,S=a==null?b:a.length;if(typeof l=="number"&&l===l&&S<=je){for(;b<S;){var L=b+S>>>1,z=a[L];z!==null&&!Qn(z)&&(f?z<=l:z<l)?b=L+1:S=L}return S}return _h(a,l,Wn,f)}function _h(a,l,f,b){var S=0,L=a==null?0:a.length;if(L===0)return 0;l=f(l);for(var z=l!==l,G=l===null,Y=Qn(l),we=l===t;S<L;){var Ae=vl((S+L)/2),De=f(a[Ae]),He=De!==t,Ke=De===null,it=De===De,_t=Qn(De);if(z)var rt=b||it;else we?rt=it&&(b||He):G?rt=it&&He&&(b||!Ke):Y?rt=it&&He&&!Ke&&(b||!_t):Ke||_t?rt=!1:rt=b?De<=l:De<l;rt?S=Ae+1:L=Ae}return Mn(L,Ve)}function Lm(a,l){for(var f=-1,b=a.length,S=0,L=[];++f<b;){var z=a[f],G=l?l(z):z;if(!f||!Si(G,Y)){var Y=G;L[S++]=z===0?0:z}}return L}function Pm(a){return typeof a=="number"?a:Qn(a)?Ie:+a}function jn(a){if(typeof a=="string")return a;if(ut(a))return qt(a,jn)+"";if(Qn(a))return cm?cm.call(a):"";var l=a+"";return l=="0"&&1/a==-Me?"-0":l}function Mr(a,l,f){var b=-1,S=sl,L=a.length,z=!0,G=[],Y=G;if(f)z=!1,S=qu;else if(L>=i){var we=l?null:tS(a);if(we)return ol(we);z=!1,S=Va,Y=new $r}else Y=l?[]:G;e:for(;++b<L;){var Ae=a[b],De=l?l(Ae):Ae;if(Ae=f||Ae!==0?Ae:0,z&&De===De){for(var He=Y.length;He--;)if(Y[He]===De)continue e;l&&Y.push(De),G.push(Ae)}else S(Y,De,f)||(Y!==G&&Y.push(De),G.push(Ae))}return G}function vh(a,l){return l=Sr(l,a),a=sg(a,l),a==null||delete a[Oi(gi(l))]}function Im(a,l,f,b){return Qa(a,l,f(Jr(a,l)),b)}function Tl(a,l,f,b){for(var S=a.length,L=b?S:-1;(b?L--:++L<S)&&l(a[L],L,a););return f?mi(a,b?0:L,b?L+1:S):mi(a,b?L+1:0,b?S:L)}function Dm(a,l){var f=a;return f instanceof wt&&(f=f.value()),Yu(l,function(b,S){return S.func.apply(S.thisArg,vr([b],S.args))},f)}function xh(a,l,f){var b=a.length;if(b<2)return b?Mr(a[0]):[];for(var S=-1,L=ce(b);++S<b;)for(var z=a[S],G=-1;++G<b;)G!=S&&(L[S]=Ja(L[S]||z,a[G],l,f));return Mr(xn(L,1),l,f)}function Um(a,l,f){for(var b=-1,S=a.length,L=l.length,z={};++b<S;){var G=b<L?l[b]:t;f(z,a[b],G)}return z}function yh(a){return tn(a)?a:[]}function bh(a){return typeof a=="function"?a:Wn}function Sr(a,l){return ut(a)?a:Lh(a,l)?[a]:cg(Pt(a))}var XM=yt;function wr(a,l,f){var b=a.length;return f=f===t?b:f,!l&&f>=b?a:mi(a,l,f)}var Nm=Ib||function(a){return vn.clearTimeout(a)};function Om(a,l){if(l)return a.slice();var f=a.length,b=im?im(f):new a.constructor(f);return a.copy(b),b}function Mh(a){var l=new a.constructor(a.byteLength);return new dl(l).set(new dl(a)),l}function qM(a,l){var f=l?Mh(a.buffer):a.buffer;return new a.constructor(f,a.byteOffset,a.byteLength)}function YM(a){var l=new a.constructor(a.source,il.exec(a));return l.lastIndex=a.lastIndex,l}function $M(a){return $a?zt($a.call(a)):{}}function Fm(a,l){var f=l?Mh(a.buffer):a.buffer;return new a.constructor(f,a.byteOffset,a.length)}function Bm(a,l){if(a!==l){var f=a!==t,b=a===null,S=a===a,L=Qn(a),z=l!==t,G=l===null,Y=l===l,we=Qn(l);if(!G&&!we&&!L&&a>l||L&&z&&Y&&!G&&!we||b&&z&&Y||!f&&Y||!S)return 1;if(!b&&!L&&!we&&a<l||we&&f&&S&&!b&&!L||G&&f&&S||!z&&S||!Y)return-1}return 0}function ZM(a,l,f){for(var b=-1,S=a.criteria,L=l.criteria,z=S.length,G=f.length;++b<z;){var Y=Bm(S[b],L[b]);if(Y){if(b>=G)return Y;var we=f[b];return Y*(we=="desc"?-1:1)}}return a.index-l.index}function zm(a,l,f,b){for(var S=-1,L=a.length,z=f.length,G=-1,Y=l.length,we=fn(L-z,0),Ae=ce(Y+we),De=!b;++G<Y;)Ae[G]=l[G];for(;++S<z;)(De||S<L)&&(Ae[f[S]]=a[S]);for(;we--;)Ae[G++]=a[S++];return Ae}function km(a,l,f,b){for(var S=-1,L=a.length,z=-1,G=f.length,Y=-1,we=l.length,Ae=fn(L-G,0),De=ce(Ae+we),He=!b;++S<Ae;)De[S]=a[S];for(var Ke=S;++Y<we;)De[Ke+Y]=l[Y];for(;++z<G;)(He||S<L)&&(De[Ke+f[z]]=a[S++]);return De}function Gn(a,l){var f=-1,b=a.length;for(l||(l=ce(b));++f<b;)l[f]=a[f];return l}function Ni(a,l,f,b){var S=!f;f||(f={});for(var L=-1,z=l.length;++L<z;){var G=l[L],Y=b?b(f[G],a[G],G,f,a):t;Y===t&&(Y=a[G]),S?Yi(f,G,Y):Za(f,G,Y)}return f}function JM(a,l){return Ni(a,Rh(a),l)}function KM(a,l){return Ni(a,Qm(a),l)}function Cl(a,l){return function(f,b){var S=ut(f)?nb:xM,L=l?l():{};return S(f,a,et(b,2),L)}}function Xs(a){return yt(function(l,f){var b=-1,S=f.length,L=S>1?f[S-1]:t,z=S>2?f[2]:t;for(L=a.length>3&&typeof L=="function"?(S--,L):t,z&&Pn(f[0],f[1],z)&&(L=S<3?t:L,S=1),l=zt(l);++b<S;){var G=f[b];G&&a(l,G,b,L)}return l})}function Gm(a,l){return function(f,b){if(f==null)return f;if(!Hn(f))return a(f,b);for(var S=f.length,L=l?S:-1,z=zt(f);(l?L--:++L<S)&&b(z[L],L,z)!==!1;);return f}}function Hm(a){return function(l,f,b){for(var S=-1,L=zt(l),z=b(l),G=z.length;G--;){var Y=z[a?G:++S];if(f(L[Y],Y,L)===!1)break}return l}}function jM(a,l,f){var b=l&v,S=eo(a);function L(){var z=this&&this!==vn&&this instanceof L?S:a;return z.apply(b?f:this,arguments)}return L}function Vm(a){return function(l){l=Pt(l);var f=Bs(l)?bi(l):t,b=f?f[0]:l.charAt(0),S=f?wr(f,1).join(""):l.slice(1);return b[a]()+S}}function qs(a){return function(l){return Yu(Gg(kg(l).replace(Hy,"")),a,"")}}function eo(a){return function(){var l=arguments;switch(l.length){case 0:return new a;case 1:return new a(l[0]);case 2:return new a(l[0],l[1]);case 3:return new a(l[0],l[1],l[2]);case 4:return new a(l[0],l[1],l[2],l[3]);case 5:return new a(l[0],l[1],l[2],l[3],l[4]);case 6:return new a(l[0],l[1],l[2],l[3],l[4],l[5]);case 7:return new a(l[0],l[1],l[2],l[3],l[4],l[5],l[6])}var f=Ws(a.prototype),b=a.apply(f,l);return Yt(b)?b:f}}function QM(a,l,f){var b=eo(a);function S(){for(var L=arguments.length,z=ce(L),G=L,Y=Ys(S);G--;)z[G]=arguments[G];var we=L<3&&z[0]!==Y&&z[L-1]!==Y?[]:xr(z,Y);if(L-=we.length,L<f)return $m(a,l,Rl,S.placeholder,t,z,we,t,t,f-L);var Ae=this&&this!==vn&&this instanceof S?b:a;return Jn(Ae,this,z)}return S}function Wm(a){return function(l,f,b){var S=zt(l);if(!Hn(l)){var L=et(f,3);l=gn(l),f=function(G){return L(S[G],G,S)}}var z=a(l,f,b);return z>-1?S[L?l[z]:z]:t}}function Xm(a){return Zi(function(l){var f=l.length,b=f,S=di.prototype.thru;for(a&&l.reverse();b--;){var L=l[b];if(typeof L!="function")throw new fi(o);if(S&&!z&&Dl(L)=="wrapper")var z=new di([],!0)}for(b=z?b:f;++b<f;){L=l[b];var G=Dl(L),Y=G=="wrapper"?Th(L):t;Y&&Ph(Y[0])&&Y[1]==(U|M|O|V)&&!Y[4].length&&Y[9]==1?z=z[Dl(Y[0])].apply(z,Y[3]):z=L.length==1&&Ph(L)?z[G]():z.thru(L)}return function(){var we=arguments,Ae=we[0];if(z&&we.length==1&&ut(Ae))return z.plant(Ae).value();for(var De=0,He=f?l[De].apply(this,we):Ae;++De<f;)He=l[De].call(this,He);return He}})}function Rl(a,l,f,b,S,L,z,G,Y,we){var Ae=l&U,De=l&v,He=l&x,Ke=l&(M|E),it=l&se,_t=He?t:eo(a);function rt(){for(var Mt=arguments.length,Et=ce(Mt),ei=Mt;ei--;)Et[ei]=arguments[ei];if(Ke)var In=Ys(rt),ti=hb(Et,In);if(b&&(Et=zm(Et,b,S,Ke)),L&&(Et=km(Et,L,z,Ke)),Mt-=ti,Ke&&Mt<we){var nn=xr(Et,In);return $m(a,l,Rl,rt.placeholder,f,Et,nn,G,Y,we-Mt)}var wi=De?f:this,Qi=He?wi[a]:a;return Mt=Et.length,G?Et=xS(Et,G):it&&Mt>1&&Et.reverse(),Ae&&Y<Mt&&(Et.length=Y),this&&this!==vn&&this instanceof rt&&(Qi=_t||eo(Qi)),Qi.apply(wi,Et)}return rt}function qm(a,l){return function(f,b){return TM(f,a,l(b),{})}}function Ll(a,l){return function(f,b){var S;if(f===t&&b===t)return l;if(f!==t&&(S=f),b!==t){if(S===t)return b;typeof f=="string"||typeof b=="string"?(f=jn(f),b=jn(b)):(f=Pm(f),b=Pm(b)),S=a(f,b)}return S}}function Sh(a){return Zi(function(l){return l=qt(l,Kn(et())),yt(function(f){var b=this;return a(l,function(S){return Jn(S,b,f)})})})}function Pl(a,l){l=l===t?" ":jn(l);var f=l.length;if(f<2)return f?gh(l,a):l;var b=gh(l,_l(a/zs(l)));return Bs(l)?wr(bi(b),0,a).join(""):b.slice(0,a)}function eS(a,l,f,b){var S=l&v,L=eo(a);function z(){for(var G=-1,Y=arguments.length,we=-1,Ae=b.length,De=ce(Ae+Y),He=this&&this!==vn&&this instanceof z?L:a;++we<Ae;)De[we]=b[we];for(;Y--;)De[we++]=arguments[++G];return Jn(He,S?f:this,De)}return z}function Ym(a){return function(l,f,b){return b&&typeof b!="number"&&Pn(l,f,b)&&(f=b=t),l=ji(l),f===t?(f=l,l=0):f=ji(f),b=b===t?l<f?1:-1:ji(b),zM(l,f,b,a)}}function Il(a){return function(l,f){return typeof l=="string"&&typeof f=="string"||(l=_i(l),f=_i(f)),a(l,f)}}function $m(a,l,f,b,S,L,z,G,Y,we){var Ae=l&M,De=Ae?z:t,He=Ae?t:z,Ke=Ae?L:t,it=Ae?t:L;l|=Ae?O:P,l&=~(Ae?P:O),l&w||(l&=~(v|x));var _t=[a,l,S,Ke,De,it,He,G,Y,we],rt=f.apply(t,_t);return Ph(a)&&ag(rt,_t),rt.placeholder=b,og(rt,a,l)}function wh(a){var l=hn[a];return function(f,b){if(f=_i(f),b=b==null?0:Mn(dt(b),292),b&&om(f)){var S=(Pt(f)+"e").split("e"),L=l(S[0]+"e"+(+S[1]+b));return S=(Pt(L)+"e").split("e"),+(S[0]+"e"+(+S[1]-b))}return l(f)}}var tS=Hs&&1/ol(new Hs([,-0]))[1]==Me?function(a){return new Hs(a)}:qh;function Zm(a){return function(l){var f=Sn(l);return f==J?eh(l):f==k?vb(l):ub(l,a(l))}}function $i(a,l,f,b,S,L,z,G){var Y=l&x;if(!Y&&typeof a!="function")throw new fi(o);var we=b?b.length:0;if(we||(l&=~(O|P),b=S=t),z=z===t?z:fn(dt(z),0),G=G===t?G:dt(G),we-=S?S.length:0,l&P){var Ae=b,De=S;b=S=t}var He=Y?t:Th(a),Ke=[a,l,f,b,S,Ae,De,L,z,G];if(He&&gS(Ke,He),a=Ke[0],l=Ke[1],f=Ke[2],b=Ke[3],S=Ke[4],G=Ke[9]=Ke[9]===t?Y?0:a.length:fn(Ke[9]-we,0),!G&&l&(M|E)&&(l&=~(M|E)),!l||l==v)var it=jM(a,l,f);else l==M||l==E?it=QM(a,l,G):(l==O||l==(v|O))&&!S.length?it=eS(a,l,f,b):it=Rl.apply(t,Ke);var _t=He?Rm:ag;return og(_t(it,Ke),a,l)}function Jm(a,l,f,b){return a===t||Si(a,Gs[f])&&!Dt.call(b,f)?l:a}function Km(a,l,f,b,S,L){return Yt(a)&&Yt(l)&&(L.set(l,a),El(a,l,t,Km,L),L.delete(l)),a}function nS(a){return io(a)?t:a}function jm(a,l,f,b,S,L){var z=f&_,G=a.length,Y=l.length;if(G!=Y&&!(z&&Y>G))return!1;var we=L.get(a),Ae=L.get(l);if(we&&Ae)return we==l&&Ae==a;var De=-1,He=!0,Ke=f&y?new $r:t;for(L.set(a,l),L.set(l,a);++De<G;){var it=a[De],_t=l[De];if(b)var rt=z?b(_t,it,De,l,a,L):b(it,_t,De,a,l,L);if(rt!==t){if(rt)continue;He=!1;break}if(Ke){if(!$u(l,function(Mt,Et){if(!Va(Ke,Et)&&(it===Mt||S(it,Mt,f,b,L)))return Ke.push(Et)})){He=!1;break}}else if(!(it===_t||S(it,_t,f,b,L))){He=!1;break}}return L.delete(a),L.delete(l),He}function iS(a,l,f,b,S,L,z){switch(f){case _e:if(a.byteLength!=l.byteLength||a.byteOffset!=l.byteOffset)return!1;a=a.buffer,l=l.buffer;case pe:return!(a.byteLength!=l.byteLength||!L(new dl(a),new dl(l)));case Z:case $:case ee:return Si(+a,+l);case me:return a.name==l.name&&a.message==l.message;case A:case ie:return a==l+"";case J:var G=eh;case k:var Y=b&_;if(G||(G=ol),a.size!=l.size&&!Y)return!1;var we=z.get(a);if(we)return we==l;b|=y,z.set(a,l);var Ae=jm(G(a),G(l),b,S,L,z);return z.delete(a),Ae;case te:if($a)return $a.call(a)==$a.call(l)}return!1}function rS(a,l,f,b,S,L){var z=f&_,G=Eh(a),Y=G.length,we=Eh(l),Ae=we.length;if(Y!=Ae&&!z)return!1;for(var De=Y;De--;){var He=G[De];if(!(z?He in l:Dt.call(l,He)))return!1}var Ke=L.get(a),it=L.get(l);if(Ke&&it)return Ke==l&&it==a;var _t=!0;L.set(a,l),L.set(l,a);for(var rt=z;++De<Y;){He=G[De];var Mt=a[He],Et=l[He];if(b)var ei=z?b(Et,Mt,He,l,a,L):b(Mt,Et,He,a,l,L);if(!(ei===t?Mt===Et||S(Mt,Et,f,b,L):ei)){_t=!1;break}rt||(rt=He=="constructor")}if(_t&&!rt){var In=a.constructor,ti=l.constructor;In!=ti&&"constructor"in a&&"constructor"in l&&!(typeof In=="function"&&In instanceof In&&typeof ti=="function"&&ti instanceof ti)&&(_t=!1)}return L.delete(a),L.delete(l),_t}function Zi(a){return Dh(rg(a,t,dg),a+"")}function Eh(a){return vm(a,gn,Rh)}function Ah(a){return vm(a,Vn,Qm)}var Th=xl?function(a){return xl.get(a)}:qh;function Dl(a){for(var l=a.name+"",f=Vs[l],b=Dt.call(Vs,l)?f.length:0;b--;){var S=f[b],L=S.func;if(L==null||L==a)return S.name}return l}function Ys(a){var l=Dt.call(C,"placeholder")?C:a;return l.placeholder}function et(){var a=C.iteratee||Wh;return a=a===Wh?bm:a,arguments.length?a(arguments[0],arguments[1]):a}function Ul(a,l){var f=a.__data__;return fS(l)?f[typeof l=="string"?"string":"hash"]:f.map}function Ch(a){for(var l=gn(a),f=l.length;f--;){var b=l[f],S=a[b];l[f]=[b,S,ng(S)]}return l}function Kr(a,l){var f=mb(a,l);return ym(f)?f:t}function sS(a){var l=Dt.call(a,qr),f=a[qr];try{a[qr]=t;var b=!0}catch{}var S=hl.call(a);return b&&(l?a[qr]=f:delete a[qr]),S}var Rh=nh?function(a){return a==null?[]:(a=zt(a),_r(nh(a),function(l){return sm.call(a,l)}))}:Yh,Qm=nh?function(a){for(var l=[];a;)vr(l,Rh(a)),a=pl(a);return l}:Yh,Sn=Ln;(ih&&Sn(new ih(new ArrayBuffer(1)))!=_e||Xa&&Sn(new Xa)!=J||rh&&Sn(rh.resolve())!=Re||Hs&&Sn(new Hs)!=k||qa&&Sn(new qa)!=oe)&&(Sn=function(a){var l=Ln(a),f=l==Ce?a.constructor:t,b=f?jr(f):"";if(b)switch(b){case Gb:return _e;case Hb:return J;case Vb:return Re;case Wb:return k;case Xb:return oe}return l});function aS(a,l,f){for(var b=-1,S=f.length;++b<S;){var L=f[b],z=L.size;switch(L.type){case"drop":a+=z;break;case"dropRight":l-=z;break;case"take":l=Mn(l,a+z);break;case"takeRight":a=fn(a,l-z);break}}return{start:a,end:l}}function oS(a){var l=a.match(el);return l?l[1].split(Is):[]}function eg(a,l,f){l=Sr(l,a);for(var b=-1,S=l.length,L=!1;++b<S;){var z=Oi(l[b]);if(!(L=a!=null&&f(a,z)))break;a=a[z]}return L||++b!=S?L:(S=a==null?0:a.length,!!S&&Gl(S)&&Ji(z,S)&&(ut(a)||Qr(a)))}function lS(a){var l=a.length,f=new a.constructor(l);return l&&typeof a[0]=="string"&&Dt.call(a,"index")&&(f.index=a.index,f.input=a.input),f}function tg(a){return typeof a.constructor=="function"&&!to(a)?Ws(pl(a)):{}}function cS(a,l,f){var b=a.constructor;switch(l){case pe:return Mh(a);case Z:case $:return new b(+a);case _e:return qM(a,f);case Fe:case q:case Ue:case Ee:case ze:case Xe:case ke:case st:case St:return Fm(a,f);case J:return new b;case ee:case ie:return new b(a);case A:return YM(a);case k:return new b;case te:return $M(a)}}function uS(a,l){var f=l.length;if(!f)return a;var b=f-1;return l[b]=(f>1?"& ":"")+l[b],l=l.join(f>2?", ":" "),a.replace(Ps,`{
/* [wrapped with `+l+`] */
`)}function hS(a){return ut(a)||Qr(a)||!!(am&&a&&a[am])}function Ji(a,l){var f=typeof a;return l=l??ve,!!l&&(f=="number"||f!="symbol"&&ae.test(a))&&a>-1&&a%1==0&&a<l}function Pn(a,l,f){if(!Yt(f))return!1;var b=typeof l;return(b=="number"?Hn(f)&&Ji(l,f.length):b=="string"&&l in f)?Si(f[l],a):!1}function Lh(a,l){if(ut(a))return!1;var f=typeof a;return f=="number"||f=="symbol"||f=="boolean"||a==null||Qn(a)?!0:zn.test(a)||!ln.test(a)||l!=null&&a in zt(l)}function fS(a){var l=typeof a;return l=="string"||l=="number"||l=="symbol"||l=="boolean"?a!=="__proto__":a===null}function Ph(a){var l=Dl(a),f=C[l];if(typeof f!="function"||!(l in wt.prototype))return!1;if(a===f)return!0;var b=Th(f);return!!b&&a===b[0]}function dS(a){return!!nm&&nm in a}var pS=cl?Ki:$h;function to(a){var l=a&&a.constructor,f=typeof l=="function"&&l.prototype||Gs;return a===f}function ng(a){return a===a&&!Yt(a)}function ig(a,l){return function(f){return f==null?!1:f[a]===l&&(l!==t||a in zt(f))}}function mS(a){var l=zl(a,function(b){return f.size===h&&f.clear(),b}),f=l.cache;return l}function gS(a,l){var f=a[1],b=l[1],S=f|b,L=S<(v|x|U),z=b==U&&f==M||b==U&&f==V&&a[7].length<=l[8]||b==(U|V)&&l[7].length<=l[8]&&f==M;if(!(L||z))return a;b&v&&(a[2]=l[2],S|=f&v?0:w);var G=l[3];if(G){var Y=a[3];a[3]=Y?zm(Y,G,l[4]):G,a[4]=Y?xr(a[3],p):l[4]}return G=l[5],G&&(Y=a[5],a[5]=Y?km(Y,G,l[6]):G,a[6]=Y?xr(a[5],p):l[6]),G=l[7],G&&(a[7]=G),b&U&&(a[8]=a[8]==null?l[8]:Mn(a[8],l[8])),a[9]==null&&(a[9]=l[9]),a[0]=l[0],a[1]=S,a}function _S(a){var l=[];if(a!=null)for(var f in zt(a))l.push(f);return l}function vS(a){return hl.call(a)}function rg(a,l,f){return l=fn(l===t?a.length-1:l,0),function(){for(var b=arguments,S=-1,L=fn(b.length-l,0),z=ce(L);++S<L;)z[S]=b[l+S];S=-1;for(var G=ce(l+1);++S<l;)G[S]=b[S];return G[l]=f(z),Jn(a,this,G)}}function sg(a,l){return l.length<2?a:Jr(a,mi(l,0,-1))}function xS(a,l){for(var f=a.length,b=Mn(l.length,f),S=Gn(a);b--;){var L=l[b];a[b]=Ji(L,f)?S[L]:t}return a}function Ih(a,l){if(!(l==="constructor"&&typeof a[l]=="function")&&l!="__proto__")return a[l]}var ag=lg(Rm),no=Ub||function(a,l){return vn.setTimeout(a,l)},Dh=lg(HM);function og(a,l,f){var b=l+"";return Dh(a,uS(b,yS(oS(b),f)))}function lg(a){var l=0,f=0;return function(){var b=Bb(),S=Te-(b-f);if(f=b,S>0){if(++l>=ne)return arguments[0]}else l=0;return a.apply(t,arguments)}}function Nl(a,l){var f=-1,b=a.length,S=b-1;for(l=l===t?b:l;++f<l;){var L=mh(f,S),z=a[L];a[L]=a[f],a[f]=z}return a.length=l,a}var cg=mS(function(a){var l=[];return a.charCodeAt(0)===46&&l.push(""),a.replace(Ft,function(f,b,S,L){l.push(S?L.replace(zu,"$1"):b||f)}),l});function Oi(a){if(typeof a=="string"||Qn(a))return a;var l=a+"";return l=="0"&&1/a==-Me?"-0":l}function jr(a){if(a!=null){try{return ul.call(a)}catch{}try{return a+""}catch{}}return""}function yS(a,l){return hi(he,function(f){var b="_."+f[0];l&f[1]&&!sl(a,b)&&a.push(b)}),a.sort()}function ug(a){if(a instanceof wt)return a.clone();var l=new di(a.__wrapped__,a.__chain__);return l.__actions__=Gn(a.__actions__),l.__index__=a.__index__,l.__values__=a.__values__,l}function bS(a,l,f){(f?Pn(a,l,f):l===t)?l=1:l=fn(dt(l),0);var b=a==null?0:a.length;if(!b||l<1)return[];for(var S=0,L=0,z=ce(_l(b/l));S<b;)z[L++]=mi(a,S,S+=l);return z}function MS(a){for(var l=-1,f=a==null?0:a.length,b=0,S=[];++l<f;){var L=a[l];L&&(S[b++]=L)}return S}function SS(){var a=arguments.length;if(!a)return[];for(var l=ce(a-1),f=arguments[0],b=a;b--;)l[b-1]=arguments[b];return vr(ut(f)?Gn(f):[f],xn(l,1))}var wS=yt(function(a,l){return tn(a)?Ja(a,xn(l,1,tn,!0)):[]}),ES=yt(function(a,l){var f=gi(l);return tn(f)&&(f=t),tn(a)?Ja(a,xn(l,1,tn,!0),et(f,2)):[]}),AS=yt(function(a,l){var f=gi(l);return tn(f)&&(f=t),tn(a)?Ja(a,xn(l,1,tn,!0),t,f):[]});function TS(a,l,f){var b=a==null?0:a.length;return b?(l=f||l===t?1:dt(l),mi(a,l<0?0:l,b)):[]}function CS(a,l,f){var b=a==null?0:a.length;return b?(l=f||l===t?1:dt(l),l=b-l,mi(a,0,l<0?0:l)):[]}function RS(a,l){return a&&a.length?Tl(a,et(l,3),!0,!0):[]}function LS(a,l){return a&&a.length?Tl(a,et(l,3),!0):[]}function PS(a,l,f,b){var S=a==null?0:a.length;return S?(f&&typeof f!="number"&&Pn(a,l,f)&&(f=0,b=S),SM(a,l,f,b)):[]}function hg(a,l,f){var b=a==null?0:a.length;if(!b)return-1;var S=f==null?0:dt(f);return S<0&&(S=fn(b+S,0)),al(a,et(l,3),S)}function fg(a,l,f){var b=a==null?0:a.length;if(!b)return-1;var S=b-1;return f!==t&&(S=dt(f),S=f<0?fn(b+S,0):Mn(S,b-1)),al(a,et(l,3),S,!0)}function dg(a){var l=a==null?0:a.length;return l?xn(a,1):[]}function IS(a){var l=a==null?0:a.length;return l?xn(a,Me):[]}function DS(a,l){var f=a==null?0:a.length;return f?(l=l===t?1:dt(l),xn(a,l)):[]}function US(a){for(var l=-1,f=a==null?0:a.length,b={};++l<f;){var S=a[l];b[S[0]]=S[1]}return b}function pg(a){return a&&a.length?a[0]:t}function NS(a,l,f){var b=a==null?0:a.length;if(!b)return-1;var S=f==null?0:dt(f);return S<0&&(S=fn(b+S,0)),Fs(a,l,S)}function OS(a){var l=a==null?0:a.length;return l?mi(a,0,-1):[]}var FS=yt(function(a){var l=qt(a,yh);return l.length&&l[0]===a[0]?uh(l):[]}),BS=yt(function(a){var l=gi(a),f=qt(a,yh);return l===gi(f)?l=t:f.pop(),f.length&&f[0]===a[0]?uh(f,et(l,2)):[]}),zS=yt(function(a){var l=gi(a),f=qt(a,yh);return l=typeof l=="function"?l:t,l&&f.pop(),f.length&&f[0]===a[0]?uh(f,t,l):[]});function kS(a,l){return a==null?"":Ob.call(a,l)}function gi(a){var l=a==null?0:a.length;return l?a[l-1]:t}function GS(a,l,f){var b=a==null?0:a.length;if(!b)return-1;var S=b;return f!==t&&(S=dt(f),S=S<0?fn(b+S,0):Mn(S,b-1)),l===l?yb(a,l,S):al(a,$p,S,!0)}function HS(a,l){return a&&a.length?Em(a,dt(l)):t}var VS=yt(mg);function mg(a,l){return a&&a.length&&l&&l.length?ph(a,l):a}function WS(a,l,f){return a&&a.length&&l&&l.length?ph(a,l,et(f,2)):a}function XS(a,l,f){return a&&a.length&&l&&l.length?ph(a,l,t,f):a}var qS=Zi(function(a,l){var f=a==null?0:a.length,b=ah(a,l);return Cm(a,qt(l,function(S){return Ji(S,f)?+S:S}).sort(Bm)),b});function YS(a,l){var f=[];if(!(a&&a.length))return f;var b=-1,S=[],L=a.length;for(l=et(l,3);++b<L;){var z=a[b];l(z,b,a)&&(f.push(z),S.push(b))}return Cm(a,S),f}function Uh(a){return a==null?a:kb.call(a)}function $S(a,l,f){var b=a==null?0:a.length;return b?(f&&typeof f!="number"&&Pn(a,l,f)?(l=0,f=b):(l=l==null?0:dt(l),f=f===t?b:dt(f)),mi(a,l,f)):[]}function ZS(a,l){return Al(a,l)}function JS(a,l,f){return _h(a,l,et(f,2))}function KS(a,l){var f=a==null?0:a.length;if(f){var b=Al(a,l);if(b<f&&Si(a[b],l))return b}return-1}function jS(a,l){return Al(a,l,!0)}function QS(a,l,f){return _h(a,l,et(f,2),!0)}function ew(a,l){var f=a==null?0:a.length;if(f){var b=Al(a,l,!0)-1;if(Si(a[b],l))return b}return-1}function tw(a){return a&&a.length?Lm(a):[]}function nw(a,l){return a&&a.length?Lm(a,et(l,2)):[]}function iw(a){var l=a==null?0:a.length;return l?mi(a,1,l):[]}function rw(a,l,f){return a&&a.length?(l=f||l===t?1:dt(l),mi(a,0,l<0?0:l)):[]}function sw(a,l,f){var b=a==null?0:a.length;return b?(l=f||l===t?1:dt(l),l=b-l,mi(a,l<0?0:l,b)):[]}function aw(a,l){return a&&a.length?Tl(a,et(l,3),!1,!0):[]}function ow(a,l){return a&&a.length?Tl(a,et(l,3)):[]}var lw=yt(function(a){return Mr(xn(a,1,tn,!0))}),cw=yt(function(a){var l=gi(a);return tn(l)&&(l=t),Mr(xn(a,1,tn,!0),et(l,2))}),uw=yt(function(a){var l=gi(a);return l=typeof l=="function"?l:t,Mr(xn(a,1,tn,!0),t,l)});function hw(a){return a&&a.length?Mr(a):[]}function fw(a,l){return a&&a.length?Mr(a,et(l,2)):[]}function dw(a,l){return l=typeof l=="function"?l:t,a&&a.length?Mr(a,t,l):[]}function Nh(a){if(!(a&&a.length))return[];var l=0;return a=_r(a,function(f){if(tn(f))return l=fn(f.length,l),!0}),ju(l,function(f){return qt(a,Zu(f))})}function gg(a,l){if(!(a&&a.length))return[];var f=Nh(a);return l==null?f:qt(f,function(b){return Jn(l,t,b)})}var pw=yt(function(a,l){return tn(a)?Ja(a,l):[]}),mw=yt(function(a){return xh(_r(a,tn))}),gw=yt(function(a){var l=gi(a);return tn(l)&&(l=t),xh(_r(a,tn),et(l,2))}),_w=yt(function(a){var l=gi(a);return l=typeof l=="function"?l:t,xh(_r(a,tn),t,l)}),vw=yt(Nh);function xw(a,l){return Um(a||[],l||[],Za)}function yw(a,l){return Um(a||[],l||[],Qa)}var bw=yt(function(a){var l=a.length,f=l>1?a[l-1]:t;return f=typeof f=="function"?(a.pop(),f):t,gg(a,f)});function _g(a){var l=C(a);return l.__chain__=!0,l}function Mw(a,l){return l(a),a}function Ol(a,l){return l(a)}var Sw=Zi(function(a){var l=a.length,f=l?a[0]:0,b=this.__wrapped__,S=function(L){return ah(L,a)};return l>1||this.__actions__.length||!(b instanceof wt)||!Ji(f)?this.thru(S):(b=b.slice(f,+f+(l?1:0)),b.__actions__.push({func:Ol,args:[S],thisArg:t}),new di(b,this.__chain__).thru(function(L){return l&&!L.length&&L.push(t),L}))});function ww(){return _g(this)}function Ew(){return new di(this.value(),this.__chain__)}function Aw(){this.__values__===t&&(this.__values__=Pg(this.value()));var a=this.__index__>=this.__values__.length,l=a?t:this.__values__[this.__index__++];return{done:a,value:l}}function Tw(){return this}function Cw(a){for(var l,f=this;f instanceof bl;){var b=ug(f);b.__index__=0,b.__values__=t,l?S.__wrapped__=b:l=b;var S=b;f=f.__wrapped__}return S.__wrapped__=a,l}function Rw(){var a=this.__wrapped__;if(a instanceof wt){var l=a;return this.__actions__.length&&(l=new wt(this)),l=l.reverse(),l.__actions__.push({func:Ol,args:[Uh],thisArg:t}),new di(l,this.__chain__)}return this.thru(Uh)}function Lw(){return Dm(this.__wrapped__,this.__actions__)}var Pw=Cl(function(a,l,f){Dt.call(a,f)?++a[f]:Yi(a,f,1)});function Iw(a,l,f){var b=ut(a)?qp:MM;return f&&Pn(a,l,f)&&(l=t),b(a,et(l,3))}function Dw(a,l){var f=ut(a)?_r:gm;return f(a,et(l,3))}var Uw=Wm(hg),Nw=Wm(fg);function Ow(a,l){return xn(Fl(a,l),1)}function Fw(a,l){return xn(Fl(a,l),Me)}function Bw(a,l,f){return f=f===t?1:dt(f),xn(Fl(a,l),f)}function vg(a,l){var f=ut(a)?hi:br;return f(a,et(l,3))}function xg(a,l){var f=ut(a)?ib:mm;return f(a,et(l,3))}var zw=Cl(function(a,l,f){Dt.call(a,f)?a[f].push(l):Yi(a,f,[l])});function kw(a,l,f,b){a=Hn(a)?a:Zs(a),f=f&&!b?dt(f):0;var S=a.length;return f<0&&(f=fn(S+f,0)),Hl(a)?f<=S&&a.indexOf(l,f)>-1:!!S&&Fs(a,l,f)>-1}var Gw=yt(function(a,l,f){var b=-1,S=typeof l=="function",L=Hn(a)?ce(a.length):[];return br(a,function(z){L[++b]=S?Jn(l,z,f):Ka(z,l,f)}),L}),Hw=Cl(function(a,l,f){Yi(a,f,l)});function Fl(a,l){var f=ut(a)?qt:Mm;return f(a,et(l,3))}function Vw(a,l,f,b){return a==null?[]:(ut(l)||(l=l==null?[]:[l]),f=b?t:f,ut(f)||(f=f==null?[]:[f]),Am(a,l,f))}var Ww=Cl(function(a,l,f){a[f?0:1].push(l)},function(){return[[],[]]});function Xw(a,l,f){var b=ut(a)?Yu:Jp,S=arguments.length<3;return b(a,et(l,4),f,S,br)}function qw(a,l,f){var b=ut(a)?rb:Jp,S=arguments.length<3;return b(a,et(l,4),f,S,mm)}function Yw(a,l){var f=ut(a)?_r:gm;return f(a,kl(et(l,3)))}function $w(a){var l=ut(a)?hm:kM;return l(a)}function Zw(a,l,f){(f?Pn(a,l,f):l===t)?l=1:l=dt(l);var b=ut(a)?_M:GM;return b(a,l)}function Jw(a){var l=ut(a)?vM:VM;return l(a)}function Kw(a){if(a==null)return 0;if(Hn(a))return Hl(a)?zs(a):a.length;var l=Sn(a);return l==J||l==k?a.size:fh(a).length}function jw(a,l,f){var b=ut(a)?$u:WM;return f&&Pn(a,l,f)&&(l=t),b(a,et(l,3))}var Qw=yt(function(a,l){if(a==null)return[];var f=l.length;return f>1&&Pn(a,l[0],l[1])?l=[]:f>2&&Pn(l[0],l[1],l[2])&&(l=[l[0]]),Am(a,xn(l,1),[])}),Bl=Db||function(){return vn.Date.now()};function eE(a,l){if(typeof l!="function")throw new fi(o);return a=dt(a),function(){if(--a<1)return l.apply(this,arguments)}}function yg(a,l,f){return l=f?t:l,l=a&&l==null?a.length:l,$i(a,U,t,t,t,t,l)}function bg(a,l){var f;if(typeof l!="function")throw new fi(o);return a=dt(a),function(){return--a>0&&(f=l.apply(this,arguments)),a<=1&&(l=t),f}}var Oh=yt(function(a,l,f){var b=v;if(f.length){var S=xr(f,Ys(Oh));b|=O}return $i(a,b,l,f,S)}),Mg=yt(function(a,l,f){var b=v|x;if(f.length){var S=xr(f,Ys(Mg));b|=O}return $i(l,b,a,f,S)});function Sg(a,l,f){l=f?t:l;var b=$i(a,M,t,t,t,t,t,l);return b.placeholder=Sg.placeholder,b}function wg(a,l,f){l=f?t:l;var b=$i(a,E,t,t,t,t,t,l);return b.placeholder=wg.placeholder,b}function Eg(a,l,f){var b,S,L,z,G,Y,we=0,Ae=!1,De=!1,He=!0;if(typeof a!="function")throw new fi(o);l=_i(l)||0,Yt(f)&&(Ae=!!f.leading,De="maxWait"in f,L=De?fn(_i(f.maxWait)||0,l):L,He="trailing"in f?!!f.trailing:He);function Ke(nn){var wi=b,Qi=S;return b=S=t,we=nn,z=a.apply(Qi,wi),z}function it(nn){return we=nn,G=no(Mt,l),Ae?Ke(nn):z}function _t(nn){var wi=nn-Y,Qi=nn-we,Wg=l-wi;return De?Mn(Wg,L-Qi):Wg}function rt(nn){var wi=nn-Y,Qi=nn-we;return Y===t||wi>=l||wi<0||De&&Qi>=L}function Mt(){var nn=Bl();if(rt(nn))return Et(nn);G=no(Mt,_t(nn))}function Et(nn){return G=t,He&&b?Ke(nn):(b=S=t,z)}function ei(){G!==t&&Nm(G),we=0,b=Y=S=G=t}function In(){return G===t?z:Et(Bl())}function ti(){var nn=Bl(),wi=rt(nn);if(b=arguments,S=this,Y=nn,wi){if(G===t)return it(Y);if(De)return Nm(G),G=no(Mt,l),Ke(Y)}return G===t&&(G=no(Mt,l)),z}return ti.cancel=ei,ti.flush=In,ti}var tE=yt(function(a,l){return pm(a,1,l)}),nE=yt(function(a,l,f){return pm(a,_i(l)||0,f)});function iE(a){return $i(a,se)}function zl(a,l){if(typeof a!="function"||l!=null&&typeof l!="function")throw new fi(o);var f=function(){var b=arguments,S=l?l.apply(this,b):b[0],L=f.cache;if(L.has(S))return L.get(S);var z=a.apply(this,b);return f.cache=L.set(S,z)||L,z};return f.cache=new(zl.Cache||qi),f}zl.Cache=qi;function kl(a){if(typeof a!="function")throw new fi(o);return function(){var l=arguments;switch(l.length){case 0:return!a.call(this);case 1:return!a.call(this,l[0]);case 2:return!a.call(this,l[0],l[1]);case 3:return!a.call(this,l[0],l[1],l[2])}return!a.apply(this,l)}}function rE(a){return bg(2,a)}var sE=XM(function(a,l){l=l.length==1&&ut(l[0])?qt(l[0],Kn(et())):qt(xn(l,1),Kn(et()));var f=l.length;return yt(function(b){for(var S=-1,L=Mn(b.length,f);++S<L;)b[S]=l[S].call(this,b[S]);return Jn(a,this,b)})}),Fh=yt(function(a,l){var f=xr(l,Ys(Fh));return $i(a,O,t,l,f)}),Ag=yt(function(a,l){var f=xr(l,Ys(Ag));return $i(a,P,t,l,f)}),aE=Zi(function(a,l){return $i(a,V,t,t,t,l)});function oE(a,l){if(typeof a!="function")throw new fi(o);return l=l===t?l:dt(l),yt(a,l)}function lE(a,l){if(typeof a!="function")throw new fi(o);return l=l==null?0:fn(dt(l),0),yt(function(f){var b=f[l],S=wr(f,0,l);return b&&vr(S,b),Jn(a,this,S)})}function cE(a,l,f){var b=!0,S=!0;if(typeof a!="function")throw new fi(o);return Yt(f)&&(b="leading"in f?!!f.leading:b,S="trailing"in f?!!f.trailing:S),Eg(a,l,{leading:b,maxWait:l,trailing:S})}function uE(a){return yg(a,1)}function hE(a,l){return Fh(bh(l),a)}function fE(){if(!arguments.length)return[];var a=arguments[0];return ut(a)?a:[a]}function dE(a){return pi(a,m)}function pE(a,l){return l=typeof l=="function"?l:t,pi(a,m,l)}function mE(a){return pi(a,g|m)}function gE(a,l){return l=typeof l=="function"?l:t,pi(a,g|m,l)}function _E(a,l){return l==null||dm(a,l,gn(l))}function Si(a,l){return a===l||a!==a&&l!==l}var vE=Il(ch),xE=Il(function(a,l){return a>=l}),Qr=xm(function(){return arguments}())?xm:function(a){return Jt(a)&&Dt.call(a,"callee")&&!sm.call(a,"callee")},ut=ce.isArray,yE=kp?Kn(kp):CM;function Hn(a){return a!=null&&Gl(a.length)&&!Ki(a)}function tn(a){return Jt(a)&&Hn(a)}function bE(a){return a===!0||a===!1||Jt(a)&&Ln(a)==Z}var Er=Nb||$h,ME=Gp?Kn(Gp):RM;function SE(a){return Jt(a)&&a.nodeType===1&&!io(a)}function wE(a){if(a==null)return!0;if(Hn(a)&&(ut(a)||typeof a=="string"||typeof a.splice=="function"||Er(a)||$s(a)||Qr(a)))return!a.length;var l=Sn(a);if(l==J||l==k)return!a.size;if(to(a))return!fh(a).length;for(var f in a)if(Dt.call(a,f))return!1;return!0}function EE(a,l){return ja(a,l)}function AE(a,l,f){f=typeof f=="function"?f:t;var b=f?f(a,l):t;return b===t?ja(a,l,t,f):!!b}function Bh(a){if(!Jt(a))return!1;var l=Ln(a);return l==me||l==ue||typeof a.message=="string"&&typeof a.name=="string"&&!io(a)}function TE(a){return typeof a=="number"&&om(a)}function Ki(a){if(!Yt(a))return!1;var l=Ln(a);return l==I||l==ge||l==X||l==R}function Tg(a){return typeof a=="number"&&a==dt(a)}function Gl(a){return typeof a=="number"&&a>-1&&a%1==0&&a<=ve}function Yt(a){var l=typeof a;return a!=null&&(l=="object"||l=="function")}function Jt(a){return a!=null&&typeof a=="object"}var Cg=Hp?Kn(Hp):PM;function CE(a,l){return a===l||hh(a,l,Ch(l))}function RE(a,l,f){return f=typeof f=="function"?f:t,hh(a,l,Ch(l),f)}function LE(a){return Rg(a)&&a!=+a}function PE(a){if(pS(a))throw new lt(s);return ym(a)}function IE(a){return a===null}function DE(a){return a==null}function Rg(a){return typeof a=="number"||Jt(a)&&Ln(a)==ee}function io(a){if(!Jt(a)||Ln(a)!=Ce)return!1;var l=pl(a);if(l===null)return!0;var f=Dt.call(l,"constructor")&&l.constructor;return typeof f=="function"&&f instanceof f&&ul.call(f)==Rb}var zh=Vp?Kn(Vp):IM;function UE(a){return Tg(a)&&a>=-ve&&a<=ve}var Lg=Wp?Kn(Wp):DM;function Hl(a){return typeof a=="string"||!ut(a)&&Jt(a)&&Ln(a)==ie}function Qn(a){return typeof a=="symbol"||Jt(a)&&Ln(a)==te}var $s=Xp?Kn(Xp):UM;function NE(a){return a===t}function OE(a){return Jt(a)&&Sn(a)==oe}function FE(a){return Jt(a)&&Ln(a)==xe}var BE=Il(dh),zE=Il(function(a,l){return a<=l});function Pg(a){if(!a)return[];if(Hn(a))return Hl(a)?bi(a):Gn(a);if(Wa&&a[Wa])return _b(a[Wa]());var l=Sn(a),f=l==J?eh:l==k?ol:Zs;return f(a)}function ji(a){if(!a)return a===0?a:0;if(a=_i(a),a===Me||a===-Me){var l=a<0?-1:1;return l*be}return a===a?a:0}function dt(a){var l=ji(a),f=l%1;return l===l?f?l-f:l:0}function Ig(a){return a?Zr(dt(a),0,Se):0}function _i(a){if(typeof a=="number")return a;if(Qn(a))return Ie;if(Yt(a)){var l=typeof a.valueOf=="function"?a.valueOf():a;a=Yt(l)?l+"":l}if(typeof a!="string")return a===0?a:+a;a=Kp(a);var f=K.test(a);return f||fe.test(a)?eb(a.slice(2),f?2:8):D.test(a)?Ie:+a}function Dg(a){return Ni(a,Vn(a))}function kE(a){return a?Zr(dt(a),-ve,ve):a===0?a:0}function Pt(a){return a==null?"":jn(a)}var GE=Xs(function(a,l){if(to(l)||Hn(l)){Ni(l,gn(l),a);return}for(var f in l)Dt.call(l,f)&&Za(a,f,l[f])}),Ug=Xs(function(a,l){Ni(l,Vn(l),a)}),Vl=Xs(function(a,l,f,b){Ni(l,Vn(l),a,b)}),HE=Xs(function(a,l,f,b){Ni(l,gn(l),a,b)}),VE=Zi(ah);function WE(a,l){var f=Ws(a);return l==null?f:fm(f,l)}var XE=yt(function(a,l){a=zt(a);var f=-1,b=l.length,S=b>2?l[2]:t;for(S&&Pn(l[0],l[1],S)&&(b=1);++f<b;)for(var L=l[f],z=Vn(L),G=-1,Y=z.length;++G<Y;){var we=z[G],Ae=a[we];(Ae===t||Si(Ae,Gs[we])&&!Dt.call(a,we))&&(a[we]=L[we])}return a}),qE=yt(function(a){return a.push(t,Km),Jn(Ng,t,a)});function YE(a,l){return Yp(a,et(l,3),Ui)}function $E(a,l){return Yp(a,et(l,3),lh)}function ZE(a,l){return a==null?a:oh(a,et(l,3),Vn)}function JE(a,l){return a==null?a:_m(a,et(l,3),Vn)}function KE(a,l){return a&&Ui(a,et(l,3))}function jE(a,l){return a&&lh(a,et(l,3))}function QE(a){return a==null?[]:wl(a,gn(a))}function eA(a){return a==null?[]:wl(a,Vn(a))}function kh(a,l,f){var b=a==null?t:Jr(a,l);return b===t?f:b}function tA(a,l){return a!=null&&eg(a,l,wM)}function Gh(a,l){return a!=null&&eg(a,l,EM)}var nA=qm(function(a,l,f){l!=null&&typeof l.toString!="function"&&(l=hl.call(l)),a[l]=f},Vh(Wn)),iA=qm(function(a,l,f){l!=null&&typeof l.toString!="function"&&(l=hl.call(l)),Dt.call(a,l)?a[l].push(f):a[l]=[f]},et),rA=yt(Ka);function gn(a){return Hn(a)?um(a):fh(a)}function Vn(a){return Hn(a)?um(a,!0):NM(a)}function sA(a,l){var f={};return l=et(l,3),Ui(a,function(b,S,L){Yi(f,l(b,S,L),b)}),f}function aA(a,l){var f={};return l=et(l,3),Ui(a,function(b,S,L){Yi(f,S,l(b,S,L))}),f}var oA=Xs(function(a,l,f){El(a,l,f)}),Ng=Xs(function(a,l,f,b){El(a,l,f,b)}),lA=Zi(function(a,l){var f={};if(a==null)return f;var b=!1;l=qt(l,function(L){return L=Sr(L,a),b||(b=L.length>1),L}),Ni(a,Ah(a),f),b&&(f=pi(f,g|d|m,nS));for(var S=l.length;S--;)vh(f,l[S]);return f});function cA(a,l){return Og(a,kl(et(l)))}var uA=Zi(function(a,l){return a==null?{}:FM(a,l)});function Og(a,l){if(a==null)return{};var f=qt(Ah(a),function(b){return[b]});return l=et(l),Tm(a,f,function(b,S){return l(b,S[0])})}function hA(a,l,f){l=Sr(l,a);var b=-1,S=l.length;for(S||(S=1,a=t);++b<S;){var L=a==null?t:a[Oi(l[b])];L===t&&(b=S,L=f),a=Ki(L)?L.call(a):L}return a}function fA(a,l,f){return a==null?a:Qa(a,l,f)}function dA(a,l,f,b){return b=typeof b=="function"?b:t,a==null?a:Qa(a,l,f,b)}var Fg=Zm(gn),Bg=Zm(Vn);function pA(a,l,f){var b=ut(a),S=b||Er(a)||$s(a);if(l=et(l,4),f==null){var L=a&&a.constructor;S?f=b?new L:[]:Yt(a)?f=Ki(L)?Ws(pl(a)):{}:f={}}return(S?hi:Ui)(a,function(z,G,Y){return l(f,z,G,Y)}),f}function mA(a,l){return a==null?!0:vh(a,l)}function gA(a,l,f){return a==null?a:Im(a,l,bh(f))}function _A(a,l,f,b){return b=typeof b=="function"?b:t,a==null?a:Im(a,l,bh(f),b)}function Zs(a){return a==null?[]:Qu(a,gn(a))}function vA(a){return a==null?[]:Qu(a,Vn(a))}function xA(a,l,f){return f===t&&(f=l,l=t),f!==t&&(f=_i(f),f=f===f?f:0),l!==t&&(l=_i(l),l=l===l?l:0),Zr(_i(a),l,f)}function yA(a,l,f){return l=ji(l),f===t?(f=l,l=0):f=ji(f),a=_i(a),AM(a,l,f)}function bA(a,l,f){if(f&&typeof f!="boolean"&&Pn(a,l,f)&&(l=f=t),f===t&&(typeof l=="boolean"?(f=l,l=t):typeof a=="boolean"&&(f=a,a=t)),a===t&&l===t?(a=0,l=1):(a=ji(a),l===t?(l=a,a=0):l=ji(l)),a>l){var b=a;a=l,l=b}if(f||a%1||l%1){var S=lm();return Mn(a+S*(l-a+Qy("1e-"+((S+"").length-1))),l)}return mh(a,l)}var MA=qs(function(a,l,f){return l=l.toLowerCase(),a+(f?zg(l):l)});function zg(a){return Hh(Pt(a).toLowerCase())}function kg(a){return a=Pt(a),a&&a.replace(We,fb).replace(Vy,"")}function SA(a,l,f){a=Pt(a),l=jn(l);var b=a.length;f=f===t?b:Zr(dt(f),0,b);var S=f;return f-=l.length,f>=0&&a.slice(f,S)==l}function wA(a){return a=Pt(a),a&&Ze.test(a)?a.replace(Ne,db):a}function EA(a){return a=Pt(a),a&&li.test(a)?a.replace(cn,"\\$&"):a}var AA=qs(function(a,l,f){return a+(f?"-":"")+l.toLowerCase()}),TA=qs(function(a,l,f){return a+(f?" ":"")+l.toLowerCase()}),CA=Vm("toLowerCase");function RA(a,l,f){a=Pt(a),l=dt(l);var b=l?zs(a):0;if(!l||b>=l)return a;var S=(l-b)/2;return Pl(vl(S),f)+a+Pl(_l(S),f)}function LA(a,l,f){a=Pt(a),l=dt(l);var b=l?zs(a):0;return l&&b<l?a+Pl(l-b,f):a}function PA(a,l,f){a=Pt(a),l=dt(l);var b=l?zs(a):0;return l&&b<l?Pl(l-b,f)+a:a}function IA(a,l,f){return f||l==null?l=0:l&&(l=+l),zb(Pt(a).replace(Ls,""),l||0)}function DA(a,l,f){return(f?Pn(a,l,f):l===t)?l=1:l=dt(l),gh(Pt(a),l)}function UA(){var a=arguments,l=Pt(a[0]);return a.length<3?l:l.replace(a[1],a[2])}var NA=qs(function(a,l,f){return a+(f?"_":"")+l.toLowerCase()});function OA(a,l,f){return f&&typeof f!="number"&&Pn(a,l,f)&&(l=f=t),f=f===t?Se:f>>>0,f?(a=Pt(a),a&&(typeof l=="string"||l!=null&&!zh(l))&&(l=jn(l),!l&&Bs(a))?wr(bi(a),0,f):a.split(l,f)):[]}var FA=qs(function(a,l,f){return a+(f?" ":"")+Hh(l)});function BA(a,l,f){return a=Pt(a),f=f==null?0:Zr(dt(f),0,a.length),l=jn(l),a.slice(f,f+l.length)==l}function zA(a,l,f){var b=C.templateSettings;f&&Pn(a,l,f)&&(l=t),a=Pt(a),l=Vl({},l,b,Jm);var S=Vl({},l.imports,b.imports,Jm),L=gn(S),z=Qu(S,L),G,Y,we=0,Ae=l.interpolate||Je,De="__p += '",He=th((l.escape||Je).source+"|"+Ae.source+"|"+(Ae===It?ku:Je).source+"|"+(l.evaluate||Je).source+"|$","g"),Ke="//# sourceURL="+(Dt.call(l,"sourceURL")?(l.sourceURL+"").replace(/\s/g," "):"lodash.templateSources["+ ++$y+"]")+`
`;a.replace(He,function(rt,Mt,Et,ei,In,ti){return Et||(Et=ei),De+=a.slice(we,ti).replace(tt,pb),Mt&&(G=!0,De+=`' +
__e(`+Mt+`) +
'`),In&&(Y=!0,De+=`';
`+In+`;
__p += '`),Et&&(De+=`' +
((__t = (`+Et+`)) == null ? '' : __t) +
'`),we=ti+rt.length,rt}),De+=`';
`;var it=Dt.call(l,"variable")&&l.variable;if(!it)De=`with (obj) {
`+De+`
}
`;else if(nl.test(it))throw new lt(c);De=(Y?De.replace(Tt,""):De).replace(mt,"$1").replace(bt,"$1;"),De="function("+(it||"obj")+`) {
`+(it?"":`obj || (obj = {});
`)+"var __t, __p = ''"+(G?", __e = _.escape":"")+(Y?`, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
`:`;
`)+De+`return __p
}`;var _t=Hg(function(){return Lt(L,Ke+"return "+De).apply(t,z)});if(_t.source=De,Bh(_t))throw _t;return _t}function kA(a){return Pt(a).toLowerCase()}function GA(a){return Pt(a).toUpperCase()}function HA(a,l,f){if(a=Pt(a),a&&(f||l===t))return Kp(a);if(!a||!(l=jn(l)))return a;var b=bi(a),S=bi(l),L=jp(b,S),z=Qp(b,S)+1;return wr(b,L,z).join("")}function VA(a,l,f){if(a=Pt(a),a&&(f||l===t))return a.slice(0,tm(a)+1);if(!a||!(l=jn(l)))return a;var b=bi(a),S=Qp(b,bi(l))+1;return wr(b,0,S).join("")}function WA(a,l,f){if(a=Pt(a),a&&(f||l===t))return a.replace(Ls,"");if(!a||!(l=jn(l)))return a;var b=bi(a),S=jp(b,bi(l));return wr(b,S).join("")}function XA(a,l){var f=T,b=N;if(Yt(l)){var S="separator"in l?l.separator:S;f="length"in l?dt(l.length):f,b="omission"in l?jn(l.omission):b}a=Pt(a);var L=a.length;if(Bs(a)){var z=bi(a);L=z.length}if(f>=L)return a;var G=f-zs(b);if(G<1)return b;var Y=z?wr(z,0,G).join(""):a.slice(0,G);if(S===t)return Y+b;if(z&&(G+=Y.length-G),zh(S)){if(a.slice(G).search(S)){var we,Ae=Y;for(S.global||(S=th(S.source,Pt(il.exec(S))+"g")),S.lastIndex=0;we=S.exec(Ae);)var De=we.index;Y=Y.slice(0,De===t?G:De)}}else if(a.indexOf(jn(S),G)!=G){var He=Y.lastIndexOf(S);He>-1&&(Y=Y.slice(0,He))}return Y+b}function qA(a){return a=Pt(a),a&&Oe.test(a)?a.replace(B,bb):a}var YA=qs(function(a,l,f){return a+(f?" ":"")+l.toUpperCase()}),Hh=Vm("toUpperCase");function Gg(a,l,f){return a=Pt(a),l=f?t:l,l===t?gb(a)?wb(a):ob(a):a.match(l)||[]}var Hg=yt(function(a,l){try{return Jn(a,t,l)}catch(f){return Bh(f)?f:new lt(f)}}),$A=Zi(function(a,l){return hi(l,function(f){f=Oi(f),Yi(a,f,Oh(a[f],a))}),a});function ZA(a){var l=a==null?0:a.length,f=et();return a=l?qt(a,function(b){if(typeof b[1]!="function")throw new fi(o);return[f(b[0]),b[1]]}):[],yt(function(b){for(var S=-1;++S<l;){var L=a[S];if(Jn(L[0],this,b))return Jn(L[1],this,b)}})}function JA(a){return bM(pi(a,g))}function Vh(a){return function(){return a}}function KA(a,l){return a==null||a!==a?l:a}var jA=Xm(),QA=Xm(!0);function Wn(a){return a}function Wh(a){return bm(typeof a=="function"?a:pi(a,g))}function e1(a){return Sm(pi(a,g))}function t1(a,l){return wm(a,pi(l,g))}var n1=yt(function(a,l){return function(f){return Ka(f,a,l)}}),i1=yt(function(a,l){return function(f){return Ka(a,f,l)}});function Xh(a,l,f){var b=gn(l),S=wl(l,b);f==null&&!(Yt(l)&&(S.length||!b.length))&&(f=l,l=a,a=this,S=wl(l,gn(l)));var L=!(Yt(f)&&"chain"in f)||!!f.chain,z=Ki(a);return hi(S,function(G){var Y=l[G];a[G]=Y,z&&(a.prototype[G]=function(){var we=this.__chain__;if(L||we){var Ae=a(this.__wrapped__),De=Ae.__actions__=Gn(this.__actions__);return De.push({func:Y,args:arguments,thisArg:a}),Ae.__chain__=we,Ae}return Y.apply(a,vr([this.value()],arguments))})}),a}function r1(){return vn._===this&&(vn._=Lb),this}function qh(){}function s1(a){return a=dt(a),yt(function(l){return Em(l,a)})}var a1=Sh(qt),o1=Sh(qp),l1=Sh($u);function Vg(a){return Lh(a)?Zu(Oi(a)):BM(a)}function c1(a){return function(l){return a==null?t:Jr(a,l)}}var u1=Ym(),h1=Ym(!0);function Yh(){return[]}function $h(){return!1}function f1(){return{}}function d1(){return""}function p1(){return!0}function m1(a,l){if(a=dt(a),a<1||a>ve)return[];var f=Se,b=Mn(a,Se);l=et(l),a-=Se;for(var S=ju(b,l);++f<a;)l(f);return S}function g1(a){return ut(a)?qt(a,Oi):Qn(a)?[a]:Gn(cg(Pt(a)))}function _1(a){var l=++Cb;return Pt(a)+l}var v1=Ll(function(a,l){return a+l},0),x1=wh("ceil"),y1=Ll(function(a,l){return a/l},1),b1=wh("floor");function M1(a){return a&&a.length?Sl(a,Wn,ch):t}function S1(a,l){return a&&a.length?Sl(a,et(l,2),ch):t}function w1(a){return Zp(a,Wn)}function E1(a,l){return Zp(a,et(l,2))}function A1(a){return a&&a.length?Sl(a,Wn,dh):t}function T1(a,l){return a&&a.length?Sl(a,et(l,2),dh):t}var C1=Ll(function(a,l){return a*l},1),R1=wh("round"),L1=Ll(function(a,l){return a-l},0);function P1(a){return a&&a.length?Ku(a,Wn):0}function I1(a,l){return a&&a.length?Ku(a,et(l,2)):0}return C.after=eE,C.ary=yg,C.assign=GE,C.assignIn=Ug,C.assignInWith=Vl,C.assignWith=HE,C.at=VE,C.before=bg,C.bind=Oh,C.bindAll=$A,C.bindKey=Mg,C.castArray=fE,C.chain=_g,C.chunk=bS,C.compact=MS,C.concat=SS,C.cond=ZA,C.conforms=JA,C.constant=Vh,C.countBy=Pw,C.create=WE,C.curry=Sg,C.curryRight=wg,C.debounce=Eg,C.defaults=XE,C.defaultsDeep=qE,C.defer=tE,C.delay=nE,C.difference=wS,C.differenceBy=ES,C.differenceWith=AS,C.drop=TS,C.dropRight=CS,C.dropRightWhile=RS,C.dropWhile=LS,C.fill=PS,C.filter=Dw,C.flatMap=Ow,C.flatMapDeep=Fw,C.flatMapDepth=Bw,C.flatten=dg,C.flattenDeep=IS,C.flattenDepth=DS,C.flip=iE,C.flow=jA,C.flowRight=QA,C.fromPairs=US,C.functions=QE,C.functionsIn=eA,C.groupBy=zw,C.initial=OS,C.intersection=FS,C.intersectionBy=BS,C.intersectionWith=zS,C.invert=nA,C.invertBy=iA,C.invokeMap=Gw,C.iteratee=Wh,C.keyBy=Hw,C.keys=gn,C.keysIn=Vn,C.map=Fl,C.mapKeys=sA,C.mapValues=aA,C.matches=e1,C.matchesProperty=t1,C.memoize=zl,C.merge=oA,C.mergeWith=Ng,C.method=n1,C.methodOf=i1,C.mixin=Xh,C.negate=kl,C.nthArg=s1,C.omit=lA,C.omitBy=cA,C.once=rE,C.orderBy=Vw,C.over=a1,C.overArgs=sE,C.overEvery=o1,C.overSome=l1,C.partial=Fh,C.partialRight=Ag,C.partition=Ww,C.pick=uA,C.pickBy=Og,C.property=Vg,C.propertyOf=c1,C.pull=VS,C.pullAll=mg,C.pullAllBy=WS,C.pullAllWith=XS,C.pullAt=qS,C.range=u1,C.rangeRight=h1,C.rearg=aE,C.reject=Yw,C.remove=YS,C.rest=oE,C.reverse=Uh,C.sampleSize=Zw,C.set=fA,C.setWith=dA,C.shuffle=Jw,C.slice=$S,C.sortBy=Qw,C.sortedUniq=tw,C.sortedUniqBy=nw,C.split=OA,C.spread=lE,C.tail=iw,C.take=rw,C.takeRight=sw,C.takeRightWhile=aw,C.takeWhile=ow,C.tap=Mw,C.throttle=cE,C.thru=Ol,C.toArray=Pg,C.toPairs=Fg,C.toPairsIn=Bg,C.toPath=g1,C.toPlainObject=Dg,C.transform=pA,C.unary=uE,C.union=lw,C.unionBy=cw,C.unionWith=uw,C.uniq=hw,C.uniqBy=fw,C.uniqWith=dw,C.unset=mA,C.unzip=Nh,C.unzipWith=gg,C.update=gA,C.updateWith=_A,C.values=Zs,C.valuesIn=vA,C.without=pw,C.words=Gg,C.wrap=hE,C.xor=mw,C.xorBy=gw,C.xorWith=_w,C.zip=vw,C.zipObject=xw,C.zipObjectDeep=yw,C.zipWith=bw,C.entries=Fg,C.entriesIn=Bg,C.extend=Ug,C.extendWith=Vl,Xh(C,C),C.add=v1,C.attempt=Hg,C.camelCase=MA,C.capitalize=zg,C.ceil=x1,C.clamp=xA,C.clone=dE,C.cloneDeep=mE,C.cloneDeepWith=gE,C.cloneWith=pE,C.conformsTo=_E,C.deburr=kg,C.defaultTo=KA,C.divide=y1,C.endsWith=SA,C.eq=Si,C.escape=wA,C.escapeRegExp=EA,C.every=Iw,C.find=Uw,C.findIndex=hg,C.findKey=YE,C.findLast=Nw,C.findLastIndex=fg,C.findLastKey=$E,C.floor=b1,C.forEach=vg,C.forEachRight=xg,C.forIn=ZE,C.forInRight=JE,C.forOwn=KE,C.forOwnRight=jE,C.get=kh,C.gt=vE,C.gte=xE,C.has=tA,C.hasIn=Gh,C.head=pg,C.identity=Wn,C.includes=kw,C.indexOf=NS,C.inRange=yA,C.invoke=rA,C.isArguments=Qr,C.isArray=ut,C.isArrayBuffer=yE,C.isArrayLike=Hn,C.isArrayLikeObject=tn,C.isBoolean=bE,C.isBuffer=Er,C.isDate=ME,C.isElement=SE,C.isEmpty=wE,C.isEqual=EE,C.isEqualWith=AE,C.isError=Bh,C.isFinite=TE,C.isFunction=Ki,C.isInteger=Tg,C.isLength=Gl,C.isMap=Cg,C.isMatch=CE,C.isMatchWith=RE,C.isNaN=LE,C.isNative=PE,C.isNil=DE,C.isNull=IE,C.isNumber=Rg,C.isObject=Yt,C.isObjectLike=Jt,C.isPlainObject=io,C.isRegExp=zh,C.isSafeInteger=UE,C.isSet=Lg,C.isString=Hl,C.isSymbol=Qn,C.isTypedArray=$s,C.isUndefined=NE,C.isWeakMap=OE,C.isWeakSet=FE,C.join=kS,C.kebabCase=AA,C.last=gi,C.lastIndexOf=GS,C.lowerCase=TA,C.lowerFirst=CA,C.lt=BE,C.lte=zE,C.max=M1,C.maxBy=S1,C.mean=w1,C.meanBy=E1,C.min=A1,C.minBy=T1,C.stubArray=Yh,C.stubFalse=$h,C.stubObject=f1,C.stubString=d1,C.stubTrue=p1,C.multiply=C1,C.nth=HS,C.noConflict=r1,C.noop=qh,C.now=Bl,C.pad=RA,C.padEnd=LA,C.padStart=PA,C.parseInt=IA,C.random=bA,C.reduce=Xw,C.reduceRight=qw,C.repeat=DA,C.replace=UA,C.result=hA,C.round=R1,C.runInContext=W,C.sample=$w,C.size=Kw,C.snakeCase=NA,C.some=jw,C.sortedIndex=ZS,C.sortedIndexBy=JS,C.sortedIndexOf=KS,C.sortedLastIndex=jS,C.sortedLastIndexBy=QS,C.sortedLastIndexOf=ew,C.startCase=FA,C.startsWith=BA,C.subtract=L1,C.sum=P1,C.sumBy=I1,C.template=zA,C.times=m1,C.toFinite=ji,C.toInteger=dt,C.toLength=Ig,C.toLower=kA,C.toNumber=_i,C.toSafeInteger=kE,C.toString=Pt,C.toUpper=GA,C.trim=HA,C.trimEnd=VA,C.trimStart=WA,C.truncate=XA,C.unescape=qA,C.uniqueId=_1,C.upperCase=YA,C.upperFirst=Hh,C.each=vg,C.eachRight=xg,C.first=pg,Xh(C,function(){var a={};return Ui(C,function(l,f){Dt.call(C.prototype,f)||(a[f]=l)}),a}(),{chain:!1}),C.VERSION=n,hi(["bind","bindKey","curry","curryRight","partial","partialRight"],function(a){C[a].placeholder=C}),hi(["drop","take"],function(a,l){wt.prototype[a]=function(f){f=f===t?1:fn(dt(f),0);var b=this.__filtered__&&!l?new wt(this):this.clone();return b.__filtered__?b.__takeCount__=Mn(f,b.__takeCount__):b.__views__.push({size:Mn(f,Se),type:a+(b.__dir__<0?"Right":"")}),b},wt.prototype[a+"Right"]=function(f){return this.reverse()[a](f).reverse()}}),hi(["filter","map","takeWhile"],function(a,l){var f=l+1,b=f==H||f==Q;wt.prototype[a]=function(S){var L=this.clone();return L.__iteratees__.push({iteratee:et(S,3),type:f}),L.__filtered__=L.__filtered__||b,L}}),hi(["head","last"],function(a,l){var f="take"+(l?"Right":"");wt.prototype[a]=function(){return this[f](1).value()[0]}}),hi(["initial","tail"],function(a,l){var f="drop"+(l?"":"Right");wt.prototype[a]=function(){return this.__filtered__?new wt(this):this[f](1)}}),wt.prototype.compact=function(){return this.filter(Wn)},wt.prototype.find=function(a){return this.filter(a).head()},wt.prototype.findLast=function(a){return this.reverse().find(a)},wt.prototype.invokeMap=yt(function(a,l){return typeof a=="function"?new wt(this):this.map(function(f){return Ka(f,a,l)})}),wt.prototype.reject=function(a){return this.filter(kl(et(a)))},wt.prototype.slice=function(a,l){a=dt(a);var f=this;return f.__filtered__&&(a>0||l<0)?new wt(f):(a<0?f=f.takeRight(-a):a&&(f=f.drop(a)),l!==t&&(l=dt(l),f=l<0?f.dropRight(-l):f.take(l-a)),f)},wt.prototype.takeRightWhile=function(a){return this.reverse().takeWhile(a).reverse()},wt.prototype.toArray=function(){return this.take(Se)},Ui(wt.prototype,function(a,l){var f=/^(?:filter|find|map|reject)|While$/.test(l),b=/^(?:head|last)$/.test(l),S=C[b?"take"+(l=="last"?"Right":""):l],L=b||/^find/.test(l);S&&(C.prototype[l]=function(){var z=this.__wrapped__,G=b?[1]:arguments,Y=z instanceof wt,we=G[0],Ae=Y||ut(z),De=function(Mt){var Et=S.apply(C,vr([Mt],G));return b&&He?Et[0]:Et};Ae&&f&&typeof we=="function"&&we.length!=1&&(Y=Ae=!1);var He=this.__chain__,Ke=!!this.__actions__.length,it=L&&!He,_t=Y&&!Ke;if(!L&&Ae){z=_t?z:new wt(this);var rt=a.apply(z,G);return rt.__actions__.push({func:Ol,args:[De],thisArg:t}),new di(rt,He)}return it&&_t?a.apply(this,G):(rt=this.thru(De),it?b?rt.value()[0]:rt.value():rt)})}),hi(["pop","push","shift","sort","splice","unshift"],function(a){var l=ll[a],f=/^(?:push|sort|unshift)$/.test(a)?"tap":"thru",b=/^(?:pop|shift)$/.test(a);C.prototype[a]=function(){var S=arguments;if(b&&!this.__chain__){var L=this.value();return l.apply(ut(L)?L:[],S)}return this[f](function(z){return l.apply(ut(z)?z:[],S)})}}),Ui(wt.prototype,function(a,l){var f=C[l];if(f){var b=f.name+"";Dt.call(Vs,b)||(Vs[b]=[]),Vs[b].push({name:l,func:f})}}),Vs[Rl(t,x).name]=[{name:"wrapper",func:t}],wt.prototype.clone=qb,wt.prototype.reverse=Yb,wt.prototype.value=$b,C.prototype.at=Sw,C.prototype.chain=ww,C.prototype.commit=Ew,C.prototype.next=Aw,C.prototype.plant=Cw,C.prototype.reverse=Rw,C.prototype.toJSON=C.prototype.valueOf=C.prototype.value=Lw,C.prototype.first=C.prototype.head,Wa&&(C.prototype[Wa]=Tw),C},ks=Eb();Xr?((Xr.exports=ks)._=ks,Wu._=ks):vn._=ks}).call(ri)})(tu,tu.exports);tu.exports;var D0={exports:{}};const UD=U1(TD);(function(r,e){(function(t,n){n(e,UD)})(ri,function(t,n){function i(X,Z){var $=Object.keys(X);if(Object.getOwnPropertySymbols){var ue=Object.getOwnPropertySymbols(X);Z&&(ue=ue.filter(function(me){return Object.getOwnPropertyDescriptor(X,me).enumerable})),$.push.apply($,ue)}return $}function s(X){for(var Z=1;Z<arguments.length;Z++){var $=arguments[Z]!=null?arguments[Z]:{};Z%2?i(Object($),!0).forEach(function(ue){h(X,ue,$[ue])}):Object.getOwnPropertyDescriptors?Object.defineProperties(X,Object.getOwnPropertyDescriptors($)):i(Object($)).forEach(function(ue){Object.defineProperty(X,ue,Object.getOwnPropertyDescriptor($,ue))})}return X}function o(X,Z){if(!(X instanceof Z))throw new TypeError("Cannot call a class as a function")}function c(X,Z){for(var $=0;$<Z.length;$++){var ue=Z[$];ue.enumerable=ue.enumerable||!1,ue.configurable=!0,"value"in ue&&(ue.writable=!0),Object.defineProperty(X,y(ue.key),ue)}}function u(X,Z,$){return Z&&c(X.prototype,Z),$&&c(X,$),Object.defineProperty(X,"prototype",{writable:!1}),X}function h(X,Z,$){return(Z=y(Z))in X?Object.defineProperty(X,Z,{value:$,enumerable:!0,configurable:!0,writable:!0}):X[Z]=$,X}function p(X,Z){if(typeof Z!="function"&&Z!==null)throw new TypeError("Super expression must either be null or a function");X.prototype=Object.create(Z&&Z.prototype,{constructor:{value:X,writable:!0,configurable:!0}}),Object.defineProperty(X,"prototype",{writable:!1}),Z&&d(X,Z)}function g(X){return g=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(Z){return Z.__proto__||Object.getPrototypeOf(Z)},g(X)}function d(X,Z){return d=Object.setPrototypeOf?Object.setPrototypeOf.bind():function($,ue){return $.__proto__=ue,$},d(X,Z)}function m(X,Z){if(Z&&(typeof Z=="object"||typeof Z=="function"))return Z;if(Z!==void 0)throw new TypeError("Derived constructors may only return object or undefined");return function($){if($===void 0)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return $}(X)}function _(X){var Z=function(){if(typeof Reflect>"u"||!Reflect.construct||Reflect.construct.sham)return!1;if(typeof Proxy=="function")return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){})),!0}catch{return!1}}();return function(){var $,ue=g(X);if(Z){var me=g(this).constructor;$=Reflect.construct(ue,arguments,me)}else $=ue.apply(this,arguments);return m(this,$)}}function y(X){var Z=function($,ue){if(typeof $!="object"||$===null)return $;var me=$[Symbol.toPrimitive];if(me!==void 0){var I=me.call($,ue||"default");if(typeof I!="object")return I;throw new TypeError("@@toPrimitive must return a primitive value.")}return(ue==="string"?String:Number)($)}(X,"string");return typeof Z=="symbol"?Z:String(Z)}var v={exports:{}};(function(X){var Z=/\n/,$=`
`,ue=/\s/;function me(J,ee,j,Ce){var Re=J.indexOf(ee,j);return Re===-1||Re>Ce?Ce:Re}function I(J){return ue.test(J)}function ge(J,ee,j,Ce){return{start:ee,end:ee+Math.min(Ce,j-ee)}}X.exports=function(J,ee){return X.exports.lines(J,ee).map(function(j){return J.substring(j.start,j.end)}).join(`
`)},X.exports.lines=function(J,ee){if((ee=ee||{}).width===0&&ee.mode!=="nowrap")return[];J=J||"";var j=typeof ee.width=="number"?ee.width:Number.MAX_VALUE,Ce=Math.max(0,ee.start||0),Re=typeof ee.end=="number"?ee.end:J.length,R=ee.mode,A=ee.measure||ge;return R==="pre"?function(k,ie,te,de,oe){for(var xe=[],pe=te,_e=te;_e<de&&_e<ie.length;_e++){var Fe=ie.charAt(_e),q=Z.test(Fe);if(q||_e===de-1){var Ue=k(ie,pe,q?_e:_e+1,oe);xe.push(Ue),pe=_e+1}}return xe}(A,J,Ce,Re,j):function(k,ie,te,de,oe,xe){var pe=[],_e=oe;for(xe==="nowrap"&&(_e=Number.MAX_VALUE);te<de&&te<ie.length;){for(var Fe=me(ie,$,te,de);te<Fe&&I(ie.charAt(te));)te++;var q=k(ie,te,Fe,_e),Ue=te+(q.end-q.start),Ee=Ue+$.length;if(Ue<Fe){for(;Ue>te&&!I(ie.charAt(Ue));)Ue--;if(Ue===te)Ee>te+$.length&&Ee--,Ue=Ee;else for(Ee=Ue;Ue>te&&I(ie.charAt(Ue-$.length));)Ue--}if(Ue>=te){var ze=k(ie,te,Ue,_e);pe.push(ze)}te=Ee}return pe}(A,J,Ce,Re,j,R)}})(v);var x=v.exports,w=["x","e","a","o","n","s","r","c","u","m","v","w","z"],M=["m","w"],E=["H","I","N","E","F","K","L","T","U","V","W","X","Y","Z"],O=9,P=32,U=function(){function X(){var Z=arguments.length>0&&arguments[0]!==void 0?arguments[0]:{};o(this,X),this.glyphs=[],this._measure=this.computeMetrics.bind(this),this.update(Z)}return u(X,[{key:"width",get:function(){return this._width}},{key:"height",get:function(){return this._height}},{key:"descender",get:function(){return this._descender}},{key:"ascender",get:function(){return this._ascender}},{key:"xHeight",get:function(){return this._xHeight}},{key:"baseline",get:function(){return this._baseline}},{key:"capHeight",get:function(){return this._capHeight}},{key:"lineHeight",get:function(){return this._lineHeight}},{key:"linesTotal",get:function(){return this._linesTotal}},{key:"lettersTotal",get:function(){return this._lettersTotal}},{key:"wordsTotal",get:function(){return this._wordsTotal}},{key:"update",value:function(Z){var $=this;if(Z=Object.assign({measure:this._measure},Z),this._options=Z,this._options.tabSize=N(this._options.tabSize,4),!Z.font)throw new Error("must provide a valid bitmap font");var ue=this.glyphs,me=Z.text||"",I=Z.font;this._setupSpaceGlyphs(I);var ge=x.lines(me,Z),J=Z.width||0,ee=me.split(" ").filter(function(_e){return _e!==`
`}).length,j=me.split("").filter(function(_e){return _e!==`
`&&_e!==" "}).length;ue.length=0;var Ce=ge.reduce(function(_e,Fe){return Math.max(_e,Fe.width,J)},0),Re=0,R=0,A=N(Z.lineHeight,I.common.lineHeight),k=I.common.base,ie=A-k,te=Z.letterSpacing||0,de=A*ge.length-ie,oe=function(_e){return _e==="center"?1:_e==="right"?2:0}(this._options.align);R-=de,this._width=Ce,this._height=de,this._descender=A-k,this._baseline=k,this._xHeight=function(_e){for(var Fe=0;Fe<w.length;Fe++){var q=w[Fe].charCodeAt(0),Ue=T(_e.chars,q);if(Ue>=0)return _e.chars[Ue].height}return 0}(I),this._capHeight=function(_e){for(var Fe=0;Fe<E.length;Fe++){var q=E[Fe].charCodeAt(0),Ue=T(_e.chars,q);if(Ue>=0)return _e.chars[Ue].height}return 0}(I),this._lineHeight=A,this._ascender=A-ie-this._xHeight;var xe=0,pe=0;ge.forEach(function(_e,Fe){for(var q,Ue=_e.start,Ee=_e.end,ze=_e.width,Xe=me.slice(Ue,Ee).split(" ").filter(function(Ne){return Ne!==""}).length,ke=me.slice(Ue,Ee).split(" ").join("").length,st=0,St=0,Tt=Ue;Tt<Ee;Tt++){var mt=me.charCodeAt(Tt),bt=$.getGlyph(I,mt);if(bt){q&&(Re+=se(I,q.id,bt.id));var B=Re;oe===1?B+=(Ce-ze)/2:oe===2&&(B+=Ce-ze),ue.push({position:[B,R],data:bt,index:Tt,linesTotal:ge.length,lineIndex:Fe,lineLettersTotal:ke,lineLetterIndex:st,lineWordsTotal:Xe,lineWordIndex:St,wordsTotal:ee,wordIndex:xe,lettersTotal:j,letterIndex:pe}),bt.id===P&&q.id!==P&&(St++,xe++),bt.id!==P&&(st++,pe++),Re+=bt.xadvance+te,q=bt}}R+=A,Re=0}),this._lettersTotal=j,this._wordsTotal=ee,this._linesTotal=ge.length}},{key:"getGlyph",value:function(Z,$){var ue=V(Z,$);return ue||($===O?this._fallbackTabGlyph:$===P?this._fallbackSpaceGlyph:null)}},{key:"computeMetrics",value:function(Z,$,ue,me){var I,ge,J=this._options.letterSpacing||0,ee=this._options.font,j=0,Ce=0,Re=0;if(!ee.chars||ee.chars.length===0)return{start:$,end:$,width:0};ue=Math.min(Z.length,ue);for(var R=$;R<ue;R++){var A=Z.charCodeAt(R);if(I=this.getGlyph(ee,A)){I.char=Z[R],I.xoffset;var k=(j+=ge?se(ee,ge.id,I.id):0)+I.xadvance+J,ie=j+I.width;if(ie>=me||k>=me)break;j=k,Ce=ie,ge=I}Re++}return ge&&(Ce+=ge.xoffset),{start:$,end:$+Re,width:Ce}}},{key:"_setupSpaceGlyphs",value:function(Z){if(this._fallbackSpaceGlyph=null,this._fallbackTabGlyph=null,Z.chars&&Z.chars.length!==0){var $=V(Z,P)||function(I){for(var ge=0;ge<M.length;ge++){var J=M[ge].charCodeAt(0),ee=T(I.chars,J);if(ee>=0)return I.chars[ee]}return 0}(Z)||Z.chars[0],ue=this._options.tabSize*$.xadvance;this._fallbackSpaceGlyph=$;var me=Object.assign({},$);this._fallbackTabGlyph=Object.assign(me,{x:0,y:0,xadvance:ue,id:O,xoffset:0,yoffset:0,width:0,height:0})}}}]),X}();function V(X,Z){if(!X.chars||X.chars.length===0)return null;var $=T(X.chars,Z);return $>=0?X.chars[$]:null}function se(X,Z,$){if(!X.kernings||X.kernings.length===0)return 0;for(var ue=X.kernings,me=0;me<ue.length;me++){var I=ue[me];if(I.first===Z&&I.second===$)return I.amount}return 0}function T(X,Z,$){for(var ue=$=$||0;ue<X.length;ue++)if(X[ue].id===Z)return ue;return-1}function N(X,Z){return typeof X=="number"?X:typeof Z=="number"?Z:0}var ne={min:[0,0],max:[0,0]};function Te(X){var Z=X.length/2;ne.min[0]=X[0],ne.min[1]=X[1],ne.max[0]=X[0],ne.max[1]=X[1];for(var $=0;$<Z;$++){var ue=X[2*$+0],me=X[2*$+1];ne.min[0]=Math.min(ue,ne.min[0]),ne.min[1]=Math.min(me,ne.min[1]),ne.max[0]=Math.max(ue,ne.max[0]),ne.max[1]=Math.max(me,ne.max[1])}}var H={computeBox:function(X,Z){return Te(X),Z.min.set(ne.min[0],ne.min[1],0),Z.max.set(ne.max[0],ne.max[1],0),Z},computeSphere:function(X,Z){Te(X);var $=ne.min[0],ue=ne.min[1],me=ne.max[0]-$,I=ne.max[1]-ue,ge=Math.sqrt(me*me+I*I);Z.center.set($+me/2,ue+I/2,0),Z.radius=ge/2}},re={pages:function(X){var Z=new Float32Array(4*X.length*1),$=0;return X.forEach(function(ue){var me=ue.data.page||0;Z[$++]=me,Z[$++]=me,Z[$++]=me,Z[$++]=me}),Z},attributes:function(X,Z,$,ue,me){var I=new Float32Array(4*X.length*2),ge=new Float32Array(4*X.length*2),J=new Float32Array(4*X.length*2),ee=new Float32Array(4*X.length*2),j=new Float32Array(4*X.length*2),Ce=new Float32Array(4*X.length*2),Re=0,R=0,A=0,k=0,ie=0,te=0;return X.forEach(function(de){var oe=de.data,xe=oe.x+oe.width,pe=oe.y+oe.height,_e=oe.x/Z,Fe=oe.y/$,q=xe/Z,Ue=pe/$;ue&&(Fe=($-oe.y)/$,Ue=($-pe)/$),I[Re++]=_e,I[Re++]=Fe,I[Re++]=_e,I[Re++]=Ue,I[Re++]=q,I[Re++]=Ue,I[Re++]=q,I[Re++]=Fe,ge[k++]=de.position[0]/me.width,ge[k++]=(de.position[1]+me.height)/me.height,ge[k++]=de.position[0]/me.width,ge[k++]=(de.position[1]+me.height+oe.height)/me.height,ge[k++]=(de.position[0]+oe.width)/me.width,ge[k++]=(de.position[1]+me.height+oe.height)/me.height,ge[k++]=(de.position[0]+oe.width)/me.width,ge[k++]=(de.position[1]+me.height)/me.height,J[ie++]=0,J[ie++]=1,J[ie++]=0,J[ie++]=0,J[ie++]=1,J[ie++]=0,J[ie++]=1,J[ie++]=1,ee[te++]=oe.width,ee[te++]=oe.height,ee[te++]=oe.width,ee[te++]=oe.height,ee[te++]=oe.width,ee[te++]=oe.height,ee[te++]=oe.width,ee[te++]=oe.height;var Ee=de.position[0]+oe.xoffset,ze=de.position[1]+oe.yoffset,Xe=oe.width,ke=oe.height;j[R++]=Ee,j[R++]=ze,j[R++]=Ee,j[R++]=ze+ke,j[R++]=Ee+Xe,j[R++]=ze+ke,j[R++]=Ee+Xe,j[R++]=ze,Ce[A++]=Ee+Xe/2,Ce[A++]=ze+ke/2,Ce[A++]=Ee+Xe/2,Ce[A++]=ze+ke/2,Ce[A++]=Ee+Xe/2,Ce[A++]=ze+ke/2,Ce[A++]=Ee+Xe/2,Ce[A++]=ze+ke/2}),{uvs:I,layoutUvs:ge,positions:j,centers:Ce,glyphUvs:J,glyphResolution:ee}},infos:function(X,Z){for(var $=new Float32Array(4*X.length),ue=new Float32Array(4*X.length),me=new Float32Array(4*X.length),I=new Float32Array(4*X.length),ge=new Float32Array(4*X.length),J=new Float32Array(4*X.length),ee=new Float32Array(4*X.length),j=new Float32Array(4*X.length),Ce=new Float32Array(4*X.length),Re=new Float32Array(4*X.length),R=0,A=0,k=0,ie=0,te=0,de=0,oe=0,xe=0,pe=0,_e=0,Fe=0;Fe<X.length;Fe++){var q=X[Fe];$[R++]=q.linesTotal,$[R++]=q.linesTotal,$[R++]=q.linesTotal,$[R++]=q.linesTotal,ue[A++]=q.lineIndex,ue[A++]=q.lineIndex,ue[A++]=q.lineIndex,ue[A++]=q.lineIndex,me[k++]=q.lineLettersTotal,me[k++]=q.lineLettersTotal,me[k++]=q.lineLettersTotal,me[k++]=q.lineLettersTotal,I[ie++]=q.lineLetterIndex,I[ie++]=q.lineLetterIndex,I[ie++]=q.lineLetterIndex,I[ie++]=q.lineLetterIndex,ge[te++]=q.lineWordsTotal,ge[te++]=q.lineWordsTotal,ge[te++]=q.lineWordsTotal,ge[te++]=q.lineWordsTotal,J[de++]=q.lineWordIndex,J[de++]=q.lineWordIndex,J[de++]=q.lineWordIndex,J[de++]=q.lineWordIndex,ee[oe++]=q.wordsTotal,ee[oe++]=q.wordsTotal,ee[oe++]=q.wordsTotal,ee[oe++]=q.wordsTotal,j[xe++]=q.wordIndex,j[xe++]=q.wordIndex,j[xe++]=q.wordIndex,j[xe++]=q.wordIndex,Ce[pe++]=q.lettersTotal,Ce[pe++]=q.lettersTotal,Ce[pe++]=q.lettersTotal,Ce[pe++]=q.lettersTotal,Re[_e++]=q.letterIndex,Re[_e++]=q.letterIndex,Re[_e++]=q.letterIndex,Re[_e++]=q.letterIndex}return{linesTotal:$,lineIndex:ue,lineLettersTotal:me,lineLetterIndex:I,lineWordsTotal:ge,lineWordIndex:J,wordsTotal:ee,wordIndex:j,lettersTotal:Ce,letterIndex:Re}}},Q=Object.prototype.toString;function Me(X){return!!X.constructor&&typeof X.constructor.isBuffer=="function"&&X.constructor.isBuffer(X)}var ve=function(X){switch(X){case"int8":return Int8Array;case"int16":return Int16Array;case"int32":return Int32Array;case"uint8":return Uint8Array;case"uint16":return Uint16Array;case"uint32":return Uint32Array;case"float32":return Float32Array;case"float64":return Float64Array;case"array":return Array;case"uint8_clamped":return Uint8ClampedArray}},be=function(X){return X.BYTES_PER_ELEMENT&&Q.call(X.buffer)==="[object ArrayBuffer]"||Array.isArray(X)},Ie=function(X){return X!=null&&(Me(X)||function(Z){return typeof Z.readFloatLE=="function"&&typeof Z.slice=="function"&&Me(Z.slice(0,0))}(X)||!!X._isBuffer)},Se=[0,2,3],Ve=[2,1,3],je=function(X){p($,X);var Z=_($);function $(ue){var me;return o(this,$),typeof ue=="string"&&(ue={text:ue}),(me=Z.call(this))._options=Object.assign({},ue),me._layout=null,me._visibleGlyphs=[],me.update(me._options),me}return u($,[{key:"layout",get:function(){return this._layout}},{key:"visibleGlyphs",get:function(){return this._visibleGlyphs}},{key:"update",value:function(ue){if(ue=this._validateOptions(ue)){this._layout=function(A){return new U(A)}(ue);var me=ue.flipY!==!1,I=ue.font,ge=I.common.scaleW,J=I.common.scaleH,ee=this._layout.glyphs.filter(function(A){var k=A.data;return k.width*k.height>0});this._visibleGlyphs=ee;var j=re.attributes(ee,ge,J,me,this._layout),Ce=re.infos(ee,this._layout),Re=function(A,k){A&&(be(A)||Ie(A))||(k=A||{},A=null);for(var ie=typeof(k=typeof k=="number"?{count:k}:k||{}).type=="string"?k.type:"uint16",te=typeof k.count=="number"?k.count:1,de=k.start||0,oe=k.clockwise!==!1?Se:Ve,xe=oe[0],pe=oe[1],_e=oe[2],Fe=6*te,q=A||new(ve(ie))(Fe),Ue=0,Ee=0;Ue<Fe;Ue+=6,Ee+=4){var ze=Ue+de;q[ze+0]=Ee+0,q[ze+1]=Ee+1,q[ze+2]=Ee+2,q[ze+3]=Ee+xe,q[ze+4]=Ee+pe,q[ze+5]=Ee+_e}return q}([],{clockwise:!0,type:"uint16",count:ee.length});if(this.setIndex(Re),this.setAttribute("position",new n.BufferAttribute(j.positions,2)),this.setAttribute("center",new n.BufferAttribute(j.centers,2)),this.setAttribute("uv",new n.BufferAttribute(j.uvs,2)),this.setAttribute("layoutUv",new n.BufferAttribute(j.layoutUvs,2)),this.setAttribute("glyphUv",new n.BufferAttribute(j.glyphUvs,2)),this.setAttribute("glyphResolution",new n.BufferAttribute(j.glyphResolution,2)),this.setAttribute("lineIndex",new n.BufferAttribute(Ce.lineIndex,1)),this.setAttribute("lineLettersTotal",new n.BufferAttribute(Ce.lineLettersTotal,1)),this.setAttribute("lineLetterIndex",new n.BufferAttribute(Ce.lineLetterIndex,1)),this.setAttribute("lineWordsTotal",new n.BufferAttribute(Ce.lineWordsTotal,1)),this.setAttribute("lineWordIndex",new n.BufferAttribute(Ce.lineWordIndex,1)),this.setAttribute("wordIndex",new n.BufferAttribute(Ce.wordIndex,1)),this.setAttribute("letterIndex",new n.BufferAttribute(Ce.letterIndex,1)),!ue.multipage&&"page"in this.attributes)this.deleteAttribute("page");else if(ue.multipage){var R=re.pages(ee);this.setAttribute("page",new n.BufferAttribute(R,1))}}}},{key:"computeBoundingSphere",value:function(){this.boundingSphere===null&&(this.boundingSphere=new n.Sphere);var ue=this.attributes.position.array,me=this.attributes.position.itemSize;if(!ue||!me||ue.length<2)return this.boundingSphere.radius=0,void this.boundingSphere.center.set(0,0,0);H.computeSphere(ue,this.boundingSphere),isNaN(this.boundingSphere.radius)&&console.error('BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.')}},{key:"computeBoundingBox",value:function(){this.boundingBox===null&&(this.boundingBox=new n.Box3);var ue=this.boundingBox,me=this.attributes.position.array,I=this.attributes.position.itemSize;if(me&&I&&!(me.length<2))return H.computeBox(me,ue);ue.makeEmpty()}},{key:"_validateOptions",value:function(ue){if(typeof ue=="string"&&(ue={text:ue}),!(ue=Object.assign({},this._options,ue)).font)throw new TypeError("must specify a { font } in options");return ue}}]),$}(n.BufferGeometry),he={common:{uOpacity:{value:1},uColor:{value:{r:255,g:255,b:255}},uMap:{value:null}},rendering:{uThreshold:{value:.05},uAlphaTest:{value:.01}},strokes:{uStrokeColor:{value:{r:255,g:0,b:0}},uStrokeOutsetWidth:{value:0},uStrokeInsetWidth:{value:.3}}},Pe={side:n.FrontSide,transparent:!0,defines:{IS_SMALL:!1},extensions:{derivatives:!0},uniforms:s(s(s({},he.common),he.rendering),he.strokes),vertexShader:`#define GLSLIFY 1
attribute vec2 layoutUv;attribute float lineIndex;attribute float lineLettersTotal;attribute float lineLetterIndex;attribute float lineWordsTotal;attribute float lineWordIndex;attribute float wordIndex;attribute float letterIndex;varying vec2 vUv;varying vec2 vLayoutUv;varying vec3 vViewPosition;varying vec3 vNormal;varying float vLineIndex;varying float vLineLettersTotal;varying float vLineLetterIndex;varying float vLineWordsTotal;varying float vLineWordIndex;varying float vWordIndex;varying float vLetterIndex;void main(){vec4 mvPosition=vec4(position,1.0);mvPosition=modelViewMatrix*mvPosition;gl_Position=projectionMatrix*mvPosition;vUv=uv;vLayoutUv=layoutUv;vViewPosition=-mvPosition.xyz;vNormal=normal;vLineIndex=lineIndex;vLineLettersTotal=lineLettersTotal;vLineLetterIndex=lineLetterIndex;vLineWordsTotal=lineWordsTotal;vLineWordIndex=lineWordIndex;vWordIndex=wordIndex;vLetterIndex=letterIndex;}`,fragmentShader:`#define GLSLIFY 1
varying vec2 vUv;uniform float uOpacity;uniform float uThreshold;uniform float uAlphaTest;uniform vec3 uColor;uniform sampler2D uMap;uniform vec3 uStrokeColor;uniform float uStrokeOutsetWidth;uniform float uStrokeInsetWidth;float median(float r,float g,float b){return max(min(r,g),min(max(r,g),b));}void main(){vec3 s=texture2D(uMap,vUv).rgb;float sigDist=median(s.r,s.g,s.b)-0.5;float afwidth=1.4142135623730951/2.0;
#ifdef IS_SMALL
float alpha=smoothstep(uThreshold-afwidth,uThreshold+afwidth,sigDist);
#else
float alpha=clamp(sigDist/fwidth(sigDist)+0.5,0.0,1.0);
#endif
float sigDistOutset=sigDist+uStrokeOutsetWidth*0.5;float sigDistInset=sigDist-uStrokeInsetWidth*0.5;
#ifdef IS_SMALL
float outset=smoothstep(uThreshold-afwidth,uThreshold+afwidth,sigDistOutset);float inset=1.0-smoothstep(uThreshold-afwidth,uThreshold+afwidth,sigDistInset);
#else
float outset=clamp(sigDistOutset/fwidth(sigDistOutset)+0.5,0.0,1.0);float inset=1.0-clamp(sigDistInset/fwidth(sigDistInset)+0.5,0.0,1.0);
#endif
float border=outset*inset;if(alpha<uAlphaTest)discard;vec4 filledFragColor=vec4(uColor,uOpacity*alpha);gl_FragColor=filledFragColor;}`},Ge=function(X){p($,X);var Z=_($);function $(){var ue=arguments.length>0&&arguments[0]!==void 0?arguments[0]:{};return o(this,$),ue=Object.assign(JSON.parse(JSON.stringify(Pe)),ue),Z.call(this,ue)}return u($)}(n.ShaderMaterial);t.MSDFTextGeometry=je,t.MSDFTextMaterial=Ge,t.uniforms=he,Object.defineProperty(t,"__esModule",{value:!0})})})(D0,D0.exports);var ND={exports:{}},Df={exports:{}},U0;function OD(){return U0||(U0=1,function(r){(function(e,t){r.exports?r.exports=t():e.EvEmitter=t()})(typeof window<"u"?window:ri,function(){function e(){}let t=e.prototype;return t.on=function(n,i){if(!n||!i)return this;let s=this._events=this._events||{},o=s[n]=s[n]||[];return o.includes(i)||o.push(i),this},t.once=function(n,i){if(!n||!i)return this;this.on(n,i);let s=this._onceEvents=this._onceEvents||{},o=s[n]=s[n]||{};return o[i]=!0,this},t.off=function(n,i){let s=this._events&&this._events[n];if(!s||!s.length)return this;let o=s.indexOf(i);return o!=-1&&s.splice(o,1),this},t.emitEvent=function(n,i){let s=this._events&&this._events[n];if(!s||!s.length)return this;s=s.slice(0),i=i||[];let o=this._onceEvents&&this._onceEvents[n];for(let c of s)o&&o[c]&&(this.off(n,c),delete o[c]),c.apply(this,i);return this},t.allOff=function(){return delete this._events,delete this._onceEvents,this},e})}(Df)),Df.exports}/*!
 * imagesLoaded v5.0.0
 * JavaScript is all like "You images are done yet or what?"
 * MIT License
 */(function(r){(function(e,t){r.exports?r.exports=t(e,OD()):e.imagesLoaded=t(e,e.EvEmitter)})(typeof window<"u"?window:ri,function(t,n){let i=t.jQuery,s=t.console;function o(d){return Array.isArray(d)?d:typeof d=="object"&&typeof d.length=="number"?[...d]:[d]}function c(d,m,_){if(!(this instanceof c))return new c(d,m,_);let y=d;if(typeof d=="string"&&(y=document.querySelectorAll(d)),!y){s.error(`Bad element for imagesLoaded ${y||d}`);return}this.elements=o(y),this.options={},typeof m=="function"?_=m:Object.assign(this.options,m),_&&this.on("always",_),this.getImages(),i&&(this.jqDeferred=new i.Deferred),setTimeout(this.check.bind(this))}c.prototype=Object.create(n.prototype),c.prototype.getImages=function(){this.images=[],this.elements.forEach(this.addElementImages,this)};const u=[1,9,11];c.prototype.addElementImages=function(d){d.nodeName==="IMG"&&this.addImage(d),this.options.background===!0&&this.addElementBackgroundImages(d);let{nodeType:m}=d;if(!m||!u.includes(m))return;let _=d.querySelectorAll("img");for(let y of _)this.addImage(y);if(typeof this.options.background=="string"){let y=d.querySelectorAll(this.options.background);for(let v of y)this.addElementBackgroundImages(v)}};const h=/url\((['"])?(.*?)\1\)/gi;c.prototype.addElementBackgroundImages=function(d){let m=getComputedStyle(d);if(!m)return;let _=h.exec(m.backgroundImage);for(;_!==null;){let y=_&&_[2];y&&this.addBackground(y,d),_=h.exec(m.backgroundImage)}},c.prototype.addImage=function(d){let m=new p(d);this.images.push(m)},c.prototype.addBackground=function(d,m){let _=new g(d,m);this.images.push(_)},c.prototype.check=function(){if(this.progressedCount=0,this.hasAnyBroken=!1,!this.images.length){this.complete();return}let d=(m,_,y)=>{setTimeout(()=>{this.progress(m,_,y)})};this.images.forEach(function(m){m.once("progress",d),m.check()})},c.prototype.progress=function(d,m,_){this.progressedCount++,this.hasAnyBroken=this.hasAnyBroken||!d.isLoaded,this.emitEvent("progress",[this,d,m]),this.jqDeferred&&this.jqDeferred.notify&&this.jqDeferred.notify(this,d),this.progressedCount===this.images.length&&this.complete(),this.options.debug&&s&&s.log(`progress: ${_}`,d,m)},c.prototype.complete=function(){let d=this.hasAnyBroken?"fail":"done";if(this.isComplete=!0,this.emitEvent(d,[this]),this.emitEvent("always",[this]),this.jqDeferred){let m=this.hasAnyBroken?"reject":"resolve";this.jqDeferred[m](this)}};function p(d){this.img=d}p.prototype=Object.create(n.prototype),p.prototype.check=function(){if(this.getIsImageComplete()){this.confirm(this.img.naturalWidth!==0,"naturalWidth");return}this.proxyImage=new Image,this.img.crossOrigin&&(this.proxyImage.crossOrigin=this.img.crossOrigin),this.proxyImage.addEventListener("load",this),this.proxyImage.addEventListener("error",this),this.img.addEventListener("load",this),this.img.addEventListener("error",this),this.proxyImage.src=this.img.currentSrc||this.img.src},p.prototype.getIsImageComplete=function(){return this.img.complete&&this.img.naturalWidth},p.prototype.confirm=function(d,m){this.isLoaded=d;let{parentNode:_}=this.img,y=_.nodeName==="PICTURE"?_:this.img;this.emitEvent("progress",[this,y,m])},p.prototype.handleEvent=function(d){let m="on"+d.type;this[m]&&this[m](d)},p.prototype.onload=function(){this.confirm(!0,"onload"),this.unbindEvents()},p.prototype.onerror=function(){this.confirm(!1,"onerror"),this.unbindEvents()},p.prototype.unbindEvents=function(){this.proxyImage.removeEventListener("load",this),this.proxyImage.removeEventListener("error",this),this.img.removeEventListener("load",this),this.img.removeEventListener("error",this)};function g(d,m){this.url=d,this.element=m,this.img=new Image}return g.prototype=Object.create(p.prototype),g.prototype.check=function(){this.img.addEventListener("load",this),this.img.addEventListener("error",this),this.img.src=this.url,this.getIsImageComplete()&&(this.confirm(this.img.naturalWidth!==0,"naturalWidth"),this.unbindEvents())},g.prototype.unbindEvents=function(){this.img.removeEventListener("load",this),this.img.removeEventListener("error",this)},g.prototype.confirm=function(d,m){this.isLoaded=d,this.emitEvent("progress",[this,this.element,m])},c.makeJQueryPlugin=function(d){d=d||t.jQuery,d&&(i=d,i.fn.imagesLoaded=function(m,_){return new c(this,m,_).jqDeferred.promise(i(this))})},c.makeJQueryPlugin(),c})})(ND);var Ud={exports:{}};(function(r,e){(function(t,n){var i="1.0.37",s="",o="?",c="function",u="undefined",h="object",p="string",g="major",d="model",m="name",_="type",y="vendor",v="version",x="architecture",w="console",M="mobile",E="tablet",O="smarttv",P="wearable",U="embedded",V=500,se="Amazon",T="Apple",N="ASUS",ne="BlackBerry",Te="Browser",H="Chrome",re="Edge",Q="Firefox",Me="Google",ve="Huawei",be="LG",Ie="Microsoft",Se="Motorola",Ve="Opera",je="Samsung",he="Sharp",Pe="Sony",Ge="Xiaomi",X="Zebra",Z="Facebook",$="Chromium OS",ue="Mac OS",me=function(oe,xe){var pe={};for(var _e in oe)xe[_e]&&xe[_e].length%2===0?pe[_e]=xe[_e].concat(oe[_e]):pe[_e]=oe[_e];return pe},I=function(oe){for(var xe={},pe=0;pe<oe.length;pe++)xe[oe[pe].toUpperCase()]=oe[pe];return xe},ge=function(oe,xe){return typeof oe===p?J(xe).indexOf(J(oe))!==-1:!1},J=function(oe){return oe.toLowerCase()},ee=function(oe){return typeof oe===p?oe.replace(/[^\d\.]/g,s).split(".")[0]:n},j=function(oe,xe){if(typeof oe===p)return oe=oe.replace(/^\s\s*/,s),typeof xe===u?oe:oe.substring(0,V)},Ce=function(oe,xe){for(var pe=0,_e,Fe,q,Ue,Ee,ze;pe<xe.length&&!Ee;){var Xe=xe[pe],ke=xe[pe+1];for(_e=Fe=0;_e<Xe.length&&!Ee&&Xe[_e];)if(Ee=Xe[_e++].exec(oe),Ee)for(q=0;q<ke.length;q++)ze=Ee[++Fe],Ue=ke[q],typeof Ue===h&&Ue.length>0?Ue.length===2?typeof Ue[1]==c?this[Ue[0]]=Ue[1].call(this,ze):this[Ue[0]]=Ue[1]:Ue.length===3?typeof Ue[1]===c&&!(Ue[1].exec&&Ue[1].test)?this[Ue[0]]=ze?Ue[1].call(this,ze,Ue[2]):n:this[Ue[0]]=ze?ze.replace(Ue[1],Ue[2]):n:Ue.length===4&&(this[Ue[0]]=ze?Ue[3].call(this,ze.replace(Ue[1],Ue[2])):n):this[Ue]=ze||n;pe+=2}},Re=function(oe,xe){for(var pe in xe)if(typeof xe[pe]===h&&xe[pe].length>0){for(var _e=0;_e<xe[pe].length;_e++)if(ge(xe[pe][_e],oe))return pe===o?n:pe}else if(ge(xe[pe],oe))return pe===o?n:pe;return oe},R={"1.0":"/8","1.2":"/1","1.3":"/3","2.0":"/412","2.0.2":"/416","2.0.3":"/417","2.0.4":"/419","?":"/"},A={ME:"4.90","NT 3.11":"NT3.51","NT 4.0":"NT4.0",2e3:"NT 5.0",XP:["NT 5.1","NT 5.2"],Vista:"NT 6.0",7:"NT 6.1",8:"NT 6.2","8.1":"NT 6.3",10:["NT 6.4","NT 10.0"],RT:"ARM"},k={browser:[[/\b(?:crmo|crios)\/([\w\.]+)/i],[v,[m,"Chrome"]],[/edg(?:e|ios|a)?\/([\w\.]+)/i],[v,[m,"Edge"]],[/(opera mini)\/([-\w\.]+)/i,/(opera [mobiletab]{3,6})\b.+version\/([-\w\.]+)/i,/(opera)(?:.+version\/|[\/ ]+)([\w\.]+)/i],[m,v],[/opios[\/ ]+([\w\.]+)/i],[v,[m,Ve+" Mini"]],[/\bopr\/([\w\.]+)/i],[v,[m,Ve]],[/\bb[ai]*d(?:uhd|[ub]*[aekoprswx]{5,6})[\/ ]?([\w\.]+)/i],[v,[m,"Baidu"]],[/(kindle)\/([\w\.]+)/i,/(lunascape|maxthon|netfront|jasmine|blazer)[\/ ]?([\w\.]*)/i,/(avant|iemobile|slim)\s?(?:browser)?[\/ ]?([\w\.]*)/i,/(?:ms|\()(ie) ([\w\.]+)/i,/(flock|rockmelt|midori|epiphany|silk|skyfire|bolt|iron|vivaldi|iridium|phantomjs|bowser|quark|qupzilla|falkon|rekonq|puffin|brave|whale(?!.+naver)|qqbrowserlite|qq|duckduckgo)\/([-\w\.]+)/i,/(heytap|ovi)browser\/([\d\.]+)/i,/(weibo)__([\d\.]+)/i],[m,v],[/(?:\buc? ?browser|(?:juc.+)ucweb)[\/ ]?([\w\.]+)/i],[v,[m,"UC"+Te]],[/microm.+\bqbcore\/([\w\.]+)/i,/\bqbcore\/([\w\.]+).+microm/i,/micromessenger\/([\w\.]+)/i],[v,[m,"WeChat"]],[/konqueror\/([\w\.]+)/i],[v,[m,"Konqueror"]],[/trident.+rv[: ]([\w\.]{1,9})\b.+like gecko/i],[v,[m,"IE"]],[/ya(?:search)?browser\/([\w\.]+)/i],[v,[m,"Yandex"]],[/slbrowser\/([\w\.]+)/i],[v,[m,"Smart Lenovo "+Te]],[/(avast|avg)\/([\w\.]+)/i],[[m,/(.+)/,"$1 Secure "+Te],v],[/\bfocus\/([\w\.]+)/i],[v,[m,Q+" Focus"]],[/\bopt\/([\w\.]+)/i],[v,[m,Ve+" Touch"]],[/coc_coc\w+\/([\w\.]+)/i],[v,[m,"Coc Coc"]],[/dolfin\/([\w\.]+)/i],[v,[m,"Dolphin"]],[/coast\/([\w\.]+)/i],[v,[m,Ve+" Coast"]],[/miuibrowser\/([\w\.]+)/i],[v,[m,"MIUI "+Te]],[/fxios\/([-\w\.]+)/i],[v,[m,Q]],[/\bqihu|(qi?ho?o?|360)browser/i],[[m,"360 "+Te]],[/(oculus|sailfish|huawei|vivo)browser\/([\w\.]+)/i],[[m,/(.+)/,"$1 "+Te],v],[/samsungbrowser\/([\w\.]+)/i],[v,[m,je+" Internet"]],[/(comodo_dragon)\/([\w\.]+)/i],[[m,/_/g," "],v],[/metasr[\/ ]?([\d\.]+)/i],[v,[m,"Sogou Explorer"]],[/(sogou)mo\w+\/([\d\.]+)/i],[[m,"Sogou Mobile"],v],[/(electron)\/([\w\.]+) safari/i,/(tesla)(?: qtcarbrowser|\/(20\d\d\.[-\w\.]+))/i,/m?(qqbrowser|2345Explorer)[\/ ]?([\w\.]+)/i],[m,v],[/(lbbrowser)/i,/\[(linkedin)app\]/i],[m],[/((?:fban\/fbios|fb_iab\/fb4a)(?!.+fbav)|;fbav\/([\w\.]+);)/i],[[m,Z],v],[/(Klarna)\/([\w\.]+)/i,/(kakao(?:talk|story))[\/ ]([\w\.]+)/i,/(naver)\(.*?(\d+\.[\w\.]+).*\)/i,/safari (line)\/([\w\.]+)/i,/\b(line)\/([\w\.]+)\/iab/i,/(alipay)client\/([\w\.]+)/i,/(chromium|instagram|snapchat)[\/ ]([-\w\.]+)/i],[m,v],[/\bgsa\/([\w\.]+) .*safari\//i],[v,[m,"GSA"]],[/musical_ly(?:.+app_?version\/|_)([\w\.]+)/i],[v,[m,"TikTok"]],[/headlesschrome(?:\/([\w\.]+)| )/i],[v,[m,H+" Headless"]],[/ wv\).+(chrome)\/([\w\.]+)/i],[[m,H+" WebView"],v],[/droid.+ version\/([\w\.]+)\b.+(?:mobile safari|safari)/i],[v,[m,"Android "+Te]],[/(chrome|omniweb|arora|[tizenoka]{5} ?browser)\/v?([\w\.]+)/i],[m,v],[/version\/([\w\.\,]+) .*mobile\/\w+ (safari)/i],[v,[m,"Mobile Safari"]],[/version\/([\w(\.|\,)]+) .*(mobile ?safari|safari)/i],[v,m],[/webkit.+?(mobile ?safari|safari)(\/[\w\.]+)/i],[m,[v,Re,R]],[/(webkit|khtml)\/([\w\.]+)/i],[m,v],[/(navigator|netscape\d?)\/([-\w\.]+)/i],[[m,"Netscape"],v],[/mobile vr; rv:([\w\.]+)\).+firefox/i],[v,[m,Q+" Reality"]],[/ekiohf.+(flow)\/([\w\.]+)/i,/(swiftfox)/i,/(icedragon|iceweasel|camino|chimera|fennec|maemo browser|minimo|conkeror|klar)[\/ ]?([\w\.\+]+)/i,/(seamonkey|k-meleon|icecat|iceape|firebird|phoenix|palemoon|basilisk|waterfox)\/([-\w\.]+)$/i,/(firefox)\/([\w\.]+)/i,/(mozilla)\/([\w\.]+) .+rv\:.+gecko\/\d+/i,/(polaris|lynx|dillo|icab|doris|amaya|w3m|netsurf|sleipnir|obigo|mosaic|(?:go|ice|up)[\. ]?browser)[-\/ ]?v?([\w\.]+)/i,/(links) \(([\w\.]+)/i,/panasonic;(viera)/i],[m,v],[/(cobalt)\/([\w\.]+)/i],[m,[v,/master.|lts./,""]]],cpu:[[/(?:(amd|x(?:(?:86|64)[-_])?|wow|win)64)[;\)]/i],[[x,"amd64"]],[/(ia32(?=;))/i],[[x,J]],[/((?:i[346]|x)86)[;\)]/i],[[x,"ia32"]],[/\b(aarch64|arm(v?8e?l?|_?64))\b/i],[[x,"arm64"]],[/\b(arm(?:v[67])?ht?n?[fl]p?)\b/i],[[x,"armhf"]],[/windows (ce|mobile); ppc;/i],[[x,"arm"]],[/((?:ppc|powerpc)(?:64)?)(?: mac|;|\))/i],[[x,/ower/,s,J]],[/(sun4\w)[;\)]/i],[[x,"sparc"]],[/((?:avr32|ia64(?=;))|68k(?=\))|\barm(?=v(?:[1-7]|[5-7]1)l?|;|eabi)|(?=atmel )avr|(?:irix|mips|sparc)(?:64)?\b|pa-risc)/i],[[x,J]]],device:[[/\b(sch-i[89]0\d|shw-m380s|sm-[ptx]\w{2,4}|gt-[pn]\d{2,4}|sgh-t8[56]9|nexus 10)/i],[d,[y,je],[_,E]],[/\b((?:s[cgp]h|gt|sm)-\w+|sc[g-]?[\d]+a?|galaxy nexus)/i,/samsung[- ]([-\w]+)/i,/sec-(sgh\w+)/i],[d,[y,je],[_,M]],[/(?:\/|\()(ip(?:hone|od)[\w, ]*)(?:\/|;)/i],[d,[y,T],[_,M]],[/\((ipad);[-\w\),; ]+apple/i,/applecoremedia\/[\w\.]+ \((ipad)/i,/\b(ipad)\d\d?,\d\d?[;\]].+ios/i],[d,[y,T],[_,E]],[/(macintosh);/i],[d,[y,T]],[/\b(sh-?[altvz]?\d\d[a-ekm]?)/i],[d,[y,he],[_,M]],[/\b((?:ag[rs][23]?|bah2?|sht?|btv)-a?[lw]\d{2})\b(?!.+d\/s)/i],[d,[y,ve],[_,E]],[/(?:huawei|honor)([-\w ]+)[;\)]/i,/\b(nexus 6p|\w{2,4}e?-[atu]?[ln][\dx][012359c][adn]?)\b(?!.+d\/s)/i],[d,[y,ve],[_,M]],[/\b(poco[\w ]+|m2\d{3}j\d\d[a-z]{2})(?: bui|\))/i,/\b; (\w+) build\/hm\1/i,/\b(hm[-_ ]?note?[_ ]?(?:\d\w)?) bui/i,/\b(redmi[\-_ ]?(?:note|k)?[\w_ ]+)(?: bui|\))/i,/oid[^\)]+; (m?[12][0-389][01]\w{3,6}[c-y])( bui|; wv|\))/i,/\b(mi[-_ ]?(?:a\d|one|one[_ ]plus|note lte|max|cc)?[_ ]?(?:\d?\w?)[_ ]?(?:plus|se|lite)?)(?: bui|\))/i],[[d,/_/g," "],[y,Ge],[_,M]],[/oid[^\)]+; (2\d{4}(283|rpbf)[cgl])( bui|\))/i,/\b(mi[-_ ]?(?:pad)(?:[\w_ ]+))(?: bui|\))/i],[[d,/_/g," "],[y,Ge],[_,E]],[/; (\w+) bui.+ oppo/i,/\b(cph[12]\d{3}|p(?:af|c[al]|d\w|e[ar])[mt]\d0|x9007|a101op)\b/i],[d,[y,"OPPO"],[_,M]],[/vivo (\w+)(?: bui|\))/i,/\b(v[12]\d{3}\w?[at])(?: bui|;)/i],[d,[y,"Vivo"],[_,M]],[/\b(rmx[1-3]\d{3})(?: bui|;|\))/i],[d,[y,"Realme"],[_,M]],[/\b(milestone|droid(?:[2-4x]| (?:bionic|x2|pro|razr))?:?( 4g)?)\b[\w ]+build\//i,/\bmot(?:orola)?[- ](\w*)/i,/((?:moto[\w\(\) ]+|xt\d{3,4}|nexus 6)(?= bui|\)))/i],[d,[y,Se],[_,M]],[/\b(mz60\d|xoom[2 ]{0,2}) build\//i],[d,[y,Se],[_,E]],[/((?=lg)?[vl]k\-?\d{3}) bui| 3\.[-\w; ]{10}lg?-([06cv9]{3,4})/i],[d,[y,be],[_,E]],[/(lm(?:-?f100[nv]?|-[\w\.]+)(?= bui|\))|nexus [45])/i,/\blg[-e;\/ ]+((?!browser|netcast|android tv)\w+)/i,/\blg-?([\d\w]+) bui/i],[d,[y,be],[_,M]],[/(ideatab[-\w ]+)/i,/lenovo ?(s[56]000[-\w]+|tab(?:[\w ]+)|yt[-\d\w]{6}|tb[-\d\w]{6})/i],[d,[y,"Lenovo"],[_,E]],[/(?:maemo|nokia).*(n900|lumia \d+)/i,/nokia[-_ ]?([-\w\.]*)/i],[[d,/_/g," "],[y,"Nokia"],[_,M]],[/(pixel c)\b/i],[d,[y,Me],[_,E]],[/droid.+; (pixel[\daxl ]{0,6})(?: bui|\))/i],[d,[y,Me],[_,M]],[/droid.+ (a?\d[0-2]{2}so|[c-g]\d{4}|so[-gl]\w+|xq-a\w[4-7][12])(?= bui|\).+chrome\/(?![1-6]{0,1}\d\.))/i],[d,[y,Pe],[_,M]],[/sony tablet [ps]/i,/\b(?:sony)?sgp\w+(?: bui|\))/i],[[d,"Xperia Tablet"],[y,Pe],[_,E]],[/ (kb2005|in20[12]5|be20[12][59])\b/i,/(?:one)?(?:plus)? (a\d0\d\d)(?: b|\))/i],[d,[y,"OnePlus"],[_,M]],[/(alexa)webm/i,/(kf[a-z]{2}wi|aeo[c-r]{2})( bui|\))/i,/(kf[a-z]+)( bui|\)).+silk\//i],[d,[y,se],[_,E]],[/((?:sd|kf)[0349hijorstuw]+)( bui|\)).+silk\//i],[[d,/(.+)/g,"Fire Phone $1"],[y,se],[_,M]],[/(playbook);[-\w\),; ]+(rim)/i],[d,y,[_,E]],[/\b((?:bb[a-f]|st[hv])100-\d)/i,/\(bb10; (\w+)/i],[d,[y,ne],[_,M]],[/(?:\b|asus_)(transfo[prime ]{4,10} \w+|eeepc|slider \w+|nexus 7|padfone|p00[cj])/i],[d,[y,N],[_,E]],[/ (z[bes]6[027][012][km][ls]|zenfone \d\w?)\b/i],[d,[y,N],[_,M]],[/(nexus 9)/i],[d,[y,"HTC"],[_,E]],[/(htc)[-;_ ]{1,2}([\w ]+(?=\)| bui)|\w+)/i,/(zte)[- ]([\w ]+?)(?: bui|\/|\))/i,/(alcatel|geeksphone|nexian|panasonic(?!(?:;|\.))|sony(?!-bra))[-_ ]?([-\w]*)/i],[y,[d,/_/g," "],[_,M]],[/droid.+; ([ab][1-7]-?[0178a]\d\d?)/i],[d,[y,"Acer"],[_,E]],[/droid.+; (m[1-5] note) bui/i,/\bmz-([-\w]{2,})/i],[d,[y,"Meizu"],[_,M]],[/; ((?:power )?armor(?:[\w ]{0,8}))(?: bui|\))/i],[d,[y,"Ulefone"],[_,M]],[/(blackberry|benq|palm(?=\-)|sonyericsson|acer|asus|dell|meizu|motorola|polytron|infinix|tecno)[-_ ]?([-\w]*)/i,/(hp) ([\w ]+\w)/i,/(asus)-?(\w+)/i,/(microsoft); (lumia[\w ]+)/i,/(lenovo)[-_ ]?([-\w]+)/i,/(jolla)/i,/(oppo) ?([\w ]+) bui/i],[y,d,[_,M]],[/(kobo)\s(ereader|touch)/i,/(archos) (gamepad2?)/i,/(hp).+(touchpad(?!.+tablet)|tablet)/i,/(kindle)\/([\w\.]+)/i,/(nook)[\w ]+build\/(\w+)/i,/(dell) (strea[kpr\d ]*[\dko])/i,/(le[- ]+pan)[- ]+(\w{1,9}) bui/i,/(trinity)[- ]*(t\d{3}) bui/i,/(gigaset)[- ]+(q\w{1,9}) bui/i,/(vodafone) ([\w ]+)(?:\)| bui)/i],[y,d,[_,E]],[/(surface duo)/i],[d,[y,Ie],[_,E]],[/droid [\d\.]+; (fp\du?)(?: b|\))/i],[d,[y,"Fairphone"],[_,M]],[/(u304aa)/i],[d,[y,"AT&T"],[_,M]],[/\bsie-(\w*)/i],[d,[y,"Siemens"],[_,M]],[/\b(rct\w+) b/i],[d,[y,"RCA"],[_,E]],[/\b(venue[\d ]{2,7}) b/i],[d,[y,"Dell"],[_,E]],[/\b(q(?:mv|ta)\w+) b/i],[d,[y,"Verizon"],[_,E]],[/\b(?:barnes[& ]+noble |bn[rt])([\w\+ ]*) b/i],[d,[y,"Barnes & Noble"],[_,E]],[/\b(tm\d{3}\w+) b/i],[d,[y,"NuVision"],[_,E]],[/\b(k88) b/i],[d,[y,"ZTE"],[_,E]],[/\b(nx\d{3}j) b/i],[d,[y,"ZTE"],[_,M]],[/\b(gen\d{3}) b.+49h/i],[d,[y,"Swiss"],[_,M]],[/\b(zur\d{3}) b/i],[d,[y,"Swiss"],[_,E]],[/\b((zeki)?tb.*\b) b/i],[d,[y,"Zeki"],[_,E]],[/\b([yr]\d{2}) b/i,/\b(dragon[- ]+touch |dt)(\w{5}) b/i],[[y,"Dragon Touch"],d,[_,E]],[/\b(ns-?\w{0,9}) b/i],[d,[y,"Insignia"],[_,E]],[/\b((nxa|next)-?\w{0,9}) b/i],[d,[y,"NextBook"],[_,E]],[/\b(xtreme\_)?(v(1[045]|2[015]|[3469]0|7[05])) b/i],[[y,"Voice"],d,[_,M]],[/\b(lvtel\-)?(v1[12]) b/i],[[y,"LvTel"],d,[_,M]],[/\b(ph-1) /i],[d,[y,"Essential"],[_,M]],[/\b(v(100md|700na|7011|917g).*\b) b/i],[d,[y,"Envizen"],[_,E]],[/\b(trio[-\w\. ]+) b/i],[d,[y,"MachSpeed"],[_,E]],[/\btu_(1491) b/i],[d,[y,"Rotor"],[_,E]],[/(shield[\w ]+) b/i],[d,[y,"Nvidia"],[_,E]],[/(sprint) (\w+)/i],[y,d,[_,M]],[/(kin\.[onetw]{3})/i],[[d,/\./g," "],[y,Ie],[_,M]],[/droid.+; (cc6666?|et5[16]|mc[239][23]x?|vc8[03]x?)\)/i],[d,[y,X],[_,E]],[/droid.+; (ec30|ps20|tc[2-8]\d[kx])\)/i],[d,[y,X],[_,M]],[/smart-tv.+(samsung)/i],[y,[_,O]],[/hbbtv.+maple;(\d+)/i],[[d,/^/,"SmartTV"],[y,je],[_,O]],[/(nux; netcast.+smarttv|lg (netcast\.tv-201\d|android tv))/i],[[y,be],[_,O]],[/(apple) ?tv/i],[y,[d,T+" TV"],[_,O]],[/crkey/i],[[d,H+"cast"],[y,Me],[_,O]],[/droid.+aft(\w+)( bui|\))/i],[d,[y,se],[_,O]],[/\(dtv[\);].+(aquos)/i,/(aquos-tv[\w ]+)\)/i],[d,[y,he],[_,O]],[/(bravia[\w ]+)( bui|\))/i],[d,[y,Pe],[_,O]],[/(mitv-\w{5}) bui/i],[d,[y,Ge],[_,O]],[/Hbbtv.*(technisat) (.*);/i],[y,d,[_,O]],[/\b(roku)[\dx]*[\)\/]((?:dvp-)?[\d\.]*)/i,/hbbtv\/\d+\.\d+\.\d+ +\([\w\+ ]*; *([\w\d][^;]*);([^;]*)/i],[[y,j],[d,j],[_,O]],[/\b(android tv|smart[- ]?tv|opera tv|tv; rv:)\b/i],[[_,O]],[/(ouya)/i,/(nintendo) ([wids3utch]+)/i],[y,d,[_,w]],[/droid.+; (shield) bui/i],[d,[y,"Nvidia"],[_,w]],[/(playstation [345portablevi]+)/i],[d,[y,Pe],[_,w]],[/\b(xbox(?: one)?(?!; xbox))[\); ]/i],[d,[y,Ie],[_,w]],[/((pebble))app/i],[y,d,[_,P]],[/(watch)(?: ?os[,\/]|\d,\d\/)[\d\.]+/i],[d,[y,T],[_,P]],[/droid.+; (glass) \d/i],[d,[y,Me],[_,P]],[/droid.+; (wt63?0{2,3})\)/i],[d,[y,X],[_,P]],[/(quest( 2| pro)?)/i],[d,[y,Z],[_,P]],[/(tesla)(?: qtcarbrowser|\/[-\w\.]+)/i],[y,[_,U]],[/(aeobc)\b/i],[d,[y,se],[_,U]],[/droid .+?; ([^;]+?)(?: bui|; wv\)|\) applew).+? mobile safari/i],[d,[_,M]],[/droid .+?; ([^;]+?)(?: bui|\) applew).+?(?! mobile) safari/i],[d,[_,E]],[/\b((tablet|tab)[;\/]|focus\/\d(?!.+mobile))/i],[[_,E]],[/(phone|mobile(?:[;\/]| [ \w\/\.]*safari)|pda(?=.+windows ce))/i],[[_,M]],[/(android[-\w\. ]{0,9});.+buil/i],[d,[y,"Generic"]]],engine:[[/windows.+ edge\/([\w\.]+)/i],[v,[m,re+"HTML"]],[/webkit\/537\.36.+chrome\/(?!27)([\w\.]+)/i],[v,[m,"Blink"]],[/(presto)\/([\w\.]+)/i,/(webkit|trident|netfront|netsurf|amaya|lynx|w3m|goanna)\/([\w\.]+)/i,/ekioh(flow)\/([\w\.]+)/i,/(khtml|tasman|links)[\/ ]\(?([\w\.]+)/i,/(icab)[\/ ]([23]\.[\d\.]+)/i,/\b(libweb)/i],[m,v],[/rv\:([\w\.]{1,9})\b.+(gecko)/i],[v,m]],os:[[/microsoft (windows) (vista|xp)/i],[m,v],[/(windows (?:phone(?: os)?|mobile))[\/ ]?([\d\.\w ]*)/i],[m,[v,Re,A]],[/windows nt 6\.2; (arm)/i,/windows[\/ ]?([ntce\d\. ]+\w)(?!.+xbox)/i,/(?:win(?=3|9|n)|win 9x )([nt\d\.]+)/i],[[v,Re,A],[m,"Windows"]],[/ip[honead]{2,4}\b(?:.*os ([\w]+) like mac|; opera)/i,/(?:ios;fbsv\/|iphone.+ios[\/ ])([\d\.]+)/i,/cfnetwork\/.+darwin/i],[[v,/_/g,"."],[m,"iOS"]],[/(mac os x) ?([\w\. ]*)/i,/(macintosh|mac_powerpc\b)(?!.+haiku)/i],[[m,ue],[v,/_/g,"."]],[/droid ([\w\.]+)\b.+(android[- ]x86|harmonyos)/i],[v,m],[/(android|webos|qnx|bada|rim tablet os|maemo|meego|sailfish)[-\/ ]?([\w\.]*)/i,/(blackberry)\w*\/([\w\.]*)/i,/(tizen|kaios)[\/ ]([\w\.]+)/i,/\((series40);/i],[m,v],[/\(bb(10);/i],[v,[m,ne]],[/(?:symbian ?os|symbos|s60(?=;)|series60)[-\/ ]?([\w\.]*)/i],[v,[m,"Symbian"]],[/mozilla\/[\d\.]+ \((?:mobile|tablet|tv|mobile; [\w ]+); rv:.+ gecko\/([\w\.]+)/i],[v,[m,Q+" OS"]],[/web0s;.+rt(tv)/i,/\b(?:hp)?wos(?:browser)?\/([\w\.]+)/i],[v,[m,"webOS"]],[/watch(?: ?os[,\/]|\d,\d\/)([\d\.]+)/i],[v,[m,"watchOS"]],[/crkey\/([\d\.]+)/i],[v,[m,H+"cast"]],[/(cros) [\w]+(?:\)| ([\w\.]+)\b)/i],[[m,$],v],[/panasonic;(viera)/i,/(netrange)mmh/i,/(nettv)\/(\d+\.[\w\.]+)/i,/(nintendo|playstation) ([wids345portablevuch]+)/i,/(xbox); +xbox ([^\);]+)/i,/\b(joli|palm)\b ?(?:os)?\/?([\w\.]*)/i,/(mint)[\/\(\) ]?(\w*)/i,/(mageia|vectorlinux)[; ]/i,/([kxln]?ubuntu|debian|suse|opensuse|gentoo|arch(?= linux)|slackware|fedora|mandriva|centos|pclinuxos|red ?hat|zenwalk|linpus|raspbian|plan 9|minix|risc os|contiki|deepin|manjaro|elementary os|sabayon|linspire)(?: gnu\/linux)?(?: enterprise)?(?:[- ]linux)?(?:-gnu)?[-\/ ]?(?!chrom|package)([-\w\.]*)/i,/(hurd|linux) ?([\w\.]*)/i,/(gnu) ?([\w\.]*)/i,/\b([-frentopcghs]{0,5}bsd|dragonfly)[\/ ]?(?!amd|[ix346]{1,2}86)([\w\.]*)/i,/(haiku) (\w+)/i],[m,v],[/(sunos) ?([\w\.\d]*)/i],[[m,"Solaris"],v],[/((?:open)?solaris)[-\/ ]?([\w\.]*)/i,/(aix) ((\d)(?=\.|\)| )[\w\.])*/i,/\b(beos|os\/2|amigaos|morphos|openvms|fuchsia|hp-ux|serenityos)/i,/(unix) ?([\w\.]*)/i],[m,v]]},ie=function(oe,xe){if(typeof oe===h&&(xe=oe,oe=n),!(this instanceof ie))return new ie(oe,xe).getResult();var pe=typeof t!==u&&t.navigator?t.navigator:n,_e=oe||(pe&&pe.userAgent?pe.userAgent:s),Fe=pe&&pe.userAgentData?pe.userAgentData:n,q=xe?me(k,xe):k,Ue=pe&&pe.userAgent==_e;return this.getBrowser=function(){var Ee={};return Ee[m]=n,Ee[v]=n,Ce.call(Ee,_e,q.browser),Ee[g]=ee(Ee[v]),Ue&&pe&&pe.brave&&typeof pe.brave.isBrave==c&&(Ee[m]="Brave"),Ee},this.getCPU=function(){var Ee={};return Ee[x]=n,Ce.call(Ee,_e,q.cpu),Ee},this.getDevice=function(){var Ee={};return Ee[y]=n,Ee[d]=n,Ee[_]=n,Ce.call(Ee,_e,q.device),Ue&&!Ee[_]&&Fe&&Fe.mobile&&(Ee[_]=M),Ue&&Ee[d]=="Macintosh"&&pe&&typeof pe.standalone!==u&&pe.maxTouchPoints&&pe.maxTouchPoints>2&&(Ee[d]="iPad",Ee[_]=E),Ee},this.getEngine=function(){var Ee={};return Ee[m]=n,Ee[v]=n,Ce.call(Ee,_e,q.engine),Ee},this.getOS=function(){var Ee={};return Ee[m]=n,Ee[v]=n,Ce.call(Ee,_e,q.os),Ue&&!Ee[m]&&Fe&&Fe.platform!="Unknown"&&(Ee[m]=Fe.platform.replace(/chrome os/i,$).replace(/macos/i,ue)),Ee},this.getResult=function(){return{ua:this.getUA(),browser:this.getBrowser(),engine:this.getEngine(),os:this.getOS(),device:this.getDevice(),cpu:this.getCPU()}},this.getUA=function(){return _e},this.setUA=function(Ee){return _e=typeof Ee===p&&Ee.length>V?j(Ee,V):Ee,this},this.setUA(_e),this};ie.VERSION=i,ie.BROWSER=I([m,v,g]),ie.CPU=I([x]),ie.DEVICE=I([d,y,_,w,M,O,E,P,U]),ie.ENGINE=ie.OS=I([m,v]),r.exports&&(e=r.exports=ie),e.UAParser=ie;var te=typeof t!==u&&(t.jQuery||t.Zepto);if(te&&!te.ua){var de=new ie;te.ua=de.getResult(),te.ua.get=function(){return de.getUA()},te.ua.set=function(oe){de.setUA(oe);var xe=de.getResult();for(var pe in xe)te.ua[pe]=xe[pe]}}})(typeof window=="object"?window:ri)})(Ud,Ud.exports);var FD=Ud.exports;const BD=D1(FD);class zD{constructor(){this.parser=new BD,this.type=this.determineDeviceType(this.parser.getDevice().type),this.isMobile=this.type!=="desktop",this.isPhone=this.type==="phone",this.isTablet=this.type==="tablet",this.isDesktop=this.type==="desktop",this.isMixBlendModeUnsupported=typeof window.getComputedStyle(document.body).mixBlendMode>"u",this.setHTMLClass()}determineDeviceType(e){return e==="mobile"?"phone":["desktop","phone","tablet"].includes(e)?e:"desktop"}setHTMLClass(){document.documentElement.classList.add(this.isMobile?"mobile":"desktop")}isWebGLAvailable(){if(!this.webGLAvailable){const e=document.createElement("canvas");this.webGLAvailable=!!window.WebGLRenderingContext&&!!(e.getContext("webgl")||e.getContext("experimental-webgl"))}return this.webGLAvailable}isWebPSupported(){if(this.webPSupported===!1){const e=document.createElement("canvas");e.getContext("2d")?this.webPSupported=e.toDataURL("image/webp").startsWith("data:image/webp"):this.webPSupported=!1}return this.webPSupported}isAppBrowser(){const e=navigator.userAgent;return/FBAN|FBAV|Twitter/.test(e)}check({onErrorWebGL:e,onSuccess:t}){this.isWebGLAvailable()?t():e()}}new zD;var Ly={exports:{}},N0=typeof document<"u"?document.createElement("p").style:{},O0=["O","ms","Moz","Webkit"],Uf=/([A-Z])/g,Nf={};function Py(r){if(r=r.replace(/-([a-z])/g,function(i,s){return s.toUpperCase()}),N0[r]!==void 0)return r;for(var e=r.charAt(0).toUpperCase()+r.slice(1),t=O0.length;t--;){var n=O0[t]+e;if(N0[n]!==void 0)return n}return r}function kD(r){return r in Nf?Nf[r]:Nf[r]=Py(r)}function GD(r){return r=Py(r),Uf.test(r)&&(r="-"+r.replace(Uf,"-$1"),Uf.lastIndex=0),r.toLowerCase()}Ly.exports=kD;Ly.exports.dash=GD;(function(){function r(){for(var n=arguments.length,i=0;i<n;i++){var s=i<0||arguments.length<=i?void 0:arguments[i];s.nodeType===1||s.nodeType===11?this.appendChild(s):this.appendChild(document.createTextNode(String(s)))}}function e(){for(;this.lastChild;)this.removeChild(this.lastChild);arguments.length&&this.append.apply(this,arguments)}function t(){for(var n=this.parentNode,i=arguments.length,s=new Array(i),o=0;o<i;o++)s[o]=arguments[o];var c=s.length;if(n)for(c||n.removeChild(this);c--;){var u=s[c];typeof u!="object"?u=this.ownerDocument.createTextNode(u):u.parentNode&&u.parentNode.removeChild(u),c?n.insertBefore(this.previousSibling,u):n.replaceChild(u,this)}}typeof Element<"u"&&(Element.prototype.append||(Element.prototype.append=r,DocumentFragment.prototype.append=r),Element.prototype.replaceChildren||(Element.prototype.replaceChildren=e,DocumentFragment.prototype.replaceChildren=e),Element.prototype.replaceWith||(Element.prototype.replaceWith=t,DocumentFragment.prototype.replaceWith=t))})();function HD(r,e){return Object.getOwnPropertyNames(Object(r)).reduce(function(t,n){var i=Object.getOwnPropertyDescriptor(Object(r),n),s=Object.getOwnPropertyDescriptor(Object(e),n);return Object.defineProperty(t,n,s||i)},{})}var VD={splitClass:"",lineClass:"line",wordClass:"word",charClass:"char",types:["lines","words","chars"],absolute:!1,tagName:"div"};HD(VD,{});function WD(){this.__data__=[],this.size=0}var XD=WD;function qD(r,e){return r===e||r!==r&&e!==e}var YD=qD,$D=YD;function ZD(r,e){for(var t=r.length;t--;)if($D(r[t][0],e))return t;return-1}var Uu=ZD,JD=Uu,KD=Array.prototype,jD=KD.splice;function QD(r){var e=this.__data__,t=JD(e,r);if(t<0)return!1;var n=e.length-1;return t==n?e.pop():jD.call(e,t,1),--this.size,!0}var eU=QD,tU=Uu;function nU(r){var e=this.__data__,t=tU(e,r);return t<0?void 0:e[t][1]}var iU=nU,rU=Uu;function sU(r){return rU(this.__data__,r)>-1}var aU=sU,oU=Uu;function lU(r,e){var t=this.__data__,n=oU(t,r);return n<0?(++this.size,t.push([r,e])):t[n][1]=e,this}var cU=lU,uU=XD,hU=eU,fU=iU,dU=aU,pU=cU;function Na(r){var e=-1,t=r==null?0:r.length;for(this.clear();++e<t;){var n=r[e];this.set(n[0],n[1])}}Na.prototype.clear=uU;Na.prototype.delete=hU;Na.prototype.get=fU;Na.prototype.has=dU;Na.prototype.set=pU;var Nu=Na,mU=Nu;function gU(){this.__data__=new mU,this.size=0}var _U=gU;function vU(r){var e=this.__data__,t=e.delete(r);return this.size=e.size,t}var xU=vU;function yU(r){return this.__data__.get(r)}var bU=yU;function MU(r){return this.__data__.has(r)}var SU=MU,wU=mr,EU=wU["__core-js_shared__"],AU=EU,Of=AU,F0=function(){var r=/[^.]+$/.exec(Of&&Of.keys&&Of.keys.IE_PROTO||"");return r?"Symbol(src)_1."+r:""}();function TU(r){return!!F0&&F0 in r}var CU=TU,RU=Function.prototype,LU=RU.toString;function PU(r){if(r!=null){try{return LU.call(r)}catch{}try{return r+""}catch{}}return""}var Iy=PU,IU=yT,DU=CU,UU=Q0,NU=Iy,OU=/[\\^$.*+?()[\]{}|]/g,FU=/^\[object .+?Constructor\]$/,BU=Function.prototype,zU=Object.prototype,kU=BU.toString,GU=zU.hasOwnProperty,HU=RegExp("^"+kU.call(GU).replace(OU,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$");function VU(r){if(!UU(r)||DU(r))return!1;var e=IU(r)?HU:FU;return e.test(NU(r))}var WU=VU;function XU(r,e){return r==null?void 0:r[e]}var qU=XU,YU=WU,$U=qU;function ZU(r,e){var t=$U(r,e);return YU(t)?t:void 0}var Oa=ZU,JU=Oa,KU=mr,jU=JU(KU,"Map"),Tp=jU,QU=Oa,eN=QU(Object,"create"),Ou=eN,B0=Ou;function tN(){this.__data__=B0?B0(null):{},this.size=0}var nN=tN;function iN(r){var e=this.has(r)&&delete this.__data__[r];return this.size-=e?1:0,e}var rN=iN,sN=Ou,aN="__lodash_hash_undefined__",oN=Object.prototype,lN=oN.hasOwnProperty;function cN(r){var e=this.__data__;if(sN){var t=e[r];return t===aN?void 0:t}return lN.call(e,r)?e[r]:void 0}var uN=cN,hN=Ou,fN=Object.prototype,dN=fN.hasOwnProperty;function pN(r){var e=this.__data__;return hN?e[r]!==void 0:dN.call(e,r)}var mN=pN,gN=Ou,_N="__lodash_hash_undefined__";function vN(r,e){var t=this.__data__;return this.size+=this.has(r)?0:1,t[r]=gN&&e===void 0?_N:e,this}var xN=vN,yN=nN,bN=rN,MN=uN,SN=mN,wN=xN;function Fa(r){var e=-1,t=r==null?0:r.length;for(this.clear();++e<t;){var n=r[e];this.set(n[0],n[1])}}Fa.prototype.clear=yN;Fa.prototype.delete=bN;Fa.prototype.get=MN;Fa.prototype.has=SN;Fa.prototype.set=wN;var EN=Fa,z0=EN,AN=Nu,TN=Tp;function CN(){this.size=0,this.__data__={hash:new z0,map:new(TN||AN),string:new z0}}var RN=CN;function LN(r){var e=typeof r;return e=="string"||e=="number"||e=="symbol"||e=="boolean"?r!=="__proto__":r===null}var PN=LN,IN=PN;function DN(r,e){var t=r.__data__;return IN(e)?t[typeof e=="string"?"string":"hash"]:t.map}var Fu=DN,UN=Fu;function NN(r){var e=UN(this,r).delete(r);return this.size-=e?1:0,e}var ON=NN,FN=Fu;function BN(r){return FN(this,r).get(r)}var zN=BN,kN=Fu;function GN(r){return kN(this,r).has(r)}var HN=GN,VN=Fu;function WN(r,e){var t=VN(this,r),n=t.size;return t.set(r,e),this.size+=t.size==n?0:1,this}var XN=WN,qN=RN,YN=ON,$N=zN,ZN=HN,JN=XN;function Ba(r){var e=-1,t=r==null?0:r.length;for(this.clear();++e<t;){var n=r[e];this.set(n[0],n[1])}}Ba.prototype.clear=qN;Ba.prototype.delete=YN;Ba.prototype.get=$N;Ba.prototype.has=ZN;Ba.prototype.set=JN;var Cp=Ba,KN=Nu,jN=Tp,QN=Cp,eO=200;function tO(r,e){var t=this.__data__;if(t instanceof KN){var n=t.__data__;if(!jN||n.length<eO-1)return n.push([r,e]),this.size=++t.size,this;t=this.__data__=new QN(n)}return t.set(r,e),this.size=t.size,this}var nO=tO,iO=Nu,rO=_U,sO=xU,aO=bU,oO=SU,lO=nO;function Qo(r){var e=this.__data__=new iO(r);this.size=e.size}Qo.prototype.clear=rO;Qo.prototype.delete=sO;Qo.prototype.get=aO;Qo.prototype.has=oO;Qo.prototype.set=lO;var cO="__lodash_hash_undefined__";function uO(r){return this.__data__.set(r,cO),this}var hO=uO;function fO(r){return this.__data__.has(r)}var dO=fO,pO=Cp,mO=hO,gO=dO;function Nd(r){var e=-1,t=r==null?0:r.length;for(this.__data__=new pO;++e<t;)this.add(r[e])}Nd.prototype.add=Nd.prototype.push=mO;Nd.prototype.has=gO;var _O=mr;_O.Uint8Array;var k0=nu,G0=k0?k0.prototype:void 0;G0&&G0.valueOf;var vO=Oa,xO=mr,yO=vO(xO,"DataView"),bO=yO,MO=Oa,SO=mr,wO=MO(SO,"Promise"),EO=wO,AO=Oa,TO=mr,CO=AO(TO,"Set"),RO=CO,LO=Oa,PO=mr,IO=LO(PO,"WeakMap"),DO=IO,Od=bO,Fd=Tp,Bd=EO,zd=RO,kd=DO,Dy=Gd,za=Iy,H0="[object Map]",UO="[object Object]",V0="[object Promise]",W0="[object Set]",X0="[object WeakMap]",q0="[object DataView]",NO=za(Od),OO=za(Fd),FO=za(Bd),BO=za(zd),zO=za(kd),_a=Dy;(Od&&_a(new Od(new ArrayBuffer(1)))!=q0||Fd&&_a(new Fd)!=H0||Bd&&_a(Bd.resolve())!=V0||zd&&_a(new zd)!=W0||kd&&_a(new kd)!=X0)&&(_a=function(r){var e=Dy(r),t=e==UO?r.constructor:void 0,n=t?za(t):"";if(n)switch(n){case NO:return q0;case OO:return H0;case FO:return V0;case BO:return W0;case zO:return X0}return e});var Uy=Cp,kO="Expected a function";function Rp(r,e){if(typeof r!="function"||e!=null&&typeof e!="function")throw new TypeError(kO);var t=function(){var n=arguments,i=e?e.apply(this,n):n[0],s=t.cache;if(s.has(i))return s.get(i);var o=r.apply(this,n);return t.cache=s.set(i,o)||s,o};return t.cache=new(Rp.Cache||Uy),t}Rp.Cache=Uy;var GO=Rp,HO=GO,VO=500;function WO(r){var e=HO(r,function(n){return t.size===VO&&t.clear(),n}),t=e.cache;return e}var XO=WO,qO=XO,YO=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,$O=/\\(\\)?/g;qO(function(r){var e=[];return r.charCodeAt(0)===46&&e.push(""),r.replace(YO,function(t,n,i,s){e.push(i?s.replace($O,"$1"):n||t)}),e});var Y0=nu,$0=Y0?Y0.prototype:void 0;$0&&$0.toString;
